//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Goods2 {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("TransportDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class TransportDataSet : global::System.Data.DataSet {
        
        private АвтомобилиDataTable tableАвтомобили;
        
        private Виды_автомобилейDataTable tableВиды_автомобилей;
        
        private Виды_грузовDataTable tableВиды_грузов;
        
        private ГрузыDataTable tableГрузы;
        
        private ДолжностиDataTable tableДолжности;
        
        private Марки_автомобилейDataTable tableМарки_автомобилей;
        
        private РейсыDataTable tableРейсы;
        
        private СотрудникиDataTable tableСотрудники;
        
        private АвтопаркDataTable tableАвтопарк;
        
        private ЗаказыDataTable tableЗаказы;
        
        private Отдел_кадровDataTable tableОтдел_кадров;
        
        private Перевозимые_грузыDataTable tableПеревозимые_грузы;
        
        private ТранспортировкаDataTable tableТранспортировка;
        
        private global::System.Data.DataRelation relationFK_Автомобили_Виды_автомобилей;
        
        private global::System.Data.DataRelation relationFK_Автомобили_Марки_автомобилей;
        
        private global::System.Data.DataRelation relationFK_Автомобили_Рейсы;
        
        private global::System.Data.DataRelation relationFK_Грузы_Виды_грузов;
        
        private global::System.Data.DataRelation relationFK_Рейсы_Грузы;
        
        private global::System.Data.DataRelation relationFK_Рейсы_Сотрудники;
        
        private global::System.Data.DataRelation relationFK_Сотрудники_Должности;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public TransportDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected TransportDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Автомобили"] != null)) {
                    base.Tables.Add(new АвтомобилиDataTable(ds.Tables["Автомобили"]));
                }
                if ((ds.Tables["Виды_автомобилей"] != null)) {
                    base.Tables.Add(new Виды_автомобилейDataTable(ds.Tables["Виды_автомобилей"]));
                }
                if ((ds.Tables["Виды_грузов"] != null)) {
                    base.Tables.Add(new Виды_грузовDataTable(ds.Tables["Виды_грузов"]));
                }
                if ((ds.Tables["Грузы"] != null)) {
                    base.Tables.Add(new ГрузыDataTable(ds.Tables["Грузы"]));
                }
                if ((ds.Tables["Должности"] != null)) {
                    base.Tables.Add(new ДолжностиDataTable(ds.Tables["Должности"]));
                }
                if ((ds.Tables["Марки_автомобилей"] != null)) {
                    base.Tables.Add(new Марки_автомобилейDataTable(ds.Tables["Марки_автомобилей"]));
                }
                if ((ds.Tables["Рейсы"] != null)) {
                    base.Tables.Add(new РейсыDataTable(ds.Tables["Рейсы"]));
                }
                if ((ds.Tables["Сотрудники"] != null)) {
                    base.Tables.Add(new СотрудникиDataTable(ds.Tables["Сотрудники"]));
                }
                if ((ds.Tables["Автопарк"] != null)) {
                    base.Tables.Add(new АвтопаркDataTable(ds.Tables["Автопарк"]));
                }
                if ((ds.Tables["Заказы"] != null)) {
                    base.Tables.Add(new ЗаказыDataTable(ds.Tables["Заказы"]));
                }
                if ((ds.Tables["Отдел_кадров"] != null)) {
                    base.Tables.Add(new Отдел_кадровDataTable(ds.Tables["Отдел_кадров"]));
                }
                if ((ds.Tables["Перевозимые_грузы"] != null)) {
                    base.Tables.Add(new Перевозимые_грузыDataTable(ds.Tables["Перевозимые_грузы"]));
                }
                if ((ds.Tables["Транспортировка"] != null)) {
                    base.Tables.Add(new ТранспортировкаDataTable(ds.Tables["Транспортировка"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public АвтомобилиDataTable Автомобили {
            get {
                return this.tableАвтомобили;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Виды_автомобилейDataTable Виды_автомобилей {
            get {
                return this.tableВиды_автомобилей;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Виды_грузовDataTable Виды_грузов {
            get {
                return this.tableВиды_грузов;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ГрузыDataTable Грузы {
            get {
                return this.tableГрузы;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ДолжностиDataTable Должности {
            get {
                return this.tableДолжности;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Марки_автомобилейDataTable Марки_автомобилей {
            get {
                return this.tableМарки_автомобилей;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public РейсыDataTable Рейсы {
            get {
                return this.tableРейсы;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public СотрудникиDataTable Сотрудники {
            get {
                return this.tableСотрудники;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public АвтопаркDataTable Автопарк {
            get {
                return this.tableАвтопарк;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ЗаказыDataTable Заказы {
            get {
                return this.tableЗаказы;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Отдел_кадровDataTable Отдел_кадров {
            get {
                return this.tableОтдел_кадров;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Перевозимые_грузыDataTable Перевозимые_грузы {
            get {
                return this.tableПеревозимые_грузы;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ТранспортировкаDataTable Транспортировка {
            get {
                return this.tableТранспортировка;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            TransportDataSet cln = ((TransportDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Автомобили"] != null)) {
                    base.Tables.Add(new АвтомобилиDataTable(ds.Tables["Автомобили"]));
                }
                if ((ds.Tables["Виды_автомобилей"] != null)) {
                    base.Tables.Add(new Виды_автомобилейDataTable(ds.Tables["Виды_автомобилей"]));
                }
                if ((ds.Tables["Виды_грузов"] != null)) {
                    base.Tables.Add(new Виды_грузовDataTable(ds.Tables["Виды_грузов"]));
                }
                if ((ds.Tables["Грузы"] != null)) {
                    base.Tables.Add(new ГрузыDataTable(ds.Tables["Грузы"]));
                }
                if ((ds.Tables["Должности"] != null)) {
                    base.Tables.Add(new ДолжностиDataTable(ds.Tables["Должности"]));
                }
                if ((ds.Tables["Марки_автомобилей"] != null)) {
                    base.Tables.Add(new Марки_автомобилейDataTable(ds.Tables["Марки_автомобилей"]));
                }
                if ((ds.Tables["Рейсы"] != null)) {
                    base.Tables.Add(new РейсыDataTable(ds.Tables["Рейсы"]));
                }
                if ((ds.Tables["Сотрудники"] != null)) {
                    base.Tables.Add(new СотрудникиDataTable(ds.Tables["Сотрудники"]));
                }
                if ((ds.Tables["Автопарк"] != null)) {
                    base.Tables.Add(new АвтопаркDataTable(ds.Tables["Автопарк"]));
                }
                if ((ds.Tables["Заказы"] != null)) {
                    base.Tables.Add(new ЗаказыDataTable(ds.Tables["Заказы"]));
                }
                if ((ds.Tables["Отдел_кадров"] != null)) {
                    base.Tables.Add(new Отдел_кадровDataTable(ds.Tables["Отдел_кадров"]));
                }
                if ((ds.Tables["Перевозимые_грузы"] != null)) {
                    base.Tables.Add(new Перевозимые_грузыDataTable(ds.Tables["Перевозимые_грузы"]));
                }
                if ((ds.Tables["Транспортировка"] != null)) {
                    base.Tables.Add(new ТранспортировкаDataTable(ds.Tables["Транспортировка"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableАвтомобили = ((АвтомобилиDataTable)(base.Tables["Автомобили"]));
            if ((initTable == true)) {
                if ((this.tableАвтомобили != null)) {
                    this.tableАвтомобили.InitVars();
                }
            }
            this.tableВиды_автомобилей = ((Виды_автомобилейDataTable)(base.Tables["Виды_автомобилей"]));
            if ((initTable == true)) {
                if ((this.tableВиды_автомобилей != null)) {
                    this.tableВиды_автомобилей.InitVars();
                }
            }
            this.tableВиды_грузов = ((Виды_грузовDataTable)(base.Tables["Виды_грузов"]));
            if ((initTable == true)) {
                if ((this.tableВиды_грузов != null)) {
                    this.tableВиды_грузов.InitVars();
                }
            }
            this.tableГрузы = ((ГрузыDataTable)(base.Tables["Грузы"]));
            if ((initTable == true)) {
                if ((this.tableГрузы != null)) {
                    this.tableГрузы.InitVars();
                }
            }
            this.tableДолжности = ((ДолжностиDataTable)(base.Tables["Должности"]));
            if ((initTable == true)) {
                if ((this.tableДолжности != null)) {
                    this.tableДолжности.InitVars();
                }
            }
            this.tableМарки_автомобилей = ((Марки_автомобилейDataTable)(base.Tables["Марки_автомобилей"]));
            if ((initTable == true)) {
                if ((this.tableМарки_автомобилей != null)) {
                    this.tableМарки_автомобилей.InitVars();
                }
            }
            this.tableРейсы = ((РейсыDataTable)(base.Tables["Рейсы"]));
            if ((initTable == true)) {
                if ((this.tableРейсы != null)) {
                    this.tableРейсы.InitVars();
                }
            }
            this.tableСотрудники = ((СотрудникиDataTable)(base.Tables["Сотрудники"]));
            if ((initTable == true)) {
                if ((this.tableСотрудники != null)) {
                    this.tableСотрудники.InitVars();
                }
            }
            this.tableАвтопарк = ((АвтопаркDataTable)(base.Tables["Автопарк"]));
            if ((initTable == true)) {
                if ((this.tableАвтопарк != null)) {
                    this.tableАвтопарк.InitVars();
                }
            }
            this.tableЗаказы = ((ЗаказыDataTable)(base.Tables["Заказы"]));
            if ((initTable == true)) {
                if ((this.tableЗаказы != null)) {
                    this.tableЗаказы.InitVars();
                }
            }
            this.tableОтдел_кадров = ((Отдел_кадровDataTable)(base.Tables["Отдел_кадров"]));
            if ((initTable == true)) {
                if ((this.tableОтдел_кадров != null)) {
                    this.tableОтдел_кадров.InitVars();
                }
            }
            this.tableПеревозимые_грузы = ((Перевозимые_грузыDataTable)(base.Tables["Перевозимые_грузы"]));
            if ((initTable == true)) {
                if ((this.tableПеревозимые_грузы != null)) {
                    this.tableПеревозимые_грузы.InitVars();
                }
            }
            this.tableТранспортировка = ((ТранспортировкаDataTable)(base.Tables["Транспортировка"]));
            if ((initTable == true)) {
                if ((this.tableТранспортировка != null)) {
                    this.tableТранспортировка.InitVars();
                }
            }
            this.relationFK_Автомобили_Виды_автомобилей = this.Relations["FK_Автомобили_Виды_автомобилей"];
            this.relationFK_Автомобили_Марки_автомобилей = this.Relations["FK_Автомобили_Марки_автомобилей"];
            this.relationFK_Автомобили_Рейсы = this.Relations["FK_Автомобили_Рейсы"];
            this.relationFK_Грузы_Виды_грузов = this.Relations["FK_Грузы_Виды_грузов"];
            this.relationFK_Рейсы_Грузы = this.Relations["FK_Рейсы_Грузы"];
            this.relationFK_Рейсы_Сотрудники = this.Relations["FK_Рейсы_Сотрудники"];
            this.relationFK_Сотрудники_Должности = this.Relations["FK_Сотрудники_Должности"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "TransportDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/TransportDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableАвтомобили = new АвтомобилиDataTable();
            base.Tables.Add(this.tableАвтомобили);
            this.tableВиды_автомобилей = new Виды_автомобилейDataTable();
            base.Tables.Add(this.tableВиды_автомобилей);
            this.tableВиды_грузов = new Виды_грузовDataTable();
            base.Tables.Add(this.tableВиды_грузов);
            this.tableГрузы = new ГрузыDataTable();
            base.Tables.Add(this.tableГрузы);
            this.tableДолжности = new ДолжностиDataTable();
            base.Tables.Add(this.tableДолжности);
            this.tableМарки_автомобилей = new Марки_автомобилейDataTable();
            base.Tables.Add(this.tableМарки_автомобилей);
            this.tableРейсы = new РейсыDataTable();
            base.Tables.Add(this.tableРейсы);
            this.tableСотрудники = new СотрудникиDataTable();
            base.Tables.Add(this.tableСотрудники);
            this.tableАвтопарк = new АвтопаркDataTable();
            base.Tables.Add(this.tableАвтопарк);
            this.tableЗаказы = new ЗаказыDataTable();
            base.Tables.Add(this.tableЗаказы);
            this.tableОтдел_кадров = new Отдел_кадровDataTable();
            base.Tables.Add(this.tableОтдел_кадров);
            this.tableПеревозимые_грузы = new Перевозимые_грузыDataTable();
            base.Tables.Add(this.tableПеревозимые_грузы);
            this.tableТранспортировка = new ТранспортировкаDataTable();
            base.Tables.Add(this.tableТранспортировка);
            this.relationFK_Автомобили_Виды_автомобилей = new global::System.Data.DataRelation("FK_Автомобили_Виды_автомобилей", new global::System.Data.DataColumn[] {
                        this.tableВиды_автомобилей.КОД_ВИДА_АВТОМОБИЛЯColumn}, new global::System.Data.DataColumn[] {
                        this.tableАвтомобили.КОД_ВИДА_АВТОМОБИЛЯColumn}, false);
            this.Relations.Add(this.relationFK_Автомобили_Виды_автомобилей);
            this.relationFK_Автомобили_Марки_автомобилей = new global::System.Data.DataRelation("FK_Автомобили_Марки_автомобилей", new global::System.Data.DataColumn[] {
                        this.tableМарки_автомобилей.КОД_МАРКИColumn}, new global::System.Data.DataColumn[] {
                        this.tableАвтомобили.КОД_МАРКИColumn}, false);
            this.Relations.Add(this.relationFK_Автомобили_Марки_автомобилей);
            this.relationFK_Автомобили_Рейсы = new global::System.Data.DataRelation("FK_Автомобили_Рейсы", new global::System.Data.DataColumn[] {
                        this.tableРейсы.КОД_АВТОМОБИЛЯColumn}, new global::System.Data.DataColumn[] {
                        this.tableАвтомобили.КОД_АВТОМОБИЛЯColumn}, false);
            this.Relations.Add(this.relationFK_Автомобили_Рейсы);
            this.relationFK_Грузы_Виды_грузов = new global::System.Data.DataRelation("FK_Грузы_Виды_грузов", new global::System.Data.DataColumn[] {
                        this.tableВиды_грузов.КОД_ВИДА_ГРУЗАColumn}, new global::System.Data.DataColumn[] {
                        this.tableГрузы.КОД_ВИДА_ГРУЗАColumn}, false);
            this.Relations.Add(this.relationFK_Грузы_Виды_грузов);
            this.relationFK_Рейсы_Грузы = new global::System.Data.DataRelation("FK_Рейсы_Грузы", new global::System.Data.DataColumn[] {
                        this.tableГрузы.КОД_ГРУЗАColumn}, new global::System.Data.DataColumn[] {
                        this.tableРейсы.КОД_ГРУЗАColumn}, false);
            this.Relations.Add(this.relationFK_Рейсы_Грузы);
            this.relationFK_Рейсы_Сотрудники = new global::System.Data.DataRelation("FK_Рейсы_Сотрудники", new global::System.Data.DataColumn[] {
                        this.tableСотрудники.КОД_СОТРУДНИКАColumn}, new global::System.Data.DataColumn[] {
                        this.tableРейсы.КОД_СОТРУДНИКАColumn}, false);
            this.Relations.Add(this.relationFK_Рейсы_Сотрудники);
            this.relationFK_Сотрудники_Должности = new global::System.Data.DataRelation("FK_Сотрудники_Должности", new global::System.Data.DataColumn[] {
                        this.tableДолжности.КОД_ДОЛЖНОСТИColumn}, new global::System.Data.DataColumn[] {
                        this.tableСотрудники.КОД_ДОЛЖНОСТИColumn}, false);
            this.Relations.Add(this.relationFK_Сотрудники_Должности);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeАвтомобили() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeВиды_автомобилей() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeВиды_грузов() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeГрузы() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeДолжности() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeМарки_автомобилей() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeРейсы() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeСотрудники() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeАвтопарк() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeЗаказы() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeОтдел_кадров() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeПеревозимые_грузы() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeТранспортировка() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            TransportDataSet ds = new TransportDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void АвтомобилиRowChangeEventHandler(object sender, АвтомобилиRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void Виды_автомобилейRowChangeEventHandler(object sender, Виды_автомобилейRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void Виды_грузовRowChangeEventHandler(object sender, Виды_грузовRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ГрузыRowChangeEventHandler(object sender, ГрузыRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ДолжностиRowChangeEventHandler(object sender, ДолжностиRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void Марки_автомобилейRowChangeEventHandler(object sender, Марки_автомобилейRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void РейсыRowChangeEventHandler(object sender, РейсыRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void СотрудникиRowChangeEventHandler(object sender, СотрудникиRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void АвтопаркRowChangeEventHandler(object sender, АвтопаркRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ЗаказыRowChangeEventHandler(object sender, ЗаказыRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void Отдел_кадровRowChangeEventHandler(object sender, Отдел_кадровRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void Перевозимые_грузыRowChangeEventHandler(object sender, Перевозимые_грузыRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ТранспортировкаRowChangeEventHandler(object sender, ТранспортировкаRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class АвтомобилиDataTable : global::System.Data.TypedTableBase<АвтомобилиRow> {
            
            private global::System.Data.DataColumn columnКОД_АВТОМОБИЛЯ;
            
            private global::System.Data.DataColumn columnКОД_МАРКИ;
            
            private global::System.Data.DataColumn columnКОД_ВИДА_АВТОМОБИЛЯ;
            
            private global::System.Data.DataColumn columnРЕГИСТРАЦИОННЫЙ_НОМЕР;
            
            private global::System.Data.DataColumn columnНОМЕР_КУЗОВА;
            
            private global::System.Data.DataColumn columnНОМЕР_ДВИГАТЕЛЯ;
            
            private global::System.Data.DataColumn columnГОД_ВЫПУСКА;
            
            private global::System.Data.DataColumn columnКОД_СОТРУДНИКА_ВОДИТЕЛЯ;
            
            private global::System.Data.DataColumn columnДАТА_ПОСЛЕДНЕГО_ТО;
            
            private global::System.Data.DataColumn columnКОД_СОТРУДНИКА_МЕХАНИКА;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public АвтомобилиDataTable() {
                this.TableName = "Автомобили";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal АвтомобилиDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected АвтомобилиDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КОД_АВТОМОБИЛЯColumn {
                get {
                    return this.columnКОД_АВТОМОБИЛЯ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КОД_МАРКИColumn {
                get {
                    return this.columnКОД_МАРКИ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КОД_ВИДА_АВТОМОБИЛЯColumn {
                get {
                    return this.columnКОД_ВИДА_АВТОМОБИЛЯ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn РЕГИСТРАЦИОННЫЙ_НОМЕРColumn {
                get {
                    return this.columnРЕГИСТРАЦИОННЫЙ_НОМЕР;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НОМЕР_КУЗОВАColumn {
                get {
                    return this.columnНОМЕР_КУЗОВА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НОМЕР_ДВИГАТЕЛЯColumn {
                get {
                    return this.columnНОМЕР_ДВИГАТЕЛЯ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ГОД_ВЫПУСКАColumn {
                get {
                    return this.columnГОД_ВЫПУСКА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КОД_СОТРУДНИКА_ВОДИТЕЛЯColumn {
                get {
                    return this.columnКОД_СОТРУДНИКА_ВОДИТЕЛЯ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ДАТА_ПОСЛЕДНЕГО_ТОColumn {
                get {
                    return this.columnДАТА_ПОСЛЕДНЕГО_ТО;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КОД_СОТРУДНИКА_МЕХАНИКАColumn {
                get {
                    return this.columnКОД_СОТРУДНИКА_МЕХАНИКА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public АвтомобилиRow this[int index] {
                get {
                    return ((АвтомобилиRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event АвтомобилиRowChangeEventHandler АвтомобилиRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event АвтомобилиRowChangeEventHandler АвтомобилиRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event АвтомобилиRowChangeEventHandler АвтомобилиRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event АвтомобилиRowChangeEventHandler АвтомобилиRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddАвтомобилиRow(АвтомобилиRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public АвтомобилиRow AddАвтомобилиRow(РейсыRow parentРейсыRowByFK_Автомобили_Рейсы, Марки_автомобилейRow parentМарки_автомобилейRowByFK_Автомобили_Марки_автомобилей, Виды_автомобилейRow parentВиды_автомобилейRowByFK_Автомобили_Виды_автомобилей, string РЕГИСТРАЦИОННЫЙ_НОМЕР, int НОМЕР_КУЗОВА, int НОМЕР_ДВИГАТЕЛЯ, int ГОД_ВЫПУСКА, int КОД_СОТРУДНИКА_ВОДИТЕЛЯ, System.DateTime ДАТА_ПОСЛЕДНЕГО_ТО, int КОД_СОТРУДНИКА_МЕХАНИКА) {
                АвтомобилиRow rowАвтомобилиRow = ((АвтомобилиRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        РЕГИСТРАЦИОННЫЙ_НОМЕР,
                        НОМЕР_КУЗОВА,
                        НОМЕР_ДВИГАТЕЛЯ,
                        ГОД_ВЫПУСКА,
                        КОД_СОТРУДНИКА_ВОДИТЕЛЯ,
                        ДАТА_ПОСЛЕДНЕГО_ТО,
                        КОД_СОТРУДНИКА_МЕХАНИКА};
                if ((parentРейсыRowByFK_Автомобили_Рейсы != null)) {
                    columnValuesArray[0] = parentРейсыRowByFK_Автомобили_Рейсы[0];
                }
                if ((parentМарки_автомобилейRowByFK_Автомобили_Марки_автомобилей != null)) {
                    columnValuesArray[1] = parentМарки_автомобилейRowByFK_Автомобили_Марки_автомобилей[0];
                }
                if ((parentВиды_автомобилейRowByFK_Автомобили_Виды_автомобилей != null)) {
                    columnValuesArray[2] = parentВиды_автомобилейRowByFK_Автомобили_Виды_автомобилей[0];
                }
                rowАвтомобилиRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowАвтомобилиRow);
                return rowАвтомобилиRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public АвтомобилиRow FindByКОД_АВТОМОБИЛЯ(int КОД_АВТОМОБИЛЯ) {
                return ((АвтомобилиRow)(this.Rows.Find(new object[] {
                            КОД_АВТОМОБИЛЯ})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                АвтомобилиDataTable cln = ((АвтомобилиDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new АвтомобилиDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnКОД_АВТОМОБИЛЯ = base.Columns["КОД_АВТОМОБИЛЯ"];
                this.columnКОД_МАРКИ = base.Columns["КОД_МАРКИ"];
                this.columnКОД_ВИДА_АВТОМОБИЛЯ = base.Columns["КОД_ВИДА_АВТОМОБИЛЯ"];
                this.columnРЕГИСТРАЦИОННЫЙ_НОМЕР = base.Columns["РЕГИСТРАЦИОННЫЙ_НОМЕР"];
                this.columnНОМЕР_КУЗОВА = base.Columns["НОМЕР_КУЗОВА"];
                this.columnНОМЕР_ДВИГАТЕЛЯ = base.Columns["НОМЕР_ДВИГАТЕЛЯ"];
                this.columnГОД_ВЫПУСКА = base.Columns["ГОД_ВЫПУСКА"];
                this.columnКОД_СОТРУДНИКА_ВОДИТЕЛЯ = base.Columns["КОД_СОТРУДНИКА_ВОДИТЕЛЯ"];
                this.columnДАТА_ПОСЛЕДНЕГО_ТО = base.Columns["ДАТА_ПОСЛЕДНЕГО_ТО"];
                this.columnКОД_СОТРУДНИКА_МЕХАНИКА = base.Columns["КОД_СОТРУДНИКА_МЕХАНИКА"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnКОД_АВТОМОБИЛЯ = new global::System.Data.DataColumn("КОД_АВТОМОБИЛЯ", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОД_АВТОМОБИЛЯ);
                this.columnКОД_МАРКИ = new global::System.Data.DataColumn("КОД_МАРКИ", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОД_МАРКИ);
                this.columnКОД_ВИДА_АВТОМОБИЛЯ = new global::System.Data.DataColumn("КОД_ВИДА_АВТОМОБИЛЯ", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОД_ВИДА_АВТОМОБИЛЯ);
                this.columnРЕГИСТРАЦИОННЫЙ_НОМЕР = new global::System.Data.DataColumn("РЕГИСТРАЦИОННЫЙ_НОМЕР", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnРЕГИСТРАЦИОННЫЙ_НОМЕР);
                this.columnНОМЕР_КУЗОВА = new global::System.Data.DataColumn("НОМЕР_КУЗОВА", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНОМЕР_КУЗОВА);
                this.columnНОМЕР_ДВИГАТЕЛЯ = new global::System.Data.DataColumn("НОМЕР_ДВИГАТЕЛЯ", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНОМЕР_ДВИГАТЕЛЯ);
                this.columnГОД_ВЫПУСКА = new global::System.Data.DataColumn("ГОД_ВЫПУСКА", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnГОД_ВЫПУСКА);
                this.columnКОД_СОТРУДНИКА_ВОДИТЕЛЯ = new global::System.Data.DataColumn("КОД_СОТРУДНИКА_ВОДИТЕЛЯ", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОД_СОТРУДНИКА_ВОДИТЕЛЯ);
                this.columnДАТА_ПОСЛЕДНЕГО_ТО = new global::System.Data.DataColumn("ДАТА_ПОСЛЕДНЕГО_ТО", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДАТА_ПОСЛЕДНЕГО_ТО);
                this.columnКОД_СОТРУДНИКА_МЕХАНИКА = new global::System.Data.DataColumn("КОД_СОТРУДНИКА_МЕХАНИКА", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОД_СОТРУДНИКА_МЕХАНИКА);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnКОД_АВТОМОБИЛЯ}, true));
                this.columnКОД_АВТОМОБИЛЯ.AllowDBNull = false;
                this.columnКОД_АВТОМОБИЛЯ.Unique = true;
                this.columnРЕГИСТРАЦИОННЫЙ_НОМЕР.MaxLength = 6;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public АвтомобилиRow NewАвтомобилиRow() {
                return ((АвтомобилиRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new АвтомобилиRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(АвтомобилиRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.АвтомобилиRowChanged != null)) {
                    this.АвтомобилиRowChanged(this, new АвтомобилиRowChangeEvent(((АвтомобилиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.АвтомобилиRowChanging != null)) {
                    this.АвтомобилиRowChanging(this, new АвтомобилиRowChangeEvent(((АвтомобилиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.АвтомобилиRowDeleted != null)) {
                    this.АвтомобилиRowDeleted(this, new АвтомобилиRowChangeEvent(((АвтомобилиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.АвтомобилиRowDeleting != null)) {
                    this.АвтомобилиRowDeleting(this, new АвтомобилиRowChangeEvent(((АвтомобилиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveАвтомобилиRow(АвтомобилиRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TransportDataSet ds = new TransportDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "АвтомобилиDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Виды_автомобилейDataTable : global::System.Data.TypedTableBase<Виды_автомобилейRow> {
            
            private global::System.Data.DataColumn columnКОД_ВИДА_АВТОМОБИЛЯ;
            
            private global::System.Data.DataColumn columnНАИМЕНОВАНИЕ;
            
            private global::System.Data.DataColumn columnОПИСАНИЕ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Виды_автомобилейDataTable() {
                this.TableName = "Виды_автомобилей";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Виды_автомобилейDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected Виды_автомобилейDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КОД_ВИДА_АВТОМОБИЛЯColumn {
                get {
                    return this.columnКОД_ВИДА_АВТОМОБИЛЯ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НАИМЕНОВАНИЕColumn {
                get {
                    return this.columnНАИМЕНОВАНИЕ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ОПИСАНИЕColumn {
                get {
                    return this.columnОПИСАНИЕ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Виды_автомобилейRow this[int index] {
                get {
                    return ((Виды_автомобилейRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Виды_автомобилейRowChangeEventHandler Виды_автомобилейRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Виды_автомобилейRowChangeEventHandler Виды_автомобилейRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Виды_автомобилейRowChangeEventHandler Виды_автомобилейRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Виды_автомобилейRowChangeEventHandler Виды_автомобилейRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddВиды_автомобилейRow(Виды_автомобилейRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Виды_автомобилейRow AddВиды_автомобилейRow(int КОД_ВИДА_АВТОМОБИЛЯ, string НАИМЕНОВАНИЕ, string ОПИСАНИЕ) {
                Виды_автомобилейRow rowВиды_автомобилейRow = ((Виды_автомобилейRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        КОД_ВИДА_АВТОМОБИЛЯ,
                        НАИМЕНОВАНИЕ,
                        ОПИСАНИЕ};
                rowВиды_автомобилейRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowВиды_автомобилейRow);
                return rowВиды_автомобилейRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Виды_автомобилейRow FindByКОД_ВИДА_АВТОМОБИЛЯ(int КОД_ВИДА_АВТОМОБИЛЯ) {
                return ((Виды_автомобилейRow)(this.Rows.Find(new object[] {
                            КОД_ВИДА_АВТОМОБИЛЯ})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Виды_автомобилейDataTable cln = ((Виды_автомобилейDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Виды_автомобилейDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnКОД_ВИДА_АВТОМОБИЛЯ = base.Columns["КОД_ВИДА_АВТОМОБИЛЯ"];
                this.columnНАИМЕНОВАНИЕ = base.Columns["НАИМЕНОВАНИЕ"];
                this.columnОПИСАНИЕ = base.Columns["ОПИСАНИЕ"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnКОД_ВИДА_АВТОМОБИЛЯ = new global::System.Data.DataColumn("КОД_ВИДА_АВТОМОБИЛЯ", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОД_ВИДА_АВТОМОБИЛЯ);
                this.columnНАИМЕНОВАНИЕ = new global::System.Data.DataColumn("НАИМЕНОВАНИЕ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНАИМЕНОВАНИЕ);
                this.columnОПИСАНИЕ = new global::System.Data.DataColumn("ОПИСАНИЕ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОПИСАНИЕ);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnКОД_ВИДА_АВТОМОБИЛЯ}, true));
                this.columnКОД_ВИДА_АВТОМОБИЛЯ.AllowDBNull = false;
                this.columnКОД_ВИДА_АВТОМОБИЛЯ.Unique = true;
                this.columnНАИМЕНОВАНИЕ.MaxLength = 30;
                this.columnОПИСАНИЕ.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Виды_автомобилейRow NewВиды_автомобилейRow() {
                return ((Виды_автомобилейRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Виды_автомобилейRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Виды_автомобилейRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Виды_автомобилейRowChanged != null)) {
                    this.Виды_автомобилейRowChanged(this, new Виды_автомобилейRowChangeEvent(((Виды_автомобилейRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Виды_автомобилейRowChanging != null)) {
                    this.Виды_автомобилейRowChanging(this, new Виды_автомобилейRowChangeEvent(((Виды_автомобилейRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Виды_автомобилейRowDeleted != null)) {
                    this.Виды_автомобилейRowDeleted(this, new Виды_автомобилейRowChangeEvent(((Виды_автомобилейRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Виды_автомобилейRowDeleting != null)) {
                    this.Виды_автомобилейRowDeleting(this, new Виды_автомобилейRowChangeEvent(((Виды_автомобилейRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveВиды_автомобилейRow(Виды_автомобилейRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TransportDataSet ds = new TransportDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Виды_автомобилейDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Виды_грузовDataTable : global::System.Data.TypedTableBase<Виды_грузовRow> {
            
            private global::System.Data.DataColumn columnКОД_ВИДА_ГРУЗА;
            
            private global::System.Data.DataColumn columnНАИМЕНОВАНИЕ;
            
            private global::System.Data.DataColumn columnКОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ;
            
            private global::System.Data.DataColumn columnОПИСАНИЕ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Виды_грузовDataTable() {
                this.TableName = "Виды_грузов";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Виды_грузовDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected Виды_грузовDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КОД_ВИДА_ГРУЗАColumn {
                get {
                    return this.columnКОД_ВИДА_ГРУЗА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НАИМЕНОВАНИЕColumn {
                get {
                    return this.columnНАИМЕНОВАНИЕ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИColumn {
                get {
                    return this.columnКОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ОПИСАНИЕColumn {
                get {
                    return this.columnОПИСАНИЕ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Виды_грузовRow this[int index] {
                get {
                    return ((Виды_грузовRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Виды_грузовRowChangeEventHandler Виды_грузовRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Виды_грузовRowChangeEventHandler Виды_грузовRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Виды_грузовRowChangeEventHandler Виды_грузовRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Виды_грузовRowChangeEventHandler Виды_грузовRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddВиды_грузовRow(Виды_грузовRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Виды_грузовRow AddВиды_грузовRow(int КОД_ВИДА_ГРУЗА, string НАИМЕНОВАНИЕ, int КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ, string ОПИСАНИЕ) {
                Виды_грузовRow rowВиды_грузовRow = ((Виды_грузовRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        КОД_ВИДА_ГРУЗА,
                        НАИМЕНОВАНИЕ,
                        КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ,
                        ОПИСАНИЕ};
                rowВиды_грузовRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowВиды_грузовRow);
                return rowВиды_грузовRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Виды_грузовRow FindByКОД_ВИДА_ГРУЗА(int КОД_ВИДА_ГРУЗА) {
                return ((Виды_грузовRow)(this.Rows.Find(new object[] {
                            КОД_ВИДА_ГРУЗА})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Виды_грузовDataTable cln = ((Виды_грузовDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Виды_грузовDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnКОД_ВИДА_ГРУЗА = base.Columns["КОД_ВИДА_ГРУЗА"];
                this.columnНАИМЕНОВАНИЕ = base.Columns["НАИМЕНОВАНИЕ"];
                this.columnКОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ = base.Columns["КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ"];
                this.columnОПИСАНИЕ = base.Columns["ОПИСАНИЕ"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnКОД_ВИДА_ГРУЗА = new global::System.Data.DataColumn("КОД_ВИДА_ГРУЗА", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОД_ВИДА_ГРУЗА);
                this.columnНАИМЕНОВАНИЕ = new global::System.Data.DataColumn("НАИМЕНОВАНИЕ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНАИМЕНОВАНИЕ);
                this.columnКОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ = new global::System.Data.DataColumn("КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ);
                this.columnОПИСАНИЕ = new global::System.Data.DataColumn("ОПИСАНИЕ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОПИСАНИЕ);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnКОД_ВИДА_ГРУЗА}, true));
                this.columnКОД_ВИДА_ГРУЗА.AllowDBNull = false;
                this.columnКОД_ВИДА_ГРУЗА.Unique = true;
                this.columnНАИМЕНОВАНИЕ.MaxLength = 30;
                this.columnОПИСАНИЕ.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Виды_грузовRow NewВиды_грузовRow() {
                return ((Виды_грузовRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Виды_грузовRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Виды_грузовRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Виды_грузовRowChanged != null)) {
                    this.Виды_грузовRowChanged(this, new Виды_грузовRowChangeEvent(((Виды_грузовRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Виды_грузовRowChanging != null)) {
                    this.Виды_грузовRowChanging(this, new Виды_грузовRowChangeEvent(((Виды_грузовRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Виды_грузовRowDeleted != null)) {
                    this.Виды_грузовRowDeleted(this, new Виды_грузовRowChangeEvent(((Виды_грузовRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Виды_грузовRowDeleting != null)) {
                    this.Виды_грузовRowDeleting(this, new Виды_грузовRowChangeEvent(((Виды_грузовRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveВиды_грузовRow(Виды_грузовRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TransportDataSet ds = new TransportDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Виды_грузовDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ГрузыDataTable : global::System.Data.TypedTableBase<ГрузыRow> {
            
            private global::System.Data.DataColumn columnКОД_ГРУЗА;
            
            private global::System.Data.DataColumn columnНАИМЕНОВАНИЕ;
            
            private global::System.Data.DataColumn columnКОД_ВИДА_ГРУЗА;
            
            private global::System.Data.DataColumn columnСРОК_ГОДНОСТИ;
            
            private global::System.Data.DataColumn columnОСОБЕННОСТИ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ГрузыDataTable() {
                this.TableName = "Грузы";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ГрузыDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ГрузыDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КОД_ГРУЗАColumn {
                get {
                    return this.columnКОД_ГРУЗА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НАИМЕНОВАНИЕColumn {
                get {
                    return this.columnНАИМЕНОВАНИЕ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КОД_ВИДА_ГРУЗАColumn {
                get {
                    return this.columnКОД_ВИДА_ГРУЗА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn СРОК_ГОДНОСТИColumn {
                get {
                    return this.columnСРОК_ГОДНОСТИ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ОСОБЕННОСТИColumn {
                get {
                    return this.columnОСОБЕННОСТИ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ГрузыRow this[int index] {
                get {
                    return ((ГрузыRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ГрузыRowChangeEventHandler ГрузыRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ГрузыRowChangeEventHandler ГрузыRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ГрузыRowChangeEventHandler ГрузыRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ГрузыRowChangeEventHandler ГрузыRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddГрузыRow(ГрузыRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ГрузыRow AddГрузыRow(int КОД_ГРУЗА, string НАИМЕНОВАНИЕ, Виды_грузовRow parentВиды_грузовRowByFK_Грузы_Виды_грузов, string СРОК_ГОДНОСТИ, string ОСОБЕННОСТИ) {
                ГрузыRow rowГрузыRow = ((ГрузыRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        КОД_ГРУЗА,
                        НАИМЕНОВАНИЕ,
                        null,
                        СРОК_ГОДНОСТИ,
                        ОСОБЕННОСТИ};
                if ((parentВиды_грузовRowByFK_Грузы_Виды_грузов != null)) {
                    columnValuesArray[2] = parentВиды_грузовRowByFK_Грузы_Виды_грузов[0];
                }
                rowГрузыRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowГрузыRow);
                return rowГрузыRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ГрузыRow FindByКОД_ГРУЗА(int КОД_ГРУЗА) {
                return ((ГрузыRow)(this.Rows.Find(new object[] {
                            КОД_ГРУЗА})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ГрузыDataTable cln = ((ГрузыDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ГрузыDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnКОД_ГРУЗА = base.Columns["КОД_ГРУЗА"];
                this.columnНАИМЕНОВАНИЕ = base.Columns["НАИМЕНОВАНИЕ"];
                this.columnКОД_ВИДА_ГРУЗА = base.Columns["КОД_ВИДА_ГРУЗА"];
                this.columnСРОК_ГОДНОСТИ = base.Columns["СРОК_ГОДНОСТИ"];
                this.columnОСОБЕННОСТИ = base.Columns["ОСОБЕННОСТИ"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnКОД_ГРУЗА = new global::System.Data.DataColumn("КОД_ГРУЗА", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОД_ГРУЗА);
                this.columnНАИМЕНОВАНИЕ = new global::System.Data.DataColumn("НАИМЕНОВАНИЕ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНАИМЕНОВАНИЕ);
                this.columnКОД_ВИДА_ГРУЗА = new global::System.Data.DataColumn("КОД_ВИДА_ГРУЗА", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОД_ВИДА_ГРУЗА);
                this.columnСРОК_ГОДНОСТИ = new global::System.Data.DataColumn("СРОК_ГОДНОСТИ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСРОК_ГОДНОСТИ);
                this.columnОСОБЕННОСТИ = new global::System.Data.DataColumn("ОСОБЕННОСТИ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОСОБЕННОСТИ);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnКОД_ГРУЗА}, true));
                this.columnКОД_ГРУЗА.AllowDBNull = false;
                this.columnКОД_ГРУЗА.Unique = true;
                this.columnНАИМЕНОВАНИЕ.MaxLength = 30;
                this.columnСРОК_ГОДНОСТИ.MaxLength = 10;
                this.columnОСОБЕННОСТИ.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ГрузыRow NewГрузыRow() {
                return ((ГрузыRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ГрузыRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ГрузыRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ГрузыRowChanged != null)) {
                    this.ГрузыRowChanged(this, new ГрузыRowChangeEvent(((ГрузыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ГрузыRowChanging != null)) {
                    this.ГрузыRowChanging(this, new ГрузыRowChangeEvent(((ГрузыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ГрузыRowDeleted != null)) {
                    this.ГрузыRowDeleted(this, new ГрузыRowChangeEvent(((ГрузыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ГрузыRowDeleting != null)) {
                    this.ГрузыRowDeleting(this, new ГрузыRowChangeEvent(((ГрузыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveГрузыRow(ГрузыRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TransportDataSet ds = new TransportDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ГрузыDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ДолжностиDataTable : global::System.Data.TypedTableBase<ДолжностиRow> {
            
            private global::System.Data.DataColumn columnКОД_ДОЛЖНОСТИ;
            
            private global::System.Data.DataColumn columnНАИМЕНОВАНИЕ_ДОЛЖНОСТИ;
            
            private global::System.Data.DataColumn columnОКЛАД;
            
            private global::System.Data.DataColumn columnОБЯЗАННОСТИ;
            
            private global::System.Data.DataColumn columnТРЕБОВАНИЯ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ДолжностиDataTable() {
                this.TableName = "Должности";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ДолжностиDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ДолжностиDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КОД_ДОЛЖНОСТИColumn {
                get {
                    return this.columnКОД_ДОЛЖНОСТИ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НАИМЕНОВАНИЕ_ДОЛЖНОСТИColumn {
                get {
                    return this.columnНАИМЕНОВАНИЕ_ДОЛЖНОСТИ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ОКЛАДColumn {
                get {
                    return this.columnОКЛАД;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ОБЯЗАННОСТИColumn {
                get {
                    return this.columnОБЯЗАННОСТИ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ТРЕБОВАНИЯColumn {
                get {
                    return this.columnТРЕБОВАНИЯ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ДолжностиRow this[int index] {
                get {
                    return ((ДолжностиRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ДолжностиRowChangeEventHandler ДолжностиRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ДолжностиRowChangeEventHandler ДолжностиRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ДолжностиRowChangeEventHandler ДолжностиRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ДолжностиRowChangeEventHandler ДолжностиRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddДолжностиRow(ДолжностиRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ДолжностиRow AddДолжностиRow(int КОД_ДОЛЖНОСТИ, string НАИМЕНОВАНИЕ_ДОЛЖНОСТИ, int ОКЛАД, string ОБЯЗАННОСТИ, string ТРЕБОВАНИЯ) {
                ДолжностиRow rowДолжностиRow = ((ДолжностиRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        КОД_ДОЛЖНОСТИ,
                        НАИМЕНОВАНИЕ_ДОЛЖНОСТИ,
                        ОКЛАД,
                        ОБЯЗАННОСТИ,
                        ТРЕБОВАНИЯ};
                rowДолжностиRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowДолжностиRow);
                return rowДолжностиRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ДолжностиRow FindByКОД_ДОЛЖНОСТИ(int КОД_ДОЛЖНОСТИ) {
                return ((ДолжностиRow)(this.Rows.Find(new object[] {
                            КОД_ДОЛЖНОСТИ})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ДолжностиDataTable cln = ((ДолжностиDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ДолжностиDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnКОД_ДОЛЖНОСТИ = base.Columns["КОД_ДОЛЖНОСТИ"];
                this.columnНАИМЕНОВАНИЕ_ДОЛЖНОСТИ = base.Columns["НАИМЕНОВАНИЕ_ДОЛЖНОСТИ"];
                this.columnОКЛАД = base.Columns["ОКЛАД"];
                this.columnОБЯЗАННОСТИ = base.Columns["ОБЯЗАННОСТИ"];
                this.columnТРЕБОВАНИЯ = base.Columns["ТРЕБОВАНИЯ"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnКОД_ДОЛЖНОСТИ = new global::System.Data.DataColumn("КОД_ДОЛЖНОСТИ", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОД_ДОЛЖНОСТИ);
                this.columnНАИМЕНОВАНИЕ_ДОЛЖНОСТИ = new global::System.Data.DataColumn("НАИМЕНОВАНИЕ_ДОЛЖНОСТИ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНАИМЕНОВАНИЕ_ДОЛЖНОСТИ);
                this.columnОКЛАД = new global::System.Data.DataColumn("ОКЛАД", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОКЛАД);
                this.columnОБЯЗАННОСТИ = new global::System.Data.DataColumn("ОБЯЗАННОСТИ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОБЯЗАННОСТИ);
                this.columnТРЕБОВАНИЯ = new global::System.Data.DataColumn("ТРЕБОВАНИЯ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnТРЕБОВАНИЯ);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnКОД_ДОЛЖНОСТИ}, true));
                this.columnКОД_ДОЛЖНОСТИ.AllowDBNull = false;
                this.columnКОД_ДОЛЖНОСТИ.Unique = true;
                this.columnНАИМЕНОВАНИЕ_ДОЛЖНОСТИ.MaxLength = 100;
                this.columnОБЯЗАННОСТИ.MaxLength = 100;
                this.columnТРЕБОВАНИЯ.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ДолжностиRow NewДолжностиRow() {
                return ((ДолжностиRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ДолжностиRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ДолжностиRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ДолжностиRowChanged != null)) {
                    this.ДолжностиRowChanged(this, new ДолжностиRowChangeEvent(((ДолжностиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ДолжностиRowChanging != null)) {
                    this.ДолжностиRowChanging(this, new ДолжностиRowChangeEvent(((ДолжностиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ДолжностиRowDeleted != null)) {
                    this.ДолжностиRowDeleted(this, new ДолжностиRowChangeEvent(((ДолжностиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ДолжностиRowDeleting != null)) {
                    this.ДолжностиRowDeleting(this, new ДолжностиRowChangeEvent(((ДолжностиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveДолжностиRow(ДолжностиRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TransportDataSet ds = new TransportDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ДолжностиDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Марки_автомобилейDataTable : global::System.Data.TypedTableBase<Марки_автомобилейRow> {
            
            private global::System.Data.DataColumn columnКОД_МАРКИ;
            
            private global::System.Data.DataColumn columnНАИМЕНОВАНИЕ;
            
            private global::System.Data.DataColumn columnТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ;
            
            private global::System.Data.DataColumn columnОПИСАНИЕ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Марки_автомобилейDataTable() {
                this.TableName = "Марки_автомобилей";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Марки_автомобилейDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected Марки_автомобилейDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КОД_МАРКИColumn {
                get {
                    return this.columnКОД_МАРКИ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НАИМЕНОВАНИЕColumn {
                get {
                    return this.columnНАИМЕНОВАНИЕ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИColumn {
                get {
                    return this.columnТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ОПИСАНИЕColumn {
                get {
                    return this.columnОПИСАНИЕ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Марки_автомобилейRow this[int index] {
                get {
                    return ((Марки_автомобилейRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Марки_автомобилейRowChangeEventHandler Марки_автомобилейRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Марки_автомобилейRowChangeEventHandler Марки_автомобилейRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Марки_автомобилейRowChangeEventHandler Марки_автомобилейRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Марки_автомобилейRowChangeEventHandler Марки_автомобилейRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddМарки_автомобилейRow(Марки_автомобилейRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Марки_автомобилейRow AddМарки_автомобилейRow(int КОД_МАРКИ, string НАИМЕНОВАНИЕ, string ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ, string ОПИСАНИЕ) {
                Марки_автомобилейRow rowМарки_автомобилейRow = ((Марки_автомобилейRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        КОД_МАРКИ,
                        НАИМЕНОВАНИЕ,
                        ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ,
                        ОПИСАНИЕ};
                rowМарки_автомобилейRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowМарки_автомобилейRow);
                return rowМарки_автомобилейRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Марки_автомобилейRow FindByКОД_МАРКИ(int КОД_МАРКИ) {
                return ((Марки_автомобилейRow)(this.Rows.Find(new object[] {
                            КОД_МАРКИ})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Марки_автомобилейDataTable cln = ((Марки_автомобилейDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Марки_автомобилейDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnКОД_МАРКИ = base.Columns["КОД_МАРКИ"];
                this.columnНАИМЕНОВАНИЕ = base.Columns["НАИМЕНОВАНИЕ"];
                this.columnТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ = base.Columns["ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ"];
                this.columnОПИСАНИЕ = base.Columns["ОПИСАНИЕ"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnКОД_МАРКИ = new global::System.Data.DataColumn("КОД_МАРКИ", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОД_МАРКИ);
                this.columnНАИМЕНОВАНИЕ = new global::System.Data.DataColumn("НАИМЕНОВАНИЕ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНАИМЕНОВАНИЕ);
                this.columnТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ = new global::System.Data.DataColumn("ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ);
                this.columnОПИСАНИЕ = new global::System.Data.DataColumn("ОПИСАНИЕ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОПИСАНИЕ);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnКОД_МАРКИ}, true));
                this.columnКОД_МАРКИ.AllowDBNull = false;
                this.columnКОД_МАРКИ.Unique = true;
                this.columnНАИМЕНОВАНИЕ.MaxLength = 30;
                this.columnТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ.MaxLength = 100;
                this.columnОПИСАНИЕ.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Марки_автомобилейRow NewМарки_автомобилейRow() {
                return ((Марки_автомобилейRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Марки_автомобилейRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Марки_автомобилейRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Марки_автомобилейRowChanged != null)) {
                    this.Марки_автомобилейRowChanged(this, new Марки_автомобилейRowChangeEvent(((Марки_автомобилейRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Марки_автомобилейRowChanging != null)) {
                    this.Марки_автомобилейRowChanging(this, new Марки_автомобилейRowChangeEvent(((Марки_автомобилейRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Марки_автомобилейRowDeleted != null)) {
                    this.Марки_автомобилейRowDeleted(this, new Марки_автомобилейRowChangeEvent(((Марки_автомобилейRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Марки_автомобилейRowDeleting != null)) {
                    this.Марки_автомобилейRowDeleting(this, new Марки_автомобилейRowChangeEvent(((Марки_автомобилейRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveМарки_автомобилейRow(Марки_автомобилейRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TransportDataSet ds = new TransportDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Марки_автомобилейDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class РейсыDataTable : global::System.Data.TypedTableBase<РейсыRow> {
            
            private global::System.Data.DataColumn columnКОД_АВТОМОБИЛЯ;
            
            private global::System.Data.DataColumn columnЗАКАЗЧИК;
            
            private global::System.Data.DataColumn columnОТКУДА;
            
            private global::System.Data.DataColumn columnКУДА;
            
            private global::System.Data.DataColumn columnДАТА_ОТПРАВЛЕНИЯ;
            
            private global::System.Data.DataColumn columnДАТА_ПРИБЫТИЯ;
            
            private global::System.Data.DataColumn columnКОД_ГРУЗА;
            
            private global::System.Data.DataColumn columnЦЕНА;
            
            private global::System.Data.DataColumn columnОТМЕТКА_ОБ_ОПЛАТЕ;
            
            private global::System.Data.DataColumn columnОТМЕТКА_О_ВОЗВРАЩЕНИИ;
            
            private global::System.Data.DataColumn columnКОД_СОТРУДНИКА;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public РейсыDataTable() {
                this.TableName = "Рейсы";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal РейсыDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected РейсыDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КОД_АВТОМОБИЛЯColumn {
                get {
                    return this.columnКОД_АВТОМОБИЛЯ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ЗАКАЗЧИКColumn {
                get {
                    return this.columnЗАКАЗЧИК;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ОТКУДАColumn {
                get {
                    return this.columnОТКУДА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КУДАColumn {
                get {
                    return this.columnКУДА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ДАТА_ОТПРАВЛЕНИЯColumn {
                get {
                    return this.columnДАТА_ОТПРАВЛЕНИЯ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ДАТА_ПРИБЫТИЯColumn {
                get {
                    return this.columnДАТА_ПРИБЫТИЯ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КОД_ГРУЗАColumn {
                get {
                    return this.columnКОД_ГРУЗА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ЦЕНАColumn {
                get {
                    return this.columnЦЕНА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ОТМЕТКА_ОБ_ОПЛАТЕColumn {
                get {
                    return this.columnОТМЕТКА_ОБ_ОПЛАТЕ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ОТМЕТКА_О_ВОЗВРАЩЕНИИColumn {
                get {
                    return this.columnОТМЕТКА_О_ВОЗВРАЩЕНИИ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КОД_СОТРУДНИКАColumn {
                get {
                    return this.columnКОД_СОТРУДНИКА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public РейсыRow this[int index] {
                get {
                    return ((РейсыRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event РейсыRowChangeEventHandler РейсыRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event РейсыRowChangeEventHandler РейсыRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event РейсыRowChangeEventHandler РейсыRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event РейсыRowChangeEventHandler РейсыRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddРейсыRow(РейсыRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public РейсыRow AddРейсыRow(int КОД_АВТОМОБИЛЯ, string ЗАКАЗЧИК, string ОТКУДА, string КУДА, System.DateTime ДАТА_ОТПРАВЛЕНИЯ, System.DateTime ДАТА_ПРИБЫТИЯ, ГрузыRow parentГрузыRowByFK_Рейсы_Грузы, int ЦЕНА, bool ОТМЕТКА_ОБ_ОПЛАТЕ, bool ОТМЕТКА_О_ВОЗВРАЩЕНИИ, СотрудникиRow parentСотрудникиRowByFK_Рейсы_Сотрудники) {
                РейсыRow rowРейсыRow = ((РейсыRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        КОД_АВТОМОБИЛЯ,
                        ЗАКАЗЧИК,
                        ОТКУДА,
                        КУДА,
                        ДАТА_ОТПРАВЛЕНИЯ,
                        ДАТА_ПРИБЫТИЯ,
                        null,
                        ЦЕНА,
                        ОТМЕТКА_ОБ_ОПЛАТЕ,
                        ОТМЕТКА_О_ВОЗВРАЩЕНИИ,
                        null};
                if ((parentГрузыRowByFK_Рейсы_Грузы != null)) {
                    columnValuesArray[6] = parentГрузыRowByFK_Рейсы_Грузы[0];
                }
                if ((parentСотрудникиRowByFK_Рейсы_Сотрудники != null)) {
                    columnValuesArray[10] = parentСотрудникиRowByFK_Рейсы_Сотрудники[0];
                }
                rowРейсыRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowРейсыRow);
                return rowРейсыRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public РейсыRow FindByКОД_АВТОМОБИЛЯ(int КОД_АВТОМОБИЛЯ) {
                return ((РейсыRow)(this.Rows.Find(new object[] {
                            КОД_АВТОМОБИЛЯ})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                РейсыDataTable cln = ((РейсыDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new РейсыDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnКОД_АВТОМОБИЛЯ = base.Columns["КОД_АВТОМОБИЛЯ"];
                this.columnЗАКАЗЧИК = base.Columns["ЗАКАЗЧИК"];
                this.columnОТКУДА = base.Columns["ОТКУДА"];
                this.columnКУДА = base.Columns["КУДА"];
                this.columnДАТА_ОТПРАВЛЕНИЯ = base.Columns["ДАТА_ОТПРАВЛЕНИЯ"];
                this.columnДАТА_ПРИБЫТИЯ = base.Columns["ДАТА_ПРИБЫТИЯ"];
                this.columnКОД_ГРУЗА = base.Columns["КОД_ГРУЗА"];
                this.columnЦЕНА = base.Columns["ЦЕНА"];
                this.columnОТМЕТКА_ОБ_ОПЛАТЕ = base.Columns["ОТМЕТКА_ОБ_ОПЛАТЕ"];
                this.columnОТМЕТКА_О_ВОЗВРАЩЕНИИ = base.Columns["ОТМЕТКА_О_ВОЗВРАЩЕНИИ"];
                this.columnКОД_СОТРУДНИКА = base.Columns["КОД_СОТРУДНИКА"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnКОД_АВТОМОБИЛЯ = new global::System.Data.DataColumn("КОД_АВТОМОБИЛЯ", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОД_АВТОМОБИЛЯ);
                this.columnЗАКАЗЧИК = new global::System.Data.DataColumn("ЗАКАЗЧИК", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЗАКАЗЧИК);
                this.columnОТКУДА = new global::System.Data.DataColumn("ОТКУДА", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОТКУДА);
                this.columnКУДА = new global::System.Data.DataColumn("КУДА", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКУДА);
                this.columnДАТА_ОТПРАВЛЕНИЯ = new global::System.Data.DataColumn("ДАТА_ОТПРАВЛЕНИЯ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДАТА_ОТПРАВЛЕНИЯ);
                this.columnДАТА_ПРИБЫТИЯ = new global::System.Data.DataColumn("ДАТА_ПРИБЫТИЯ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДАТА_ПРИБЫТИЯ);
                this.columnКОД_ГРУЗА = new global::System.Data.DataColumn("КОД_ГРУЗА", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОД_ГРУЗА);
                this.columnЦЕНА = new global::System.Data.DataColumn("ЦЕНА", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЦЕНА);
                this.columnОТМЕТКА_ОБ_ОПЛАТЕ = new global::System.Data.DataColumn("ОТМЕТКА_ОБ_ОПЛАТЕ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОТМЕТКА_ОБ_ОПЛАТЕ);
                this.columnОТМЕТКА_О_ВОЗВРАЩЕНИИ = new global::System.Data.DataColumn("ОТМЕТКА_О_ВОЗВРАЩЕНИИ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОТМЕТКА_О_ВОЗВРАЩЕНИИ);
                this.columnКОД_СОТРУДНИКА = new global::System.Data.DataColumn("КОД_СОТРУДНИКА", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОД_СОТРУДНИКА);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnКОД_АВТОМОБИЛЯ}, true));
                this.columnКОД_АВТОМОБИЛЯ.AllowDBNull = false;
                this.columnКОД_АВТОМОБИЛЯ.Unique = true;
                this.columnЗАКАЗЧИК.MaxLength = 100;
                this.columnОТКУДА.MaxLength = 100;
                this.columnКУДА.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public РейсыRow NewРейсыRow() {
                return ((РейсыRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new РейсыRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(РейсыRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.РейсыRowChanged != null)) {
                    this.РейсыRowChanged(this, new РейсыRowChangeEvent(((РейсыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.РейсыRowChanging != null)) {
                    this.РейсыRowChanging(this, new РейсыRowChangeEvent(((РейсыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.РейсыRowDeleted != null)) {
                    this.РейсыRowDeleted(this, new РейсыRowChangeEvent(((РейсыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.РейсыRowDeleting != null)) {
                    this.РейсыRowDeleting(this, new РейсыRowChangeEvent(((РейсыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveРейсыRow(РейсыRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TransportDataSet ds = new TransportDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "РейсыDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class СотрудникиDataTable : global::System.Data.TypedTableBase<СотрудникиRow> {
            
            private global::System.Data.DataColumn columnКОД_СОТРУДНИКА;
            
            private global::System.Data.DataColumn columnФИО;
            
            private global::System.Data.DataColumn columnВОЗРАСТ;
            
            private global::System.Data.DataColumn columnПОЛ;
            
            private global::System.Data.DataColumn columnАДРЕС;
            
            private global::System.Data.DataColumn columnТЕЛЕФОН;
            
            private global::System.Data.DataColumn columnПАСПОРТНЫЕ_ДАННЫЕ;
            
            private global::System.Data.DataColumn columnКОД_ДОЛЖНОСТИ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СотрудникиDataTable() {
                this.TableName = "Сотрудники";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal СотрудникиDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected СотрудникиDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КОД_СОТРУДНИКАColumn {
                get {
                    return this.columnКОД_СОТРУДНИКА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ФИОColumn {
                get {
                    return this.columnФИО;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ВОЗРАСТColumn {
                get {
                    return this.columnВОЗРАСТ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ПОЛColumn {
                get {
                    return this.columnПОЛ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn АДРЕСColumn {
                get {
                    return this.columnАДРЕС;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ТЕЛЕФОНColumn {
                get {
                    return this.columnТЕЛЕФОН;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ПАСПОРТНЫЕ_ДАННЫЕColumn {
                get {
                    return this.columnПАСПОРТНЫЕ_ДАННЫЕ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КОД_ДОЛЖНОСТИColumn {
                get {
                    return this.columnКОД_ДОЛЖНОСТИ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СотрудникиRow this[int index] {
                get {
                    return ((СотрудникиRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event СотрудникиRowChangeEventHandler СотрудникиRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event СотрудникиRowChangeEventHandler СотрудникиRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event СотрудникиRowChangeEventHandler СотрудникиRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event СотрудникиRowChangeEventHandler СотрудникиRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddСотрудникиRow(СотрудникиRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СотрудникиRow AddСотрудникиRow(int КОД_СОТРУДНИКА, string ФИО, int ВОЗРАСТ, string ПОЛ, string АДРЕС, string ТЕЛЕФОН, string ПАСПОРТНЫЕ_ДАННЫЕ, ДолжностиRow parentДолжностиRowByFK_Сотрудники_Должности) {
                СотрудникиRow rowСотрудникиRow = ((СотрудникиRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        КОД_СОТРУДНИКА,
                        ФИО,
                        ВОЗРАСТ,
                        ПОЛ,
                        АДРЕС,
                        ТЕЛЕФОН,
                        ПАСПОРТНЫЕ_ДАННЫЕ,
                        null};
                if ((parentДолжностиRowByFK_Сотрудники_Должности != null)) {
                    columnValuesArray[7] = parentДолжностиRowByFK_Сотрудники_Должности[0];
                }
                rowСотрудникиRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowСотрудникиRow);
                return rowСотрудникиRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СотрудникиRow FindByКОД_СОТРУДНИКА(int КОД_СОТРУДНИКА) {
                return ((СотрудникиRow)(this.Rows.Find(new object[] {
                            КОД_СОТРУДНИКА})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                СотрудникиDataTable cln = ((СотрудникиDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new СотрудникиDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnКОД_СОТРУДНИКА = base.Columns["КОД_СОТРУДНИКА"];
                this.columnФИО = base.Columns["ФИО"];
                this.columnВОЗРАСТ = base.Columns["ВОЗРАСТ"];
                this.columnПОЛ = base.Columns["ПОЛ"];
                this.columnАДРЕС = base.Columns["АДРЕС"];
                this.columnТЕЛЕФОН = base.Columns["ТЕЛЕФОН"];
                this.columnПАСПОРТНЫЕ_ДАННЫЕ = base.Columns["ПАСПОРТНЫЕ_ДАННЫЕ"];
                this.columnКОД_ДОЛЖНОСТИ = base.Columns["КОД_ДОЛЖНОСТИ"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnКОД_СОТРУДНИКА = new global::System.Data.DataColumn("КОД_СОТРУДНИКА", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОД_СОТРУДНИКА);
                this.columnФИО = new global::System.Data.DataColumn("ФИО", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnФИО);
                this.columnВОЗРАСТ = new global::System.Data.DataColumn("ВОЗРАСТ", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnВОЗРАСТ);
                this.columnПОЛ = new global::System.Data.DataColumn("ПОЛ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПОЛ);
                this.columnАДРЕС = new global::System.Data.DataColumn("АДРЕС", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnАДРЕС);
                this.columnТЕЛЕФОН = new global::System.Data.DataColumn("ТЕЛЕФОН", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnТЕЛЕФОН);
                this.columnПАСПОРТНЫЕ_ДАННЫЕ = new global::System.Data.DataColumn("ПАСПОРТНЫЕ_ДАННЫЕ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПАСПОРТНЫЕ_ДАННЫЕ);
                this.columnКОД_ДОЛЖНОСТИ = new global::System.Data.DataColumn("КОД_ДОЛЖНОСТИ", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОД_ДОЛЖНОСТИ);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnКОД_СОТРУДНИКА}, true));
                this.columnКОД_СОТРУДНИКА.AllowDBNull = false;
                this.columnКОД_СОТРУДНИКА.Unique = true;
                this.columnФИО.MaxLength = 50;
                this.columnПОЛ.MaxLength = 3;
                this.columnАДРЕС.MaxLength = 100;
                this.columnТЕЛЕФОН.MaxLength = 20;
                this.columnПАСПОРТНЫЕ_ДАННЫЕ.MaxLength = 11;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СотрудникиRow NewСотрудникиRow() {
                return ((СотрудникиRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new СотрудникиRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(СотрудникиRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.СотрудникиRowChanged != null)) {
                    this.СотрудникиRowChanged(this, new СотрудникиRowChangeEvent(((СотрудникиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.СотрудникиRowChanging != null)) {
                    this.СотрудникиRowChanging(this, new СотрудникиRowChangeEvent(((СотрудникиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.СотрудникиRowDeleted != null)) {
                    this.СотрудникиRowDeleted(this, new СотрудникиRowChangeEvent(((СотрудникиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.СотрудникиRowDeleting != null)) {
                    this.СотрудникиRowDeleting(this, new СотрудникиRowChangeEvent(((СотрудникиRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveСотрудникиRow(СотрудникиRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TransportDataSet ds = new TransportDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "СотрудникиDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class АвтопаркDataTable : global::System.Data.TypedTableBase<АвтопаркRow> {
            
            private global::System.Data.DataColumn columnКОД_АВТОМОБИЛЯ;
            
            private global::System.Data.DataColumn columnКОД_МАРКИ;
            
            private global::System.Data.DataColumn columnНАИМЕНОВАНИЕ;
            
            private global::System.Data.DataColumn columnТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ;
            
            private global::System.Data.DataColumn columnОПИСАНИЕ;
            
            private global::System.Data.DataColumn columnКОД_ВИДА_АВТОМОБИЛЯ;
            
            private global::System.Data.DataColumn columnНАИМЕНОВАНИЕ_ВИДА_АВТОМОБИЛЯ;
            
            private global::System.Data.DataColumn columnОПИСАНИЕ_ВИДА;
            
            private global::System.Data.DataColumn columnРЕГИСТРАЦИОННЫЙ_НОМЕР;
            
            private global::System.Data.DataColumn columnНОМЕР_КУЗОВА;
            
            private global::System.Data.DataColumn columnНОМЕР_ДВИГАТЕЛЯ;
            
            private global::System.Data.DataColumn columnГОД_ВЫПУСКА;
            
            private global::System.Data.DataColumn columnКОД_СОТРУДНИКА_ВОДИТЕЛЯ;
            
            private global::System.Data.DataColumn columnФИО;
            
            private global::System.Data.DataColumn columnТЕЛЕФОН;
            
            private global::System.Data.DataColumn columnДАТА_ПОСЛЕДНЕГО_ТО;
            
            private global::System.Data.DataColumn columnКОД_СОТРУДНИКА_МЕХАНИКА;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public АвтопаркDataTable() {
                this.TableName = "Автопарк";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal АвтопаркDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected АвтопаркDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КОД_АВТОМОБИЛЯColumn {
                get {
                    return this.columnКОД_АВТОМОБИЛЯ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КОД_МАРКИColumn {
                get {
                    return this.columnКОД_МАРКИ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НАИМЕНОВАНИЕColumn {
                get {
                    return this.columnНАИМЕНОВАНИЕ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИColumn {
                get {
                    return this.columnТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ОПИСАНИЕColumn {
                get {
                    return this.columnОПИСАНИЕ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КОД_ВИДА_АВТОМОБИЛЯColumn {
                get {
                    return this.columnКОД_ВИДА_АВТОМОБИЛЯ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НАИМЕНОВАНИЕ_ВИДА_АВТОМОБИЛЯColumn {
                get {
                    return this.columnНАИМЕНОВАНИЕ_ВИДА_АВТОМОБИЛЯ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ОПИСАНИЕ_ВИДАColumn {
                get {
                    return this.columnОПИСАНИЕ_ВИДА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn РЕГИСТРАЦИОННЫЙ_НОМЕРColumn {
                get {
                    return this.columnРЕГИСТРАЦИОННЫЙ_НОМЕР;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НОМЕР_КУЗОВАColumn {
                get {
                    return this.columnНОМЕР_КУЗОВА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НОМЕР_ДВИГАТЕЛЯColumn {
                get {
                    return this.columnНОМЕР_ДВИГАТЕЛЯ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ГОД_ВЫПУСКАColumn {
                get {
                    return this.columnГОД_ВЫПУСКА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КОД_СОТРУДНИКА_ВОДИТЕЛЯColumn {
                get {
                    return this.columnКОД_СОТРУДНИКА_ВОДИТЕЛЯ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ФИОColumn {
                get {
                    return this.columnФИО;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ТЕЛЕФОНColumn {
                get {
                    return this.columnТЕЛЕФОН;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ДАТА_ПОСЛЕДНЕГО_ТОColumn {
                get {
                    return this.columnДАТА_ПОСЛЕДНЕГО_ТО;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КОД_СОТРУДНИКА_МЕХАНИКАColumn {
                get {
                    return this.columnКОД_СОТРУДНИКА_МЕХАНИКА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public АвтопаркRow this[int index] {
                get {
                    return ((АвтопаркRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event АвтопаркRowChangeEventHandler АвтопаркRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event АвтопаркRowChangeEventHandler АвтопаркRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event АвтопаркRowChangeEventHandler АвтопаркRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event АвтопаркRowChangeEventHandler АвтопаркRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddАвтопаркRow(АвтопаркRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public АвтопаркRow AddАвтопаркRow(
                        int КОД_АВТОМОБИЛЯ, 
                        int КОД_МАРКИ, 
                        string НАИМЕНОВАНИЕ, 
                        string ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ, 
                        string ОПИСАНИЕ, 
                        int КОД_ВИДА_АВТОМОБИЛЯ, 
                        string НАИМЕНОВАНИЕ_ВИДА_АВТОМОБИЛЯ, 
                        string ОПИСАНИЕ_ВИДА, 
                        string РЕГИСТРАЦИОННЫЙ_НОМЕР, 
                        int НОМЕР_КУЗОВА, 
                        int НОМЕР_ДВИГАТЕЛЯ, 
                        int ГОД_ВЫПУСКА, 
                        int КОД_СОТРУДНИКА_ВОДИТЕЛЯ, 
                        string ФИО, 
                        string ТЕЛЕФОН, 
                        System.DateTime ДАТА_ПОСЛЕДНЕГО_ТО, 
                        int КОД_СОТРУДНИКА_МЕХАНИКА) {
                АвтопаркRow rowАвтопаркRow = ((АвтопаркRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        КОД_АВТОМОБИЛЯ,
                        КОД_МАРКИ,
                        НАИМЕНОВАНИЕ,
                        ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ,
                        ОПИСАНИЕ,
                        КОД_ВИДА_АВТОМОБИЛЯ,
                        НАИМЕНОВАНИЕ_ВИДА_АВТОМОБИЛЯ,
                        ОПИСАНИЕ_ВИДА,
                        РЕГИСТРАЦИОННЫЙ_НОМЕР,
                        НОМЕР_КУЗОВА,
                        НОМЕР_ДВИГАТЕЛЯ,
                        ГОД_ВЫПУСКА,
                        КОД_СОТРУДНИКА_ВОДИТЕЛЯ,
                        ФИО,
                        ТЕЛЕФОН,
                        ДАТА_ПОСЛЕДНЕГО_ТО,
                        КОД_СОТРУДНИКА_МЕХАНИКА};
                rowАвтопаркRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowАвтопаркRow);
                return rowАвтопаркRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public АвтопаркRow FindByКОД_АВТОМОБИЛЯ(int КОД_АВТОМОБИЛЯ) {
                return ((АвтопаркRow)(this.Rows.Find(new object[] {
                            КОД_АВТОМОБИЛЯ})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                АвтопаркDataTable cln = ((АвтопаркDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new АвтопаркDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnКОД_АВТОМОБИЛЯ = base.Columns["КОД_АВТОМОБИЛЯ"];
                this.columnКОД_МАРКИ = base.Columns["КОД_МАРКИ"];
                this.columnНАИМЕНОВАНИЕ = base.Columns["НАИМЕНОВАНИЕ"];
                this.columnТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ = base.Columns["ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ"];
                this.columnОПИСАНИЕ = base.Columns["ОПИСАНИЕ"];
                this.columnКОД_ВИДА_АВТОМОБИЛЯ = base.Columns["КОД_ВИДА_АВТОМОБИЛЯ"];
                this.columnНАИМЕНОВАНИЕ_ВИДА_АВТОМОБИЛЯ = base.Columns["НАИМЕНОВАНИЕ_ВИДА_АВТОМОБИЛЯ"];
                this.columnОПИСАНИЕ_ВИДА = base.Columns["ОПИСАНИЕ_ВИДА"];
                this.columnРЕГИСТРАЦИОННЫЙ_НОМЕР = base.Columns["РЕГИСТРАЦИОННЫЙ_НОМЕР"];
                this.columnНОМЕР_КУЗОВА = base.Columns["НОМЕР_КУЗОВА"];
                this.columnНОМЕР_ДВИГАТЕЛЯ = base.Columns["НОМЕР_ДВИГАТЕЛЯ"];
                this.columnГОД_ВЫПУСКА = base.Columns["ГОД_ВЫПУСКА"];
                this.columnКОД_СОТРУДНИКА_ВОДИТЕЛЯ = base.Columns["КОД_СОТРУДНИКА_ВОДИТЕЛЯ"];
                this.columnФИО = base.Columns["ФИО"];
                this.columnТЕЛЕФОН = base.Columns["ТЕЛЕФОН"];
                this.columnДАТА_ПОСЛЕДНЕГО_ТО = base.Columns["ДАТА_ПОСЛЕДНЕГО_ТО"];
                this.columnКОД_СОТРУДНИКА_МЕХАНИКА = base.Columns["КОД_СОТРУДНИКА_МЕХАНИКА"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnКОД_АВТОМОБИЛЯ = new global::System.Data.DataColumn("КОД_АВТОМОБИЛЯ", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОД_АВТОМОБИЛЯ);
                this.columnКОД_МАРКИ = new global::System.Data.DataColumn("КОД_МАРКИ", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОД_МАРКИ);
                this.columnНАИМЕНОВАНИЕ = new global::System.Data.DataColumn("НАИМЕНОВАНИЕ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНАИМЕНОВАНИЕ);
                this.columnТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ = new global::System.Data.DataColumn("ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ);
                this.columnОПИСАНИЕ = new global::System.Data.DataColumn("ОПИСАНИЕ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОПИСАНИЕ);
                this.columnКОД_ВИДА_АВТОМОБИЛЯ = new global::System.Data.DataColumn("КОД_ВИДА_АВТОМОБИЛЯ", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОД_ВИДА_АВТОМОБИЛЯ);
                this.columnНАИМЕНОВАНИЕ_ВИДА_АВТОМОБИЛЯ = new global::System.Data.DataColumn("НАИМЕНОВАНИЕ_ВИДА_АВТОМОБИЛЯ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНАИМЕНОВАНИЕ_ВИДА_АВТОМОБИЛЯ);
                this.columnОПИСАНИЕ_ВИДА = new global::System.Data.DataColumn("ОПИСАНИЕ_ВИДА", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОПИСАНИЕ_ВИДА);
                this.columnРЕГИСТРАЦИОННЫЙ_НОМЕР = new global::System.Data.DataColumn("РЕГИСТРАЦИОННЫЙ_НОМЕР", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnРЕГИСТРАЦИОННЫЙ_НОМЕР);
                this.columnНОМЕР_КУЗОВА = new global::System.Data.DataColumn("НОМЕР_КУЗОВА", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНОМЕР_КУЗОВА);
                this.columnНОМЕР_ДВИГАТЕЛЯ = new global::System.Data.DataColumn("НОМЕР_ДВИГАТЕЛЯ", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНОМЕР_ДВИГАТЕЛЯ);
                this.columnГОД_ВЫПУСКА = new global::System.Data.DataColumn("ГОД_ВЫПУСКА", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnГОД_ВЫПУСКА);
                this.columnКОД_СОТРУДНИКА_ВОДИТЕЛЯ = new global::System.Data.DataColumn("КОД_СОТРУДНИКА_ВОДИТЕЛЯ", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОД_СОТРУДНИКА_ВОДИТЕЛЯ);
                this.columnФИО = new global::System.Data.DataColumn("ФИО", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnФИО);
                this.columnТЕЛЕФОН = new global::System.Data.DataColumn("ТЕЛЕФОН", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnТЕЛЕФОН);
                this.columnДАТА_ПОСЛЕДНЕГО_ТО = new global::System.Data.DataColumn("ДАТА_ПОСЛЕДНЕГО_ТО", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДАТА_ПОСЛЕДНЕГО_ТО);
                this.columnКОД_СОТРУДНИКА_МЕХАНИКА = new global::System.Data.DataColumn("КОД_СОТРУДНИКА_МЕХАНИКА", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОД_СОТРУДНИКА_МЕХАНИКА);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnКОД_АВТОМОБИЛЯ}, true));
                this.columnКОД_АВТОМОБИЛЯ.AllowDBNull = false;
                this.columnКОД_АВТОМОБИЛЯ.Unique = true;
                this.columnНАИМЕНОВАНИЕ.MaxLength = 30;
                this.columnТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ.MaxLength = 100;
                this.columnОПИСАНИЕ.MaxLength = 100;
                this.columnНАИМЕНОВАНИЕ_ВИДА_АВТОМОБИЛЯ.MaxLength = 30;
                this.columnОПИСАНИЕ_ВИДА.MaxLength = 100;
                this.columnРЕГИСТРАЦИОННЫЙ_НОМЕР.MaxLength = 6;
                this.columnФИО.MaxLength = 50;
                this.columnТЕЛЕФОН.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public АвтопаркRow NewАвтопаркRow() {
                return ((АвтопаркRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new АвтопаркRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(АвтопаркRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.АвтопаркRowChanged != null)) {
                    this.АвтопаркRowChanged(this, new АвтопаркRowChangeEvent(((АвтопаркRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.АвтопаркRowChanging != null)) {
                    this.АвтопаркRowChanging(this, new АвтопаркRowChangeEvent(((АвтопаркRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.АвтопаркRowDeleted != null)) {
                    this.АвтопаркRowDeleted(this, new АвтопаркRowChangeEvent(((АвтопаркRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.АвтопаркRowDeleting != null)) {
                    this.АвтопаркRowDeleting(this, new АвтопаркRowChangeEvent(((АвтопаркRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveАвтопаркRow(АвтопаркRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TransportDataSet ds = new TransportDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "АвтопаркDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ЗаказыDataTable : global::System.Data.TypedTableBase<ЗаказыRow> {
            
            private global::System.Data.DataColumn columnКОД_АВТОМОБИЛЯ;
            
            private global::System.Data.DataColumn columnКОД_МАРКИ;
            
            private global::System.Data.DataColumn columnКОД_ВИДА_АВТОМОБИЛЯ;
            
            private global::System.Data.DataColumn columnРЕГИСТРАЦИОННЫЙ_НОМЕР;
            
            private global::System.Data.DataColumn columnЗАКАЗЧИК;
            
            private global::System.Data.DataColumn columnОТКУДА;
            
            private global::System.Data.DataColumn columnКУДА;
            
            private global::System.Data.DataColumn columnДАТА_ОТПРАВЛЕНИЯ;
            
            private global::System.Data.DataColumn columnДАТА_ПРИБЫТИЯ;
            
            private global::System.Data.DataColumn columnКОД_ГРУЗА;
            
            private global::System.Data.DataColumn columnНАИМЕНОВАНИЕ;
            
            private global::System.Data.DataColumn columnКОД_ВИДА_ГРУЗА;
            
            private global::System.Data.DataColumn columnСРОК_ГОДНОСТИ;
            
            private global::System.Data.DataColumn columnЦЕНА;
            
            private global::System.Data.DataColumn columnОТМЕТКА_ОБ_ОПЛАТЕ;
            
            private global::System.Data.DataColumn columnОТМЕТКА_О_ВОЗВРАЩЕНИИ;
            
            private global::System.Data.DataColumn columnКОД_СОТРУДНИКА;
            
            private global::System.Data.DataColumn columnФИО;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ЗаказыDataTable() {
                this.TableName = "Заказы";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ЗаказыDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ЗаказыDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КОД_АВТОМОБИЛЯColumn {
                get {
                    return this.columnКОД_АВТОМОБИЛЯ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КОД_МАРКИColumn {
                get {
                    return this.columnКОД_МАРКИ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КОД_ВИДА_АВТОМОБИЛЯColumn {
                get {
                    return this.columnКОД_ВИДА_АВТОМОБИЛЯ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn РЕГИСТРАЦИОННЫЙ_НОМЕРColumn {
                get {
                    return this.columnРЕГИСТРАЦИОННЫЙ_НОМЕР;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ЗАКАЗЧИКColumn {
                get {
                    return this.columnЗАКАЗЧИК;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ОТКУДАColumn {
                get {
                    return this.columnОТКУДА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КУДАColumn {
                get {
                    return this.columnКУДА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ДАТА_ОТПРАВЛЕНИЯColumn {
                get {
                    return this.columnДАТА_ОТПРАВЛЕНИЯ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ДАТА_ПРИБЫТИЯColumn {
                get {
                    return this.columnДАТА_ПРИБЫТИЯ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КОД_ГРУЗАColumn {
                get {
                    return this.columnКОД_ГРУЗА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НАИМЕНОВАНИЕColumn {
                get {
                    return this.columnНАИМЕНОВАНИЕ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КОД_ВИДА_ГРУЗАColumn {
                get {
                    return this.columnКОД_ВИДА_ГРУЗА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn СРОК_ГОДНОСТИColumn {
                get {
                    return this.columnСРОК_ГОДНОСТИ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ЦЕНАColumn {
                get {
                    return this.columnЦЕНА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ОТМЕТКА_ОБ_ОПЛАТЕColumn {
                get {
                    return this.columnОТМЕТКА_ОБ_ОПЛАТЕ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ОТМЕТКА_О_ВОЗВРАЩЕНИИColumn {
                get {
                    return this.columnОТМЕТКА_О_ВОЗВРАЩЕНИИ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КОД_СОТРУДНИКАColumn {
                get {
                    return this.columnКОД_СОТРУДНИКА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ФИОColumn {
                get {
                    return this.columnФИО;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ЗаказыRow this[int index] {
                get {
                    return ((ЗаказыRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ЗаказыRowChangeEventHandler ЗаказыRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ЗаказыRowChangeEventHandler ЗаказыRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ЗаказыRowChangeEventHandler ЗаказыRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ЗаказыRowChangeEventHandler ЗаказыRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddЗаказыRow(ЗаказыRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ЗаказыRow AddЗаказыRow(
                        int КОД_АВТОМОБИЛЯ, 
                        int КОД_МАРКИ, 
                        int КОД_ВИДА_АВТОМОБИЛЯ, 
                        string РЕГИСТРАЦИОННЫЙ_НОМЕР, 
                        string ЗАКАЗЧИК, 
                        string ОТКУДА, 
                        string КУДА, 
                        System.DateTime ДАТА_ОТПРАВЛЕНИЯ, 
                        System.DateTime ДАТА_ПРИБЫТИЯ, 
                        int КОД_ГРУЗА, 
                        string НАИМЕНОВАНИЕ, 
                        int КОД_ВИДА_ГРУЗА, 
                        string СРОК_ГОДНОСТИ, 
                        int ЦЕНА, 
                        bool ОТМЕТКА_ОБ_ОПЛАТЕ, 
                        bool ОТМЕТКА_О_ВОЗВРАЩЕНИИ, 
                        int КОД_СОТРУДНИКА, 
                        string ФИО) {
                ЗаказыRow rowЗаказыRow = ((ЗаказыRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        КОД_АВТОМОБИЛЯ,
                        КОД_МАРКИ,
                        КОД_ВИДА_АВТОМОБИЛЯ,
                        РЕГИСТРАЦИОННЫЙ_НОМЕР,
                        ЗАКАЗЧИК,
                        ОТКУДА,
                        КУДА,
                        ДАТА_ОТПРАВЛЕНИЯ,
                        ДАТА_ПРИБЫТИЯ,
                        КОД_ГРУЗА,
                        НАИМЕНОВАНИЕ,
                        КОД_ВИДА_ГРУЗА,
                        СРОК_ГОДНОСТИ,
                        ЦЕНА,
                        ОТМЕТКА_ОБ_ОПЛАТЕ,
                        ОТМЕТКА_О_ВОЗВРАЩЕНИИ,
                        КОД_СОТРУДНИКА,
                        ФИО};
                rowЗаказыRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowЗаказыRow);
                return rowЗаказыRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ЗаказыRow FindByКОД_АВТОМОБИЛЯ(int КОД_АВТОМОБИЛЯ) {
                return ((ЗаказыRow)(this.Rows.Find(new object[] {
                            КОД_АВТОМОБИЛЯ})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ЗаказыDataTable cln = ((ЗаказыDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ЗаказыDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnКОД_АВТОМОБИЛЯ = base.Columns["КОД_АВТОМОБИЛЯ"];
                this.columnКОД_МАРКИ = base.Columns["КОД_МАРКИ"];
                this.columnКОД_ВИДА_АВТОМОБИЛЯ = base.Columns["КОД_ВИДА_АВТОМОБИЛЯ"];
                this.columnРЕГИСТРАЦИОННЫЙ_НОМЕР = base.Columns["РЕГИСТРАЦИОННЫЙ_НОМЕР"];
                this.columnЗАКАЗЧИК = base.Columns["ЗАКАЗЧИК"];
                this.columnОТКУДА = base.Columns["ОТКУДА"];
                this.columnКУДА = base.Columns["КУДА"];
                this.columnДАТА_ОТПРАВЛЕНИЯ = base.Columns["ДАТА_ОТПРАВЛЕНИЯ"];
                this.columnДАТА_ПРИБЫТИЯ = base.Columns["ДАТА_ПРИБЫТИЯ"];
                this.columnКОД_ГРУЗА = base.Columns["КОД_ГРУЗА"];
                this.columnНАИМЕНОВАНИЕ = base.Columns["НАИМЕНОВАНИЕ"];
                this.columnКОД_ВИДА_ГРУЗА = base.Columns["КОД_ВИДА_ГРУЗА"];
                this.columnСРОК_ГОДНОСТИ = base.Columns["СРОК_ГОДНОСТИ"];
                this.columnЦЕНА = base.Columns["ЦЕНА"];
                this.columnОТМЕТКА_ОБ_ОПЛАТЕ = base.Columns["ОТМЕТКА_ОБ_ОПЛАТЕ"];
                this.columnОТМЕТКА_О_ВОЗВРАЩЕНИИ = base.Columns["ОТМЕТКА_О_ВОЗВРАЩЕНИИ"];
                this.columnКОД_СОТРУДНИКА = base.Columns["КОД_СОТРУДНИКА"];
                this.columnФИО = base.Columns["ФИО"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnКОД_АВТОМОБИЛЯ = new global::System.Data.DataColumn("КОД_АВТОМОБИЛЯ", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОД_АВТОМОБИЛЯ);
                this.columnКОД_МАРКИ = new global::System.Data.DataColumn("КОД_МАРКИ", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОД_МАРКИ);
                this.columnКОД_ВИДА_АВТОМОБИЛЯ = new global::System.Data.DataColumn("КОД_ВИДА_АВТОМОБИЛЯ", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОД_ВИДА_АВТОМОБИЛЯ);
                this.columnРЕГИСТРАЦИОННЫЙ_НОМЕР = new global::System.Data.DataColumn("РЕГИСТРАЦИОННЫЙ_НОМЕР", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnРЕГИСТРАЦИОННЫЙ_НОМЕР);
                this.columnЗАКАЗЧИК = new global::System.Data.DataColumn("ЗАКАЗЧИК", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЗАКАЗЧИК);
                this.columnОТКУДА = new global::System.Data.DataColumn("ОТКУДА", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОТКУДА);
                this.columnКУДА = new global::System.Data.DataColumn("КУДА", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКУДА);
                this.columnДАТА_ОТПРАВЛЕНИЯ = new global::System.Data.DataColumn("ДАТА_ОТПРАВЛЕНИЯ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДАТА_ОТПРАВЛЕНИЯ);
                this.columnДАТА_ПРИБЫТИЯ = new global::System.Data.DataColumn("ДАТА_ПРИБЫТИЯ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДАТА_ПРИБЫТИЯ);
                this.columnКОД_ГРУЗА = new global::System.Data.DataColumn("КОД_ГРУЗА", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОД_ГРУЗА);
                this.columnНАИМЕНОВАНИЕ = new global::System.Data.DataColumn("НАИМЕНОВАНИЕ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНАИМЕНОВАНИЕ);
                this.columnКОД_ВИДА_ГРУЗА = new global::System.Data.DataColumn("КОД_ВИДА_ГРУЗА", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОД_ВИДА_ГРУЗА);
                this.columnСРОК_ГОДНОСТИ = new global::System.Data.DataColumn("СРОК_ГОДНОСТИ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСРОК_ГОДНОСТИ);
                this.columnЦЕНА = new global::System.Data.DataColumn("ЦЕНА", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЦЕНА);
                this.columnОТМЕТКА_ОБ_ОПЛАТЕ = new global::System.Data.DataColumn("ОТМЕТКА_ОБ_ОПЛАТЕ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОТМЕТКА_ОБ_ОПЛАТЕ);
                this.columnОТМЕТКА_О_ВОЗВРАЩЕНИИ = new global::System.Data.DataColumn("ОТМЕТКА_О_ВОЗВРАЩЕНИИ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОТМЕТКА_О_ВОЗВРАЩЕНИИ);
                this.columnКОД_СОТРУДНИКА = new global::System.Data.DataColumn("КОД_СОТРУДНИКА", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОД_СОТРУДНИКА);
                this.columnФИО = new global::System.Data.DataColumn("ФИО", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnФИО);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnКОД_АВТОМОБИЛЯ}, true));
                this.columnКОД_АВТОМОБИЛЯ.AllowDBNull = false;
                this.columnКОД_АВТОМОБИЛЯ.Unique = true;
                this.columnРЕГИСТРАЦИОННЫЙ_НОМЕР.MaxLength = 6;
                this.columnЗАКАЗЧИК.MaxLength = 100;
                this.columnОТКУДА.MaxLength = 100;
                this.columnКУДА.MaxLength = 100;
                this.columnНАИМЕНОВАНИЕ.MaxLength = 30;
                this.columnСРОК_ГОДНОСТИ.MaxLength = 10;
                this.columnФИО.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ЗаказыRow NewЗаказыRow() {
                return ((ЗаказыRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ЗаказыRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ЗаказыRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ЗаказыRowChanged != null)) {
                    this.ЗаказыRowChanged(this, new ЗаказыRowChangeEvent(((ЗаказыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ЗаказыRowChanging != null)) {
                    this.ЗаказыRowChanging(this, new ЗаказыRowChangeEvent(((ЗаказыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ЗаказыRowDeleted != null)) {
                    this.ЗаказыRowDeleted(this, new ЗаказыRowChangeEvent(((ЗаказыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ЗаказыRowDeleting != null)) {
                    this.ЗаказыRowDeleting(this, new ЗаказыRowChangeEvent(((ЗаказыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveЗаказыRow(ЗаказыRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TransportDataSet ds = new TransportDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ЗаказыDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Отдел_кадровDataTable : global::System.Data.TypedTableBase<Отдел_кадровRow> {
            
            private global::System.Data.DataColumn columnКОД_СОТРУДНИКА;
            
            private global::System.Data.DataColumn columnФИО;
            
            private global::System.Data.DataColumn columnКОД_ДОЛЖНОСТИ;
            
            private global::System.Data.DataColumn columnНАИМЕНОВАНИЕ_ДОЛЖНОСТИ;
            
            private global::System.Data.DataColumn columnОКЛАД;
            
            private global::System.Data.DataColumn columnОБЯЗАННОСТИ;
            
            private global::System.Data.DataColumn columnТРЕБОВАНИЯ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Отдел_кадровDataTable() {
                this.TableName = "Отдел_кадров";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Отдел_кадровDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected Отдел_кадровDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КОД_СОТРУДНИКАColumn {
                get {
                    return this.columnКОД_СОТРУДНИКА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ФИОColumn {
                get {
                    return this.columnФИО;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КОД_ДОЛЖНОСТИColumn {
                get {
                    return this.columnКОД_ДОЛЖНОСТИ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НАИМЕНОВАНИЕ_ДОЛЖНОСТИColumn {
                get {
                    return this.columnНАИМЕНОВАНИЕ_ДОЛЖНОСТИ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ОКЛАДColumn {
                get {
                    return this.columnОКЛАД;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ОБЯЗАННОСТИColumn {
                get {
                    return this.columnОБЯЗАННОСТИ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ТРЕБОВАНИЯColumn {
                get {
                    return this.columnТРЕБОВАНИЯ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Отдел_кадровRow this[int index] {
                get {
                    return ((Отдел_кадровRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Отдел_кадровRowChangeEventHandler Отдел_кадровRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Отдел_кадровRowChangeEventHandler Отдел_кадровRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Отдел_кадровRowChangeEventHandler Отдел_кадровRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Отдел_кадровRowChangeEventHandler Отдел_кадровRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddОтдел_кадровRow(Отдел_кадровRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Отдел_кадровRow AddОтдел_кадровRow(int КОД_СОТРУДНИКА, string ФИО, int КОД_ДОЛЖНОСТИ, string НАИМЕНОВАНИЕ_ДОЛЖНОСТИ, int ОКЛАД, string ОБЯЗАННОСТИ, string ТРЕБОВАНИЯ) {
                Отдел_кадровRow rowОтдел_кадровRow = ((Отдел_кадровRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        КОД_СОТРУДНИКА,
                        ФИО,
                        КОД_ДОЛЖНОСТИ,
                        НАИМЕНОВАНИЕ_ДОЛЖНОСТИ,
                        ОКЛАД,
                        ОБЯЗАННОСТИ,
                        ТРЕБОВАНИЯ};
                rowОтдел_кадровRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowОтдел_кадровRow);
                return rowОтдел_кадровRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Отдел_кадровRow FindByКОД_СОТРУДНИКАКОД_ДОЛЖНОСТИ(int КОД_СОТРУДНИКА, int КОД_ДОЛЖНОСТИ) {
                return ((Отдел_кадровRow)(this.Rows.Find(new object[] {
                            КОД_СОТРУДНИКА,
                            КОД_ДОЛЖНОСТИ})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Отдел_кадровDataTable cln = ((Отдел_кадровDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Отдел_кадровDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnКОД_СОТРУДНИКА = base.Columns["КОД_СОТРУДНИКА"];
                this.columnФИО = base.Columns["ФИО"];
                this.columnКОД_ДОЛЖНОСТИ = base.Columns["КОД_ДОЛЖНОСТИ"];
                this.columnНАИМЕНОВАНИЕ_ДОЛЖНОСТИ = base.Columns["НАИМЕНОВАНИЕ_ДОЛЖНОСТИ"];
                this.columnОКЛАД = base.Columns["ОКЛАД"];
                this.columnОБЯЗАННОСТИ = base.Columns["ОБЯЗАННОСТИ"];
                this.columnТРЕБОВАНИЯ = base.Columns["ТРЕБОВАНИЯ"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnКОД_СОТРУДНИКА = new global::System.Data.DataColumn("КОД_СОТРУДНИКА", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОД_СОТРУДНИКА);
                this.columnФИО = new global::System.Data.DataColumn("ФИО", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnФИО);
                this.columnКОД_ДОЛЖНОСТИ = new global::System.Data.DataColumn("КОД_ДОЛЖНОСТИ", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОД_ДОЛЖНОСТИ);
                this.columnНАИМЕНОВАНИЕ_ДОЛЖНОСТИ = new global::System.Data.DataColumn("НАИМЕНОВАНИЕ_ДОЛЖНОСТИ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНАИМЕНОВАНИЕ_ДОЛЖНОСТИ);
                this.columnОКЛАД = new global::System.Data.DataColumn("ОКЛАД", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОКЛАД);
                this.columnОБЯЗАННОСТИ = new global::System.Data.DataColumn("ОБЯЗАННОСТИ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОБЯЗАННОСТИ);
                this.columnТРЕБОВАНИЯ = new global::System.Data.DataColumn("ТРЕБОВАНИЯ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnТРЕБОВАНИЯ);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnКОД_СОТРУДНИКА,
                                this.columnКОД_ДОЛЖНОСТИ}, true));
                this.columnКОД_СОТРУДНИКА.AllowDBNull = false;
                this.columnФИО.MaxLength = 50;
                this.columnКОД_ДОЛЖНОСТИ.AllowDBNull = false;
                this.columnНАИМЕНОВАНИЕ_ДОЛЖНОСТИ.MaxLength = 100;
                this.columnОБЯЗАННОСТИ.MaxLength = 100;
                this.columnТРЕБОВАНИЯ.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Отдел_кадровRow NewОтдел_кадровRow() {
                return ((Отдел_кадровRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Отдел_кадровRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Отдел_кадровRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Отдел_кадровRowChanged != null)) {
                    this.Отдел_кадровRowChanged(this, new Отдел_кадровRowChangeEvent(((Отдел_кадровRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Отдел_кадровRowChanging != null)) {
                    this.Отдел_кадровRowChanging(this, new Отдел_кадровRowChangeEvent(((Отдел_кадровRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Отдел_кадровRowDeleted != null)) {
                    this.Отдел_кадровRowDeleted(this, new Отдел_кадровRowChangeEvent(((Отдел_кадровRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Отдел_кадровRowDeleting != null)) {
                    this.Отдел_кадровRowDeleting(this, new Отдел_кадровRowChangeEvent(((Отдел_кадровRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveОтдел_кадровRow(Отдел_кадровRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TransportDataSet ds = new TransportDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Отдел_кадровDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Перевозимые_грузыDataTable : global::System.Data.TypedTableBase<Перевозимые_грузыRow> {
            
            private global::System.Data.DataColumn columnКОД_ГРУЗА;
            
            private global::System.Data.DataColumn columnНАИМЕНОВАНИЕ;
            
            private global::System.Data.DataColumn columnСРОК_ГОДНОСТИ;
            
            private global::System.Data.DataColumn columnОСОБЕННОСТИ;
            
            private global::System.Data.DataColumn columnКОД_ВИДА_ГРУЗА;
            
            private global::System.Data.DataColumn columnНаименование_вида_груза;
            
            private global::System.Data.DataColumn columnКОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Перевозимые_грузыDataTable() {
                this.TableName = "Перевозимые_грузы";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Перевозимые_грузыDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected Перевозимые_грузыDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КОД_ГРУЗАColumn {
                get {
                    return this.columnКОД_ГРУЗА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НАИМЕНОВАНИЕColumn {
                get {
                    return this.columnНАИМЕНОВАНИЕ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn СРОК_ГОДНОСТИColumn {
                get {
                    return this.columnСРОК_ГОДНОСТИ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ОСОБЕННОСТИColumn {
                get {
                    return this.columnОСОБЕННОСТИ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КОД_ВИДА_ГРУЗАColumn {
                get {
                    return this.columnКОД_ВИДА_ГРУЗА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Наименование_вида_грузаColumn {
                get {
                    return this.columnНаименование_вида_груза;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИColumn {
                get {
                    return this.columnКОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Перевозимые_грузыRow this[int index] {
                get {
                    return ((Перевозимые_грузыRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Перевозимые_грузыRowChangeEventHandler Перевозимые_грузыRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Перевозимые_грузыRowChangeEventHandler Перевозимые_грузыRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Перевозимые_грузыRowChangeEventHandler Перевозимые_грузыRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event Перевозимые_грузыRowChangeEventHandler Перевозимые_грузыRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddПеревозимые_грузыRow(Перевозимые_грузыRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Перевозимые_грузыRow AddПеревозимые_грузыRow(int КОД_ГРУЗА, string НАИМЕНОВАНИЕ, string СРОК_ГОДНОСТИ, string ОСОБЕННОСТИ, int КОД_ВИДА_ГРУЗА, string Наименование_вида_груза, int КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ) {
                Перевозимые_грузыRow rowПеревозимые_грузыRow = ((Перевозимые_грузыRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        КОД_ГРУЗА,
                        НАИМЕНОВАНИЕ,
                        СРОК_ГОДНОСТИ,
                        ОСОБЕННОСТИ,
                        КОД_ВИДА_ГРУЗА,
                        Наименование_вида_груза,
                        КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ};
                rowПеревозимые_грузыRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowПеревозимые_грузыRow);
                return rowПеревозимые_грузыRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Перевозимые_грузыRow FindByКОД_ГРУЗА(int КОД_ГРУЗА) {
                return ((Перевозимые_грузыRow)(this.Rows.Find(new object[] {
                            КОД_ГРУЗА})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Перевозимые_грузыDataTable cln = ((Перевозимые_грузыDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Перевозимые_грузыDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnКОД_ГРУЗА = base.Columns["КОД_ГРУЗА"];
                this.columnНАИМЕНОВАНИЕ = base.Columns["НАИМЕНОВАНИЕ"];
                this.columnСРОК_ГОДНОСТИ = base.Columns["СРОК_ГОДНОСТИ"];
                this.columnОСОБЕННОСТИ = base.Columns["ОСОБЕННОСТИ"];
                this.columnКОД_ВИДА_ГРУЗА = base.Columns["КОД_ВИДА_ГРУЗА"];
                this.columnНаименование_вида_груза = base.Columns["Наименование вида груза"];
                this.columnКОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ = base.Columns["КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnКОД_ГРУЗА = new global::System.Data.DataColumn("КОД_ГРУЗА", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОД_ГРУЗА);
                this.columnНАИМЕНОВАНИЕ = new global::System.Data.DataColumn("НАИМЕНОВАНИЕ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНАИМЕНОВАНИЕ);
                this.columnСРОК_ГОДНОСТИ = new global::System.Data.DataColumn("СРОК_ГОДНОСТИ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСРОК_ГОДНОСТИ);
                this.columnОСОБЕННОСТИ = new global::System.Data.DataColumn("ОСОБЕННОСТИ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОСОБЕННОСТИ);
                this.columnКОД_ВИДА_ГРУЗА = new global::System.Data.DataColumn("КОД_ВИДА_ГРУЗА", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОД_ВИДА_ГРУЗА);
                this.columnНаименование_вида_груза = new global::System.Data.DataColumn("Наименование вида груза", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНаименование_вида_груза);
                this.columnКОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ = new global::System.Data.DataColumn("КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnКОД_ГРУЗА}, true));
                this.columnКОД_ГРУЗА.AllowDBNull = false;
                this.columnКОД_ГРУЗА.Unique = true;
                this.columnНАИМЕНОВАНИЕ.MaxLength = 30;
                this.columnСРОК_ГОДНОСТИ.MaxLength = 10;
                this.columnОСОБЕННОСТИ.MaxLength = 100;
                this.columnНаименование_вида_груза.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Перевозимые_грузыRow NewПеревозимые_грузыRow() {
                return ((Перевозимые_грузыRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Перевозимые_грузыRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Перевозимые_грузыRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Перевозимые_грузыRowChanged != null)) {
                    this.Перевозимые_грузыRowChanged(this, new Перевозимые_грузыRowChangeEvent(((Перевозимые_грузыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Перевозимые_грузыRowChanging != null)) {
                    this.Перевозимые_грузыRowChanging(this, new Перевозимые_грузыRowChangeEvent(((Перевозимые_грузыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Перевозимые_грузыRowDeleted != null)) {
                    this.Перевозимые_грузыRowDeleted(this, new Перевозимые_грузыRowChangeEvent(((Перевозимые_грузыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Перевозимые_грузыRowDeleting != null)) {
                    this.Перевозимые_грузыRowDeleting(this, new Перевозимые_грузыRowChangeEvent(((Перевозимые_грузыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveПеревозимые_грузыRow(Перевозимые_грузыRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TransportDataSet ds = new TransportDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Перевозимые_грузыDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ТранспортировкаDataTable : global::System.Data.TypedTableBase<ТранспортировкаRow> {
            
            private global::System.Data.DataColumn columnКод_вида_груза;
            
            private global::System.Data.DataColumn columnНаименование_груза;
            
            private global::System.Data.DataColumn columnКод_вида_автомобиля;
            
            private global::System.Data.DataColumn columnНаименование;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ТранспортировкаDataTable() {
                this.TableName = "Транспортировка";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ТранспортировкаDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ТранспортировкаDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Код_вида_грузаColumn {
                get {
                    return this.columnКод_вида_груза;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Наименование_грузаColumn {
                get {
                    return this.columnНаименование_груза;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Код_вида_автомобиляColumn {
                get {
                    return this.columnКод_вида_автомобиля;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn НаименованиеColumn {
                get {
                    return this.columnНаименование;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ТранспортировкаRow this[int index] {
                get {
                    return ((ТранспортировкаRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ТранспортировкаRowChangeEventHandler ТранспортировкаRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ТранспортировкаRowChangeEventHandler ТранспортировкаRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ТранспортировкаRowChangeEventHandler ТранспортировкаRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ТранспортировкаRowChangeEventHandler ТранспортировкаRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddТранспортировкаRow(ТранспортировкаRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ТранспортировкаRow AddТранспортировкаRow(int Код_вида_груза, string Наименование_груза, int Код_вида_автомобиля, string Наименование) {
                ТранспортировкаRow rowТранспортировкаRow = ((ТранспортировкаRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Код_вида_груза,
                        Наименование_груза,
                        Код_вида_автомобиля,
                        Наименование};
                rowТранспортировкаRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowТранспортировкаRow);
                return rowТранспортировкаRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ТранспортировкаRow FindByКод_вида_грузаКод_вида_автомобиля(int Код_вида_груза, int Код_вида_автомобиля) {
                return ((ТранспортировкаRow)(this.Rows.Find(new object[] {
                            Код_вида_груза,
                            Код_вида_автомобиля})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ТранспортировкаDataTable cln = ((ТранспортировкаDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ТранспортировкаDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnКод_вида_груза = base.Columns["Код вида груза"];
                this.columnНаименование_груза = base.Columns["Наименование груза"];
                this.columnКод_вида_автомобиля = base.Columns["Код вида автомобиля"];
                this.columnНаименование = base.Columns["Наименование"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnКод_вида_груза = new global::System.Data.DataColumn("Код вида груза", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_вида_груза);
                this.columnНаименование_груза = new global::System.Data.DataColumn("Наименование груза", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНаименование_груза);
                this.columnКод_вида_автомобиля = new global::System.Data.DataColumn("Код вида автомобиля", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКод_вида_автомобиля);
                this.columnНаименование = new global::System.Data.DataColumn("Наименование", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНаименование);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnКод_вида_груза,
                                this.columnКод_вида_автомобиля}, true));
                this.columnКод_вида_груза.AllowDBNull = false;
                this.columnНаименование_груза.MaxLength = 30;
                this.columnКод_вида_автомобиля.AllowDBNull = false;
                this.columnНаименование.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ТранспортировкаRow NewТранспортировкаRow() {
                return ((ТранспортировкаRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ТранспортировкаRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ТранспортировкаRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ТранспортировкаRowChanged != null)) {
                    this.ТранспортировкаRowChanged(this, new ТранспортировкаRowChangeEvent(((ТранспортировкаRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ТранспортировкаRowChanging != null)) {
                    this.ТранспортировкаRowChanging(this, new ТранспортировкаRowChangeEvent(((ТранспортировкаRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ТранспортировкаRowDeleted != null)) {
                    this.ТранспортировкаRowDeleted(this, new ТранспортировкаRowChangeEvent(((ТранспортировкаRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ТранспортировкаRowDeleting != null)) {
                    this.ТранспортировкаRowDeleting(this, new ТранспортировкаRowChangeEvent(((ТранспортировкаRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveТранспортировкаRow(ТранспортировкаRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TransportDataSet ds = new TransportDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ТранспортировкаDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class АвтомобилиRow : global::System.Data.DataRow {
            
            private АвтомобилиDataTable tableАвтомобили;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal АвтомобилиRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableАвтомобили = ((АвтомобилиDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int КОД_АВТОМОБИЛЯ {
                get {
                    return ((int)(this[this.tableАвтомобили.КОД_АВТОМОБИЛЯColumn]));
                }
                set {
                    this[this.tableАвтомобили.КОД_АВТОМОБИЛЯColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int КОД_МАРКИ {
                get {
                    try {
                        return ((int)(this[this.tableАвтомобили.КОД_МАРКИColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КОД_МАРКИ\' в таблице \'Автомобили\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableАвтомобили.КОД_МАРКИColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int КОД_ВИДА_АВТОМОБИЛЯ {
                get {
                    try {
                        return ((int)(this[this.tableАвтомобили.КОД_ВИДА_АВТОМОБИЛЯColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КОД_ВИДА_АВТОМОБИЛЯ\' в таблице \'Автомобили\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableАвтомобили.КОД_ВИДА_АВТОМОБИЛЯColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string РЕГИСТРАЦИОННЫЙ_НОМЕР {
                get {
                    try {
                        return ((string)(this[this.tableАвтомобили.РЕГИСТРАЦИОННЫЙ_НОМЕРColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'РЕГИСТРАЦИОННЫЙ_НОМЕР\' в таблице \'Автомобили\' равно DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableАвтомобили.РЕГИСТРАЦИОННЫЙ_НОМЕРColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int НОМЕР_КУЗОВА {
                get {
                    try {
                        return ((int)(this[this.tableАвтомобили.НОМЕР_КУЗОВАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'НОМЕР_КУЗОВА\' в таблице \'Автомобили\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableАвтомобили.НОМЕР_КУЗОВАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int НОМЕР_ДВИГАТЕЛЯ {
                get {
                    try {
                        return ((int)(this[this.tableАвтомобили.НОМЕР_ДВИГАТЕЛЯColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'НОМЕР_ДВИГАТЕЛЯ\' в таблице \'Автомобили\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableАвтомобили.НОМЕР_ДВИГАТЕЛЯColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ГОД_ВЫПУСКА {
                get {
                    try {
                        return ((int)(this[this.tableАвтомобили.ГОД_ВЫПУСКАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ГОД_ВЫПУСКА\' в таблице \'Автомобили\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableАвтомобили.ГОД_ВЫПУСКАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int КОД_СОТРУДНИКА_ВОДИТЕЛЯ {
                get {
                    try {
                        return ((int)(this[this.tableАвтомобили.КОД_СОТРУДНИКА_ВОДИТЕЛЯColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КОД_СОТРУДНИКА_ВОДИТЕЛЯ\' в таблице \'Автомобили\' равно DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableАвтомобили.КОД_СОТРУДНИКА_ВОДИТЕЛЯColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ДАТА_ПОСЛЕДНЕГО_ТО {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableАвтомобили.ДАТА_ПОСЛЕДНЕГО_ТОColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ДАТА_ПОСЛЕДНЕГО_ТО\' в таблице \'Автомобили\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableАвтомобили.ДАТА_ПОСЛЕДНЕГО_ТОColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int КОД_СОТРУДНИКА_МЕХАНИКА {
                get {
                    try {
                        return ((int)(this[this.tableАвтомобили.КОД_СОТРУДНИКА_МЕХАНИКАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КОД_СОТРУДНИКА_МЕХАНИКА\' в таблице \'Автомобили\' равно DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableАвтомобили.КОД_СОТРУДНИКА_МЕХАНИКАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Виды_автомобилейRow Виды_автомобилейRow {
                get {
                    return ((Виды_автомобилейRow)(this.GetParentRow(this.Table.ParentRelations["FK_Автомобили_Виды_автомобилей"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Автомобили_Виды_автомобилей"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Марки_автомобилейRow Марки_автомобилейRow {
                get {
                    return ((Марки_автомобилейRow)(this.GetParentRow(this.Table.ParentRelations["FK_Автомобили_Марки_автомобилей"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Автомобили_Марки_автомобилей"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public РейсыRow РейсыRow {
                get {
                    return ((РейсыRow)(this.GetParentRow(this.Table.ParentRelations["FK_Автомобили_Рейсы"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Автомобили_Рейсы"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsКОД_МАРКИNull() {
                return this.IsNull(this.tableАвтомобили.КОД_МАРКИColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetКОД_МАРКИNull() {
                this[this.tableАвтомобили.КОД_МАРКИColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsКОД_ВИДА_АВТОМОБИЛЯNull() {
                return this.IsNull(this.tableАвтомобили.КОД_ВИДА_АВТОМОБИЛЯColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetКОД_ВИДА_АВТОМОБИЛЯNull() {
                this[this.tableАвтомобили.КОД_ВИДА_АВТОМОБИЛЯColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsРЕГИСТРАЦИОННЫЙ_НОМЕРNull() {
                return this.IsNull(this.tableАвтомобили.РЕГИСТРАЦИОННЫЙ_НОМЕРColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetРЕГИСТРАЦИОННЫЙ_НОМЕРNull() {
                this[this.tableАвтомобили.РЕГИСТРАЦИОННЫЙ_НОМЕРColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsНОМЕР_КУЗОВАNull() {
                return this.IsNull(this.tableАвтомобили.НОМЕР_КУЗОВАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetНОМЕР_КУЗОВАNull() {
                this[this.tableАвтомобили.НОМЕР_КУЗОВАColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsНОМЕР_ДВИГАТЕЛЯNull() {
                return this.IsNull(this.tableАвтомобили.НОМЕР_ДВИГАТЕЛЯColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetНОМЕР_ДВИГАТЕЛЯNull() {
                this[this.tableАвтомобили.НОМЕР_ДВИГАТЕЛЯColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsГОД_ВЫПУСКАNull() {
                return this.IsNull(this.tableАвтомобили.ГОД_ВЫПУСКАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetГОД_ВЫПУСКАNull() {
                this[this.tableАвтомобили.ГОД_ВЫПУСКАColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsКОД_СОТРУДНИКА_ВОДИТЕЛЯNull() {
                return this.IsNull(this.tableАвтомобили.КОД_СОТРУДНИКА_ВОДИТЕЛЯColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetКОД_СОТРУДНИКА_ВОДИТЕЛЯNull() {
                this[this.tableАвтомобили.КОД_СОТРУДНИКА_ВОДИТЕЛЯColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsДАТА_ПОСЛЕДНЕГО_ТОNull() {
                return this.IsNull(this.tableАвтомобили.ДАТА_ПОСЛЕДНЕГО_ТОColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetДАТА_ПОСЛЕДНЕГО_ТОNull() {
                this[this.tableАвтомобили.ДАТА_ПОСЛЕДНЕГО_ТОColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsКОД_СОТРУДНИКА_МЕХАНИКАNull() {
                return this.IsNull(this.tableАвтомобили.КОД_СОТРУДНИКА_МЕХАНИКАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetКОД_СОТРУДНИКА_МЕХАНИКАNull() {
                this[this.tableАвтомобили.КОД_СОТРУДНИКА_МЕХАНИКАColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Виды_автомобилейRow : global::System.Data.DataRow {
            
            private Виды_автомобилейDataTable tableВиды_автомобилей;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Виды_автомобилейRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableВиды_автомобилей = ((Виды_автомобилейDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int КОД_ВИДА_АВТОМОБИЛЯ {
                get {
                    return ((int)(this[this.tableВиды_автомобилей.КОД_ВИДА_АВТОМОБИЛЯColumn]));
                }
                set {
                    this[this.tableВиды_автомобилей.КОД_ВИДА_АВТОМОБИЛЯColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string НАИМЕНОВАНИЕ {
                get {
                    try {
                        return ((string)(this[this.tableВиды_автомобилей.НАИМЕНОВАНИЕColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'НАИМЕНОВАНИЕ\' в таблице \'Виды_автомобилей\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableВиды_автомобилей.НАИМЕНОВАНИЕColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ОПИСАНИЕ {
                get {
                    try {
                        return ((string)(this[this.tableВиды_автомобилей.ОПИСАНИЕColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ОПИСАНИЕ\' в таблице \'Виды_автомобилей\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableВиды_автомобилей.ОПИСАНИЕColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsНАИМЕНОВАНИЕNull() {
                return this.IsNull(this.tableВиды_автомобилей.НАИМЕНОВАНИЕColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetНАИМЕНОВАНИЕNull() {
                this[this.tableВиды_автомобилей.НАИМЕНОВАНИЕColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsОПИСАНИЕNull() {
                return this.IsNull(this.tableВиды_автомобилей.ОПИСАНИЕColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetОПИСАНИЕNull() {
                this[this.tableВиды_автомобилей.ОПИСАНИЕColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public АвтомобилиRow[] GetАвтомобилиRows() {
                if ((this.Table.ChildRelations["FK_Автомобили_Виды_автомобилей"] == null)) {
                    return new АвтомобилиRow[0];
                }
                else {
                    return ((АвтомобилиRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Автомобили_Виды_автомобилей"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Виды_грузовRow : global::System.Data.DataRow {
            
            private Виды_грузовDataTable tableВиды_грузов;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Виды_грузовRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableВиды_грузов = ((Виды_грузовDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int КОД_ВИДА_ГРУЗА {
                get {
                    return ((int)(this[this.tableВиды_грузов.КОД_ВИДА_ГРУЗАColumn]));
                }
                set {
                    this[this.tableВиды_грузов.КОД_ВИДА_ГРУЗАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string НАИМЕНОВАНИЕ {
                get {
                    try {
                        return ((string)(this[this.tableВиды_грузов.НАИМЕНОВАНИЕColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'НАИМЕНОВАНИЕ\' в таблице \'Виды_грузов\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableВиды_грузов.НАИМЕНОВАНИЕColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ {
                get {
                    try {
                        return ((int)(this[this.tableВиды_грузов.КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ\' в таблице \'Виды_гр" +
                                "узов\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableВиды_грузов.КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ОПИСАНИЕ {
                get {
                    try {
                        return ((string)(this[this.tableВиды_грузов.ОПИСАНИЕColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ОПИСАНИЕ\' в таблице \'Виды_грузов\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableВиды_грузов.ОПИСАНИЕColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsНАИМЕНОВАНИЕNull() {
                return this.IsNull(this.tableВиды_грузов.НАИМЕНОВАНИЕColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetНАИМЕНОВАНИЕNull() {
                this[this.tableВиды_грузов.НАИМЕНОВАНИЕColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsКОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИNull() {
                return this.IsNull(this.tableВиды_грузов.КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetКОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИNull() {
                this[this.tableВиды_грузов.КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsОПИСАНИЕNull() {
                return this.IsNull(this.tableВиды_грузов.ОПИСАНИЕColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetОПИСАНИЕNull() {
                this[this.tableВиды_грузов.ОПИСАНИЕColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ГрузыRow[] GetГрузыRows() {
                if ((this.Table.ChildRelations["FK_Грузы_Виды_грузов"] == null)) {
                    return new ГрузыRow[0];
                }
                else {
                    return ((ГрузыRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Грузы_Виды_грузов"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ГрузыRow : global::System.Data.DataRow {
            
            private ГрузыDataTable tableГрузы;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ГрузыRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableГрузы = ((ГрузыDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int КОД_ГРУЗА {
                get {
                    return ((int)(this[this.tableГрузы.КОД_ГРУЗАColumn]));
                }
                set {
                    this[this.tableГрузы.КОД_ГРУЗАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string НАИМЕНОВАНИЕ {
                get {
                    try {
                        return ((string)(this[this.tableГрузы.НАИМЕНОВАНИЕColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'НАИМЕНОВАНИЕ\' в таблице \'Грузы\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableГрузы.НАИМЕНОВАНИЕColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int КОД_ВИДА_ГРУЗА {
                get {
                    try {
                        return ((int)(this[this.tableГрузы.КОД_ВИДА_ГРУЗАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КОД_ВИДА_ГРУЗА\' в таблице \'Грузы\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableГрузы.КОД_ВИДА_ГРУЗАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string СРОК_ГОДНОСТИ {
                get {
                    try {
                        return ((string)(this[this.tableГрузы.СРОК_ГОДНОСТИColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'СРОК_ГОДНОСТИ\' в таблице \'Грузы\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableГрузы.СРОК_ГОДНОСТИColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ОСОБЕННОСТИ {
                get {
                    try {
                        return ((string)(this[this.tableГрузы.ОСОБЕННОСТИColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ОСОБЕННОСТИ\' в таблице \'Грузы\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableГрузы.ОСОБЕННОСТИColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Виды_грузовRow Виды_грузовRow {
                get {
                    return ((Виды_грузовRow)(this.GetParentRow(this.Table.ParentRelations["FK_Грузы_Виды_грузов"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Грузы_Виды_грузов"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsНАИМЕНОВАНИЕNull() {
                return this.IsNull(this.tableГрузы.НАИМЕНОВАНИЕColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetНАИМЕНОВАНИЕNull() {
                this[this.tableГрузы.НАИМЕНОВАНИЕColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsКОД_ВИДА_ГРУЗАNull() {
                return this.IsNull(this.tableГрузы.КОД_ВИДА_ГРУЗАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetКОД_ВИДА_ГРУЗАNull() {
                this[this.tableГрузы.КОД_ВИДА_ГРУЗАColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsСРОК_ГОДНОСТИNull() {
                return this.IsNull(this.tableГрузы.СРОК_ГОДНОСТИColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetСРОК_ГОДНОСТИNull() {
                this[this.tableГрузы.СРОК_ГОДНОСТИColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsОСОБЕННОСТИNull() {
                return this.IsNull(this.tableГрузы.ОСОБЕННОСТИColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetОСОБЕННОСТИNull() {
                this[this.tableГрузы.ОСОБЕННОСТИColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public РейсыRow[] GetРейсыRows() {
                if ((this.Table.ChildRelations["FK_Рейсы_Грузы"] == null)) {
                    return new РейсыRow[0];
                }
                else {
                    return ((РейсыRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Рейсы_Грузы"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ДолжностиRow : global::System.Data.DataRow {
            
            private ДолжностиDataTable tableДолжности;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ДолжностиRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableДолжности = ((ДолжностиDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int КОД_ДОЛЖНОСТИ {
                get {
                    return ((int)(this[this.tableДолжности.КОД_ДОЛЖНОСТИColumn]));
                }
                set {
                    this[this.tableДолжности.КОД_ДОЛЖНОСТИColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string НАИМЕНОВАНИЕ_ДОЛЖНОСТИ {
                get {
                    try {
                        return ((string)(this[this.tableДолжности.НАИМЕНОВАНИЕ_ДОЛЖНОСТИColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'НАИМЕНОВАНИЕ_ДОЛЖНОСТИ\' в таблице \'Должности\' равно DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableДолжности.НАИМЕНОВАНИЕ_ДОЛЖНОСТИColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ОКЛАД {
                get {
                    try {
                        return ((int)(this[this.tableДолжности.ОКЛАДColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ОКЛАД\' в таблице \'Должности\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДолжности.ОКЛАДColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ОБЯЗАННОСТИ {
                get {
                    try {
                        return ((string)(this[this.tableДолжности.ОБЯЗАННОСТИColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ОБЯЗАННОСТИ\' в таблице \'Должности\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДолжности.ОБЯЗАННОСТИColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ТРЕБОВАНИЯ {
                get {
                    try {
                        return ((string)(this[this.tableДолжности.ТРЕБОВАНИЯColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ТРЕБОВАНИЯ\' в таблице \'Должности\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДолжности.ТРЕБОВАНИЯColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsНАИМЕНОВАНИЕ_ДОЛЖНОСТИNull() {
                return this.IsNull(this.tableДолжности.НАИМЕНОВАНИЕ_ДОЛЖНОСТИColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetНАИМЕНОВАНИЕ_ДОЛЖНОСТИNull() {
                this[this.tableДолжности.НАИМЕНОВАНИЕ_ДОЛЖНОСТИColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsОКЛАДNull() {
                return this.IsNull(this.tableДолжности.ОКЛАДColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetОКЛАДNull() {
                this[this.tableДолжности.ОКЛАДColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsОБЯЗАННОСТИNull() {
                return this.IsNull(this.tableДолжности.ОБЯЗАННОСТИColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetОБЯЗАННОСТИNull() {
                this[this.tableДолжности.ОБЯЗАННОСТИColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsТРЕБОВАНИЯNull() {
                return this.IsNull(this.tableДолжности.ТРЕБОВАНИЯColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetТРЕБОВАНИЯNull() {
                this[this.tableДолжности.ТРЕБОВАНИЯColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СотрудникиRow[] GetСотрудникиRows() {
                if ((this.Table.ChildRelations["FK_Сотрудники_Должности"] == null)) {
                    return new СотрудникиRow[0];
                }
                else {
                    return ((СотрудникиRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Сотрудники_Должности"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Марки_автомобилейRow : global::System.Data.DataRow {
            
            private Марки_автомобилейDataTable tableМарки_автомобилей;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Марки_автомобилейRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableМарки_автомобилей = ((Марки_автомобилейDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int КОД_МАРКИ {
                get {
                    return ((int)(this[this.tableМарки_автомобилей.КОД_МАРКИColumn]));
                }
                set {
                    this[this.tableМарки_автомобилей.КОД_МАРКИColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string НАИМЕНОВАНИЕ {
                get {
                    try {
                        return ((string)(this[this.tableМарки_автомобилей.НАИМЕНОВАНИЕColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'НАИМЕНОВАНИЕ\' в таблице \'Марки_автомобилей\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableМарки_автомобилей.НАИМЕНОВАНИЕColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ {
                get {
                    try {
                        return ((string)(this[this.tableМарки_автомобилей.ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ\' в таблице \'Марки_автомобилей\' р" +
                                "авно DBNull.", e);
                    }
                }
                set {
                    this[this.tableМарки_автомобилей.ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ОПИСАНИЕ {
                get {
                    try {
                        return ((string)(this[this.tableМарки_автомобилей.ОПИСАНИЕColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ОПИСАНИЕ\' в таблице \'Марки_автомобилей\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableМарки_автомобилей.ОПИСАНИЕColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsНАИМЕНОВАНИЕNull() {
                return this.IsNull(this.tableМарки_автомобилей.НАИМЕНОВАНИЕColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetНАИМЕНОВАНИЕNull() {
                this[this.tableМарки_автомобилей.НАИМЕНОВАНИЕColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИNull() {
                return this.IsNull(this.tableМарки_автомобилей.ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИNull() {
                this[this.tableМарки_автомобилей.ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsОПИСАНИЕNull() {
                return this.IsNull(this.tableМарки_автомобилей.ОПИСАНИЕColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetОПИСАНИЕNull() {
                this[this.tableМарки_автомобилей.ОПИСАНИЕColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public АвтомобилиRow[] GetАвтомобилиRows() {
                if ((this.Table.ChildRelations["FK_Автомобили_Марки_автомобилей"] == null)) {
                    return new АвтомобилиRow[0];
                }
                else {
                    return ((АвтомобилиRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Автомобили_Марки_автомобилей"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class РейсыRow : global::System.Data.DataRow {
            
            private РейсыDataTable tableРейсы;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal РейсыRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableРейсы = ((РейсыDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int КОД_АВТОМОБИЛЯ {
                get {
                    return ((int)(this[this.tableРейсы.КОД_АВТОМОБИЛЯColumn]));
                }
                set {
                    this[this.tableРейсы.КОД_АВТОМОБИЛЯColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ЗАКАЗЧИК {
                get {
                    try {
                        return ((string)(this[this.tableРейсы.ЗАКАЗЧИКColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ЗАКАЗЧИК\' в таблице \'Рейсы\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableРейсы.ЗАКАЗЧИКColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ОТКУДА {
                get {
                    try {
                        return ((string)(this[this.tableРейсы.ОТКУДАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ОТКУДА\' в таблице \'Рейсы\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableРейсы.ОТКУДАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string КУДА {
                get {
                    try {
                        return ((string)(this[this.tableРейсы.КУДАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КУДА\' в таблице \'Рейсы\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableРейсы.КУДАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ДАТА_ОТПРАВЛЕНИЯ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableРейсы.ДАТА_ОТПРАВЛЕНИЯColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ДАТА_ОТПРАВЛЕНИЯ\' в таблице \'Рейсы\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableРейсы.ДАТА_ОТПРАВЛЕНИЯColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ДАТА_ПРИБЫТИЯ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableРейсы.ДАТА_ПРИБЫТИЯColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ДАТА_ПРИБЫТИЯ\' в таблице \'Рейсы\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableРейсы.ДАТА_ПРИБЫТИЯColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int КОД_ГРУЗА {
                get {
                    try {
                        return ((int)(this[this.tableРейсы.КОД_ГРУЗАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КОД_ГРУЗА\' в таблице \'Рейсы\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableРейсы.КОД_ГРУЗАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ЦЕНА {
                get {
                    try {
                        return ((int)(this[this.tableРейсы.ЦЕНАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ЦЕНА\' в таблице \'Рейсы\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableРейсы.ЦЕНАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool ОТМЕТКА_ОБ_ОПЛАТЕ {
                get {
                    try {
                        return ((bool)(this[this.tableРейсы.ОТМЕТКА_ОБ_ОПЛАТЕColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ОТМЕТКА_ОБ_ОПЛАТЕ\' в таблице \'Рейсы\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableРейсы.ОТМЕТКА_ОБ_ОПЛАТЕColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool ОТМЕТКА_О_ВОЗВРАЩЕНИИ {
                get {
                    try {
                        return ((bool)(this[this.tableРейсы.ОТМЕТКА_О_ВОЗВРАЩЕНИИColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ОТМЕТКА_О_ВОЗВРАЩЕНИИ\' в таблице \'Рейсы\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableРейсы.ОТМЕТКА_О_ВОЗВРАЩЕНИИColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int КОД_СОТРУДНИКА {
                get {
                    try {
                        return ((int)(this[this.tableРейсы.КОД_СОТРУДНИКАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КОД_СОТРУДНИКА\' в таблице \'Рейсы\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableРейсы.КОД_СОТРУДНИКАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ГрузыRow ГрузыRow {
                get {
                    return ((ГрузыRow)(this.GetParentRow(this.Table.ParentRelations["FK_Рейсы_Грузы"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Рейсы_Грузы"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СотрудникиRow СотрудникиRow {
                get {
                    return ((СотрудникиRow)(this.GetParentRow(this.Table.ParentRelations["FK_Рейсы_Сотрудники"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Рейсы_Сотрудники"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsЗАКАЗЧИКNull() {
                return this.IsNull(this.tableРейсы.ЗАКАЗЧИКColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetЗАКАЗЧИКNull() {
                this[this.tableРейсы.ЗАКАЗЧИКColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsОТКУДАNull() {
                return this.IsNull(this.tableРейсы.ОТКУДАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetОТКУДАNull() {
                this[this.tableРейсы.ОТКУДАColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsКУДАNull() {
                return this.IsNull(this.tableРейсы.КУДАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetКУДАNull() {
                this[this.tableРейсы.КУДАColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsДАТА_ОТПРАВЛЕНИЯNull() {
                return this.IsNull(this.tableРейсы.ДАТА_ОТПРАВЛЕНИЯColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetДАТА_ОТПРАВЛЕНИЯNull() {
                this[this.tableРейсы.ДАТА_ОТПРАВЛЕНИЯColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsДАТА_ПРИБЫТИЯNull() {
                return this.IsNull(this.tableРейсы.ДАТА_ПРИБЫТИЯColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetДАТА_ПРИБЫТИЯNull() {
                this[this.tableРейсы.ДАТА_ПРИБЫТИЯColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsКОД_ГРУЗАNull() {
                return this.IsNull(this.tableРейсы.КОД_ГРУЗАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetКОД_ГРУЗАNull() {
                this[this.tableРейсы.КОД_ГРУЗАColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsЦЕНАNull() {
                return this.IsNull(this.tableРейсы.ЦЕНАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetЦЕНАNull() {
                this[this.tableРейсы.ЦЕНАColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsОТМЕТКА_ОБ_ОПЛАТЕNull() {
                return this.IsNull(this.tableРейсы.ОТМЕТКА_ОБ_ОПЛАТЕColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetОТМЕТКА_ОБ_ОПЛАТЕNull() {
                this[this.tableРейсы.ОТМЕТКА_ОБ_ОПЛАТЕColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsОТМЕТКА_О_ВОЗВРАЩЕНИИNull() {
                return this.IsNull(this.tableРейсы.ОТМЕТКА_О_ВОЗВРАЩЕНИИColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetОТМЕТКА_О_ВОЗВРАЩЕНИИNull() {
                this[this.tableРейсы.ОТМЕТКА_О_ВОЗВРАЩЕНИИColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsКОД_СОТРУДНИКАNull() {
                return this.IsNull(this.tableРейсы.КОД_СОТРУДНИКАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetКОД_СОТРУДНИКАNull() {
                this[this.tableРейсы.КОД_СОТРУДНИКАColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public АвтомобилиRow[] GetАвтомобилиRows() {
                if ((this.Table.ChildRelations["FK_Автомобили_Рейсы"] == null)) {
                    return new АвтомобилиRow[0];
                }
                else {
                    return ((АвтомобилиRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Автомобили_Рейсы"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class СотрудникиRow : global::System.Data.DataRow {
            
            private СотрудникиDataTable tableСотрудники;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal СотрудникиRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableСотрудники = ((СотрудникиDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int КОД_СОТРУДНИКА {
                get {
                    return ((int)(this[this.tableСотрудники.КОД_СОТРУДНИКАColumn]));
                }
                set {
                    this[this.tableСотрудники.КОД_СОТРУДНИКАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ФИО {
                get {
                    try {
                        return ((string)(this[this.tableСотрудники.ФИОColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ФИО\' в таблице \'Сотрудники\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableСотрудники.ФИОColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ВОЗРАСТ {
                get {
                    try {
                        return ((int)(this[this.tableСотрудники.ВОЗРАСТColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ВОЗРАСТ\' в таблице \'Сотрудники\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableСотрудники.ВОЗРАСТColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ПОЛ {
                get {
                    try {
                        return ((string)(this[this.tableСотрудники.ПОЛColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ПОЛ\' в таблице \'Сотрудники\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableСотрудники.ПОЛColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string АДРЕС {
                get {
                    try {
                        return ((string)(this[this.tableСотрудники.АДРЕСColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'АДРЕС\' в таблице \'Сотрудники\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableСотрудники.АДРЕСColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ТЕЛЕФОН {
                get {
                    try {
                        return ((string)(this[this.tableСотрудники.ТЕЛЕФОНColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ТЕЛЕФОН\' в таблице \'Сотрудники\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableСотрудники.ТЕЛЕФОНColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ПАСПОРТНЫЕ_ДАННЫЕ {
                get {
                    try {
                        return ((string)(this[this.tableСотрудники.ПАСПОРТНЫЕ_ДАННЫЕColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ПАСПОРТНЫЕ_ДАННЫЕ\' в таблице \'Сотрудники\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableСотрудники.ПАСПОРТНЫЕ_ДАННЫЕColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int КОД_ДОЛЖНОСТИ {
                get {
                    try {
                        return ((int)(this[this.tableСотрудники.КОД_ДОЛЖНОСТИColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КОД_ДОЛЖНОСТИ\' в таблице \'Сотрудники\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableСотрудники.КОД_ДОЛЖНОСТИColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ДолжностиRow ДолжностиRow {
                get {
                    return ((ДолжностиRow)(this.GetParentRow(this.Table.ParentRelations["FK_Сотрудники_Должности"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Сотрудники_Должности"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsФИОNull() {
                return this.IsNull(this.tableСотрудники.ФИОColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetФИОNull() {
                this[this.tableСотрудники.ФИОColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsВОЗРАСТNull() {
                return this.IsNull(this.tableСотрудники.ВОЗРАСТColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetВОЗРАСТNull() {
                this[this.tableСотрудники.ВОЗРАСТColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsПОЛNull() {
                return this.IsNull(this.tableСотрудники.ПОЛColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetПОЛNull() {
                this[this.tableСотрудники.ПОЛColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsАДРЕСNull() {
                return this.IsNull(this.tableСотрудники.АДРЕСColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetАДРЕСNull() {
                this[this.tableСотрудники.АДРЕСColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsТЕЛЕФОНNull() {
                return this.IsNull(this.tableСотрудники.ТЕЛЕФОНColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetТЕЛЕФОНNull() {
                this[this.tableСотрудники.ТЕЛЕФОНColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsПАСПОРТНЫЕ_ДАННЫЕNull() {
                return this.IsNull(this.tableСотрудники.ПАСПОРТНЫЕ_ДАННЫЕColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetПАСПОРТНЫЕ_ДАННЫЕNull() {
                this[this.tableСотрудники.ПАСПОРТНЫЕ_ДАННЫЕColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsКОД_ДОЛЖНОСТИNull() {
                return this.IsNull(this.tableСотрудники.КОД_ДОЛЖНОСТИColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetКОД_ДОЛЖНОСТИNull() {
                this[this.tableСотрудники.КОД_ДОЛЖНОСТИColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public РейсыRow[] GetРейсыRows() {
                if ((this.Table.ChildRelations["FK_Рейсы_Сотрудники"] == null)) {
                    return new РейсыRow[0];
                }
                else {
                    return ((РейсыRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Рейсы_Сотрудники"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class АвтопаркRow : global::System.Data.DataRow {
            
            private АвтопаркDataTable tableАвтопарк;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal АвтопаркRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableАвтопарк = ((АвтопаркDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int КОД_АВТОМОБИЛЯ {
                get {
                    return ((int)(this[this.tableАвтопарк.КОД_АВТОМОБИЛЯColumn]));
                }
                set {
                    this[this.tableАвтопарк.КОД_АВТОМОБИЛЯColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int КОД_МАРКИ {
                get {
                    try {
                        return ((int)(this[this.tableАвтопарк.КОД_МАРКИColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КОД_МАРКИ\' в таблице \'Автопарк\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableАвтопарк.КОД_МАРКИColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string НАИМЕНОВАНИЕ {
                get {
                    try {
                        return ((string)(this[this.tableАвтопарк.НАИМЕНОВАНИЕColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'НАИМЕНОВАНИЕ\' в таблице \'Автопарк\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableАвтопарк.НАИМЕНОВАНИЕColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ {
                get {
                    try {
                        return ((string)(this[this.tableАвтопарк.ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ\' в таблице \'Автопарк\' равно DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableАвтопарк.ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ОПИСАНИЕ {
                get {
                    try {
                        return ((string)(this[this.tableАвтопарк.ОПИСАНИЕColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ОПИСАНИЕ\' в таблице \'Автопарк\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableАвтопарк.ОПИСАНИЕColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int КОД_ВИДА_АВТОМОБИЛЯ {
                get {
                    try {
                        return ((int)(this[this.tableАвтопарк.КОД_ВИДА_АВТОМОБИЛЯColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КОД_ВИДА_АВТОМОБИЛЯ\' в таблице \'Автопарк\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableАвтопарк.КОД_ВИДА_АВТОМОБИЛЯColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string НАИМЕНОВАНИЕ_ВИДА_АВТОМОБИЛЯ {
                get {
                    try {
                        return ((string)(this[this.tableАвтопарк.НАИМЕНОВАНИЕ_ВИДА_АВТОМОБИЛЯColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'НАИМЕНОВАНИЕ_ВИДА_АВТОМОБИЛЯ\' в таблице \'Автопарк\' равно DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableАвтопарк.НАИМЕНОВАНИЕ_ВИДА_АВТОМОБИЛЯColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ОПИСАНИЕ_ВИДА {
                get {
                    try {
                        return ((string)(this[this.tableАвтопарк.ОПИСАНИЕ_ВИДАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ОПИСАНИЕ_ВИДА\' в таблице \'Автопарк\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableАвтопарк.ОПИСАНИЕ_ВИДАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string РЕГИСТРАЦИОННЫЙ_НОМЕР {
                get {
                    try {
                        return ((string)(this[this.tableАвтопарк.РЕГИСТРАЦИОННЫЙ_НОМЕРColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'РЕГИСТРАЦИОННЫЙ_НОМЕР\' в таблице \'Автопарк\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableАвтопарк.РЕГИСТРАЦИОННЫЙ_НОМЕРColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int НОМЕР_КУЗОВА {
                get {
                    try {
                        return ((int)(this[this.tableАвтопарк.НОМЕР_КУЗОВАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'НОМЕР_КУЗОВА\' в таблице \'Автопарк\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableАвтопарк.НОМЕР_КУЗОВАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int НОМЕР_ДВИГАТЕЛЯ {
                get {
                    try {
                        return ((int)(this[this.tableАвтопарк.НОМЕР_ДВИГАТЕЛЯColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'НОМЕР_ДВИГАТЕЛЯ\' в таблице \'Автопарк\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableАвтопарк.НОМЕР_ДВИГАТЕЛЯColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ГОД_ВЫПУСКА {
                get {
                    try {
                        return ((int)(this[this.tableАвтопарк.ГОД_ВЫПУСКАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ГОД_ВЫПУСКА\' в таблице \'Автопарк\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableАвтопарк.ГОД_ВЫПУСКАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int КОД_СОТРУДНИКА_ВОДИТЕЛЯ {
                get {
                    try {
                        return ((int)(this[this.tableАвтопарк.КОД_СОТРУДНИКА_ВОДИТЕЛЯColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КОД_СОТРУДНИКА_ВОДИТЕЛЯ\' в таблице \'Автопарк\' равно DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableАвтопарк.КОД_СОТРУДНИКА_ВОДИТЕЛЯColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ФИО {
                get {
                    try {
                        return ((string)(this[this.tableАвтопарк.ФИОColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ФИО\' в таблице \'Автопарк\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableАвтопарк.ФИОColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ТЕЛЕФОН {
                get {
                    try {
                        return ((string)(this[this.tableАвтопарк.ТЕЛЕФОНColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ТЕЛЕФОН\' в таблице \'Автопарк\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableАвтопарк.ТЕЛЕФОНColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ДАТА_ПОСЛЕДНЕГО_ТО {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableАвтопарк.ДАТА_ПОСЛЕДНЕГО_ТОColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ДАТА_ПОСЛЕДНЕГО_ТО\' в таблице \'Автопарк\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableАвтопарк.ДАТА_ПОСЛЕДНЕГО_ТОColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int КОД_СОТРУДНИКА_МЕХАНИКА {
                get {
                    try {
                        return ((int)(this[this.tableАвтопарк.КОД_СОТРУДНИКА_МЕХАНИКАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КОД_СОТРУДНИКА_МЕХАНИКА\' в таблице \'Автопарк\' равно DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableАвтопарк.КОД_СОТРУДНИКА_МЕХАНИКАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsКОД_МАРКИNull() {
                return this.IsNull(this.tableАвтопарк.КОД_МАРКИColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetКОД_МАРКИNull() {
                this[this.tableАвтопарк.КОД_МАРКИColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsНАИМЕНОВАНИЕNull() {
                return this.IsNull(this.tableАвтопарк.НАИМЕНОВАНИЕColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetНАИМЕНОВАНИЕNull() {
                this[this.tableАвтопарк.НАИМЕНОВАНИЕColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИNull() {
                return this.IsNull(this.tableАвтопарк.ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИNull() {
                this[this.tableАвтопарк.ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsОПИСАНИЕNull() {
                return this.IsNull(this.tableАвтопарк.ОПИСАНИЕColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetОПИСАНИЕNull() {
                this[this.tableАвтопарк.ОПИСАНИЕColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsКОД_ВИДА_АВТОМОБИЛЯNull() {
                return this.IsNull(this.tableАвтопарк.КОД_ВИДА_АВТОМОБИЛЯColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetКОД_ВИДА_АВТОМОБИЛЯNull() {
                this[this.tableАвтопарк.КОД_ВИДА_АВТОМОБИЛЯColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsНАИМЕНОВАНИЕ_ВИДА_АВТОМОБИЛЯNull() {
                return this.IsNull(this.tableАвтопарк.НАИМЕНОВАНИЕ_ВИДА_АВТОМОБИЛЯColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetНАИМЕНОВАНИЕ_ВИДА_АВТОМОБИЛЯNull() {
                this[this.tableАвтопарк.НАИМЕНОВАНИЕ_ВИДА_АВТОМОБИЛЯColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsОПИСАНИЕ_ВИДАNull() {
                return this.IsNull(this.tableАвтопарк.ОПИСАНИЕ_ВИДАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetОПИСАНИЕ_ВИДАNull() {
                this[this.tableАвтопарк.ОПИСАНИЕ_ВИДАColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsРЕГИСТРАЦИОННЫЙ_НОМЕРNull() {
                return this.IsNull(this.tableАвтопарк.РЕГИСТРАЦИОННЫЙ_НОМЕРColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetРЕГИСТРАЦИОННЫЙ_НОМЕРNull() {
                this[this.tableАвтопарк.РЕГИСТРАЦИОННЫЙ_НОМЕРColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsНОМЕР_КУЗОВАNull() {
                return this.IsNull(this.tableАвтопарк.НОМЕР_КУЗОВАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetНОМЕР_КУЗОВАNull() {
                this[this.tableАвтопарк.НОМЕР_КУЗОВАColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsНОМЕР_ДВИГАТЕЛЯNull() {
                return this.IsNull(this.tableАвтопарк.НОМЕР_ДВИГАТЕЛЯColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetНОМЕР_ДВИГАТЕЛЯNull() {
                this[this.tableАвтопарк.НОМЕР_ДВИГАТЕЛЯColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsГОД_ВЫПУСКАNull() {
                return this.IsNull(this.tableАвтопарк.ГОД_ВЫПУСКАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetГОД_ВЫПУСКАNull() {
                this[this.tableАвтопарк.ГОД_ВЫПУСКАColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsКОД_СОТРУДНИКА_ВОДИТЕЛЯNull() {
                return this.IsNull(this.tableАвтопарк.КОД_СОТРУДНИКА_ВОДИТЕЛЯColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetКОД_СОТРУДНИКА_ВОДИТЕЛЯNull() {
                this[this.tableАвтопарк.КОД_СОТРУДНИКА_ВОДИТЕЛЯColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsФИОNull() {
                return this.IsNull(this.tableАвтопарк.ФИОColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetФИОNull() {
                this[this.tableАвтопарк.ФИОColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsТЕЛЕФОНNull() {
                return this.IsNull(this.tableАвтопарк.ТЕЛЕФОНColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetТЕЛЕФОНNull() {
                this[this.tableАвтопарк.ТЕЛЕФОНColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsДАТА_ПОСЛЕДНЕГО_ТОNull() {
                return this.IsNull(this.tableАвтопарк.ДАТА_ПОСЛЕДНЕГО_ТОColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetДАТА_ПОСЛЕДНЕГО_ТОNull() {
                this[this.tableАвтопарк.ДАТА_ПОСЛЕДНЕГО_ТОColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsКОД_СОТРУДНИКА_МЕХАНИКАNull() {
                return this.IsNull(this.tableАвтопарк.КОД_СОТРУДНИКА_МЕХАНИКАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetКОД_СОТРУДНИКА_МЕХАНИКАNull() {
                this[this.tableАвтопарк.КОД_СОТРУДНИКА_МЕХАНИКАColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ЗаказыRow : global::System.Data.DataRow {
            
            private ЗаказыDataTable tableЗаказы;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ЗаказыRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableЗаказы = ((ЗаказыDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int КОД_АВТОМОБИЛЯ {
                get {
                    return ((int)(this[this.tableЗаказы.КОД_АВТОМОБИЛЯColumn]));
                }
                set {
                    this[this.tableЗаказы.КОД_АВТОМОБИЛЯColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int КОД_МАРКИ {
                get {
                    try {
                        return ((int)(this[this.tableЗаказы.КОД_МАРКИColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КОД_МАРКИ\' в таблице \'Заказы\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableЗаказы.КОД_МАРКИColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int КОД_ВИДА_АВТОМОБИЛЯ {
                get {
                    try {
                        return ((int)(this[this.tableЗаказы.КОД_ВИДА_АВТОМОБИЛЯColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КОД_ВИДА_АВТОМОБИЛЯ\' в таблице \'Заказы\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableЗаказы.КОД_ВИДА_АВТОМОБИЛЯColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string РЕГИСТРАЦИОННЫЙ_НОМЕР {
                get {
                    try {
                        return ((string)(this[this.tableЗаказы.РЕГИСТРАЦИОННЫЙ_НОМЕРColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'РЕГИСТРАЦИОННЫЙ_НОМЕР\' в таблице \'Заказы\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableЗаказы.РЕГИСТРАЦИОННЫЙ_НОМЕРColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ЗАКАЗЧИК {
                get {
                    try {
                        return ((string)(this[this.tableЗаказы.ЗАКАЗЧИКColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ЗАКАЗЧИК\' в таблице \'Заказы\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableЗаказы.ЗАКАЗЧИКColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ОТКУДА {
                get {
                    try {
                        return ((string)(this[this.tableЗаказы.ОТКУДАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ОТКУДА\' в таблице \'Заказы\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableЗаказы.ОТКУДАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string КУДА {
                get {
                    try {
                        return ((string)(this[this.tableЗаказы.КУДАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КУДА\' в таблице \'Заказы\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableЗаказы.КУДАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ДАТА_ОТПРАВЛЕНИЯ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableЗаказы.ДАТА_ОТПРАВЛЕНИЯColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ДАТА_ОТПРАВЛЕНИЯ\' в таблице \'Заказы\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableЗаказы.ДАТА_ОТПРАВЛЕНИЯColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ДАТА_ПРИБЫТИЯ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableЗаказы.ДАТА_ПРИБЫТИЯColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ДАТА_ПРИБЫТИЯ\' в таблице \'Заказы\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableЗаказы.ДАТА_ПРИБЫТИЯColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int КОД_ГРУЗА {
                get {
                    try {
                        return ((int)(this[this.tableЗаказы.КОД_ГРУЗАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КОД_ГРУЗА\' в таблице \'Заказы\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableЗаказы.КОД_ГРУЗАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string НАИМЕНОВАНИЕ {
                get {
                    try {
                        return ((string)(this[this.tableЗаказы.НАИМЕНОВАНИЕColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'НАИМЕНОВАНИЕ\' в таблице \'Заказы\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableЗаказы.НАИМЕНОВАНИЕColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int КОД_ВИДА_ГРУЗА {
                get {
                    try {
                        return ((int)(this[this.tableЗаказы.КОД_ВИДА_ГРУЗАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КОД_ВИДА_ГРУЗА\' в таблице \'Заказы\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableЗаказы.КОД_ВИДА_ГРУЗАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string СРОК_ГОДНОСТИ {
                get {
                    try {
                        return ((string)(this[this.tableЗаказы.СРОК_ГОДНОСТИColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'СРОК_ГОДНОСТИ\' в таблице \'Заказы\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableЗаказы.СРОК_ГОДНОСТИColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ЦЕНА {
                get {
                    try {
                        return ((int)(this[this.tableЗаказы.ЦЕНАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ЦЕНА\' в таблице \'Заказы\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableЗаказы.ЦЕНАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool ОТМЕТКА_ОБ_ОПЛАТЕ {
                get {
                    try {
                        return ((bool)(this[this.tableЗаказы.ОТМЕТКА_ОБ_ОПЛАТЕColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ОТМЕТКА_ОБ_ОПЛАТЕ\' в таблице \'Заказы\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableЗаказы.ОТМЕТКА_ОБ_ОПЛАТЕColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool ОТМЕТКА_О_ВОЗВРАЩЕНИИ {
                get {
                    try {
                        return ((bool)(this[this.tableЗаказы.ОТМЕТКА_О_ВОЗВРАЩЕНИИColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ОТМЕТКА_О_ВОЗВРАЩЕНИИ\' в таблице \'Заказы\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableЗаказы.ОТМЕТКА_О_ВОЗВРАЩЕНИИColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int КОД_СОТРУДНИКА {
                get {
                    try {
                        return ((int)(this[this.tableЗаказы.КОД_СОТРУДНИКАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КОД_СОТРУДНИКА\' в таблице \'Заказы\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableЗаказы.КОД_СОТРУДНИКАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ФИО {
                get {
                    try {
                        return ((string)(this[this.tableЗаказы.ФИОColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ФИО\' в таблице \'Заказы\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableЗаказы.ФИОColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsКОД_МАРКИNull() {
                return this.IsNull(this.tableЗаказы.КОД_МАРКИColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetКОД_МАРКИNull() {
                this[this.tableЗаказы.КОД_МАРКИColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsКОД_ВИДА_АВТОМОБИЛЯNull() {
                return this.IsNull(this.tableЗаказы.КОД_ВИДА_АВТОМОБИЛЯColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetКОД_ВИДА_АВТОМОБИЛЯNull() {
                this[this.tableЗаказы.КОД_ВИДА_АВТОМОБИЛЯColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsРЕГИСТРАЦИОННЫЙ_НОМЕРNull() {
                return this.IsNull(this.tableЗаказы.РЕГИСТРАЦИОННЫЙ_НОМЕРColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetРЕГИСТРАЦИОННЫЙ_НОМЕРNull() {
                this[this.tableЗаказы.РЕГИСТРАЦИОННЫЙ_НОМЕРColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsЗАКАЗЧИКNull() {
                return this.IsNull(this.tableЗаказы.ЗАКАЗЧИКColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetЗАКАЗЧИКNull() {
                this[this.tableЗаказы.ЗАКАЗЧИКColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsОТКУДАNull() {
                return this.IsNull(this.tableЗаказы.ОТКУДАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetОТКУДАNull() {
                this[this.tableЗаказы.ОТКУДАColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsКУДАNull() {
                return this.IsNull(this.tableЗаказы.КУДАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetКУДАNull() {
                this[this.tableЗаказы.КУДАColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsДАТА_ОТПРАВЛЕНИЯNull() {
                return this.IsNull(this.tableЗаказы.ДАТА_ОТПРАВЛЕНИЯColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetДАТА_ОТПРАВЛЕНИЯNull() {
                this[this.tableЗаказы.ДАТА_ОТПРАВЛЕНИЯColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsДАТА_ПРИБЫТИЯNull() {
                return this.IsNull(this.tableЗаказы.ДАТА_ПРИБЫТИЯColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetДАТА_ПРИБЫТИЯNull() {
                this[this.tableЗаказы.ДАТА_ПРИБЫТИЯColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsКОД_ГРУЗАNull() {
                return this.IsNull(this.tableЗаказы.КОД_ГРУЗАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetКОД_ГРУЗАNull() {
                this[this.tableЗаказы.КОД_ГРУЗАColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsНАИМЕНОВАНИЕNull() {
                return this.IsNull(this.tableЗаказы.НАИМЕНОВАНИЕColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetНАИМЕНОВАНИЕNull() {
                this[this.tableЗаказы.НАИМЕНОВАНИЕColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsКОД_ВИДА_ГРУЗАNull() {
                return this.IsNull(this.tableЗаказы.КОД_ВИДА_ГРУЗАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetКОД_ВИДА_ГРУЗАNull() {
                this[this.tableЗаказы.КОД_ВИДА_ГРУЗАColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsСРОК_ГОДНОСТИNull() {
                return this.IsNull(this.tableЗаказы.СРОК_ГОДНОСТИColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetСРОК_ГОДНОСТИNull() {
                this[this.tableЗаказы.СРОК_ГОДНОСТИColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsЦЕНАNull() {
                return this.IsNull(this.tableЗаказы.ЦЕНАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetЦЕНАNull() {
                this[this.tableЗаказы.ЦЕНАColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsОТМЕТКА_ОБ_ОПЛАТЕNull() {
                return this.IsNull(this.tableЗаказы.ОТМЕТКА_ОБ_ОПЛАТЕColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetОТМЕТКА_ОБ_ОПЛАТЕNull() {
                this[this.tableЗаказы.ОТМЕТКА_ОБ_ОПЛАТЕColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsОТМЕТКА_О_ВОЗВРАЩЕНИИNull() {
                return this.IsNull(this.tableЗаказы.ОТМЕТКА_О_ВОЗВРАЩЕНИИColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetОТМЕТКА_О_ВОЗВРАЩЕНИИNull() {
                this[this.tableЗаказы.ОТМЕТКА_О_ВОЗВРАЩЕНИИColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsКОД_СОТРУДНИКАNull() {
                return this.IsNull(this.tableЗаказы.КОД_СОТРУДНИКАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetКОД_СОТРУДНИКАNull() {
                this[this.tableЗаказы.КОД_СОТРУДНИКАColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsФИОNull() {
                return this.IsNull(this.tableЗаказы.ФИОColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetФИОNull() {
                this[this.tableЗаказы.ФИОColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Отдел_кадровRow : global::System.Data.DataRow {
            
            private Отдел_кадровDataTable tableОтдел_кадров;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Отдел_кадровRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableОтдел_кадров = ((Отдел_кадровDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int КОД_СОТРУДНИКА {
                get {
                    return ((int)(this[this.tableОтдел_кадров.КОД_СОТРУДНИКАColumn]));
                }
                set {
                    this[this.tableОтдел_кадров.КОД_СОТРУДНИКАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ФИО {
                get {
                    try {
                        return ((string)(this[this.tableОтдел_кадров.ФИОColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ФИО\' в таблице \'Отдел_кадров\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableОтдел_кадров.ФИОColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int КОД_ДОЛЖНОСТИ {
                get {
                    return ((int)(this[this.tableОтдел_кадров.КОД_ДОЛЖНОСТИColumn]));
                }
                set {
                    this[this.tableОтдел_кадров.КОД_ДОЛЖНОСТИColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string НАИМЕНОВАНИЕ_ДОЛЖНОСТИ {
                get {
                    try {
                        return ((string)(this[this.tableОтдел_кадров.НАИМЕНОВАНИЕ_ДОЛЖНОСТИColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'НАИМЕНОВАНИЕ_ДОЛЖНОСТИ\' в таблице \'Отдел_кадров\' равно DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableОтдел_кадров.НАИМЕНОВАНИЕ_ДОЛЖНОСТИColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ОКЛАД {
                get {
                    try {
                        return ((int)(this[this.tableОтдел_кадров.ОКЛАДColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ОКЛАД\' в таблице \'Отдел_кадров\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableОтдел_кадров.ОКЛАДColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ОБЯЗАННОСТИ {
                get {
                    try {
                        return ((string)(this[this.tableОтдел_кадров.ОБЯЗАННОСТИColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ОБЯЗАННОСТИ\' в таблице \'Отдел_кадров\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableОтдел_кадров.ОБЯЗАННОСТИColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ТРЕБОВАНИЯ {
                get {
                    try {
                        return ((string)(this[this.tableОтдел_кадров.ТРЕБОВАНИЯColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ТРЕБОВАНИЯ\' в таблице \'Отдел_кадров\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableОтдел_кадров.ТРЕБОВАНИЯColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsФИОNull() {
                return this.IsNull(this.tableОтдел_кадров.ФИОColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetФИОNull() {
                this[this.tableОтдел_кадров.ФИОColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsНАИМЕНОВАНИЕ_ДОЛЖНОСТИNull() {
                return this.IsNull(this.tableОтдел_кадров.НАИМЕНОВАНИЕ_ДОЛЖНОСТИColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetНАИМЕНОВАНИЕ_ДОЛЖНОСТИNull() {
                this[this.tableОтдел_кадров.НАИМЕНОВАНИЕ_ДОЛЖНОСТИColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsОКЛАДNull() {
                return this.IsNull(this.tableОтдел_кадров.ОКЛАДColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetОКЛАДNull() {
                this[this.tableОтдел_кадров.ОКЛАДColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsОБЯЗАННОСТИNull() {
                return this.IsNull(this.tableОтдел_кадров.ОБЯЗАННОСТИColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetОБЯЗАННОСТИNull() {
                this[this.tableОтдел_кадров.ОБЯЗАННОСТИColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsТРЕБОВАНИЯNull() {
                return this.IsNull(this.tableОтдел_кадров.ТРЕБОВАНИЯColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetТРЕБОВАНИЯNull() {
                this[this.tableОтдел_кадров.ТРЕБОВАНИЯColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Перевозимые_грузыRow : global::System.Data.DataRow {
            
            private Перевозимые_грузыDataTable tableПеревозимые_грузы;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal Перевозимые_грузыRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableПеревозимые_грузы = ((Перевозимые_грузыDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int КОД_ГРУЗА {
                get {
                    return ((int)(this[this.tableПеревозимые_грузы.КОД_ГРУЗАColumn]));
                }
                set {
                    this[this.tableПеревозимые_грузы.КОД_ГРУЗАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string НАИМЕНОВАНИЕ {
                get {
                    try {
                        return ((string)(this[this.tableПеревозимые_грузы.НАИМЕНОВАНИЕColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'НАИМЕНОВАНИЕ\' в таблице \'Перевозимые_грузы\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableПеревозимые_грузы.НАИМЕНОВАНИЕColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string СРОК_ГОДНОСТИ {
                get {
                    try {
                        return ((string)(this[this.tableПеревозимые_грузы.СРОК_ГОДНОСТИColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'СРОК_ГОДНОСТИ\' в таблице \'Перевозимые_грузы\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableПеревозимые_грузы.СРОК_ГОДНОСТИColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ОСОБЕННОСТИ {
                get {
                    try {
                        return ((string)(this[this.tableПеревозимые_грузы.ОСОБЕННОСТИColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ОСОБЕННОСТИ\' в таблице \'Перевозимые_грузы\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableПеревозимые_грузы.ОСОБЕННОСТИColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int КОД_ВИДА_ГРУЗА {
                get {
                    try {
                        return ((int)(this[this.tableПеревозимые_грузы.КОД_ВИДА_ГРУЗАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КОД_ВИДА_ГРУЗА\' в таблице \'Перевозимые_грузы\' равно DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableПеревозимые_грузы.КОД_ВИДА_ГРУЗАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Наименование_вида_груза {
                get {
                    try {
                        return ((string)(this[this.tableПеревозимые_грузы.Наименование_вида_грузаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Наименование вида груза\' в таблице \'Перевозимые_грузы\' равн" +
                                "о DBNull.", e);
                    }
                }
                set {
                    this[this.tableПеревозимые_грузы.Наименование_вида_грузаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ {
                get {
                    try {
                        return ((int)(this[this.tableПеревозимые_грузы.КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ\' в таблице \'Перевоз" +
                                "имые_грузы\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableПеревозимые_грузы.КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsНАИМЕНОВАНИЕNull() {
                return this.IsNull(this.tableПеревозимые_грузы.НАИМЕНОВАНИЕColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetНАИМЕНОВАНИЕNull() {
                this[this.tableПеревозимые_грузы.НАИМЕНОВАНИЕColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsСРОК_ГОДНОСТИNull() {
                return this.IsNull(this.tableПеревозимые_грузы.СРОК_ГОДНОСТИColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetСРОК_ГОДНОСТИNull() {
                this[this.tableПеревозимые_грузы.СРОК_ГОДНОСТИColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsОСОБЕННОСТИNull() {
                return this.IsNull(this.tableПеревозимые_грузы.ОСОБЕННОСТИColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetОСОБЕННОСТИNull() {
                this[this.tableПеревозимые_грузы.ОСОБЕННОСТИColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsКОД_ВИДА_ГРУЗАNull() {
                return this.IsNull(this.tableПеревозимые_грузы.КОД_ВИДА_ГРУЗАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetКОД_ВИДА_ГРУЗАNull() {
                this[this.tableПеревозимые_грузы.КОД_ВИДА_ГРУЗАColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsНаименование_вида_грузаNull() {
                return this.IsNull(this.tableПеревозимые_грузы.Наименование_вида_грузаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetНаименование_вида_грузаNull() {
                this[this.tableПеревозимые_грузы.Наименование_вида_грузаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsКОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИNull() {
                return this.IsNull(this.tableПеревозимые_грузы.КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetКОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИNull() {
                this[this.tableПеревозимые_грузы.КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ТранспортировкаRow : global::System.Data.DataRow {
            
            private ТранспортировкаDataTable tableТранспортировка;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ТранспортировкаRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableТранспортировка = ((ТранспортировкаDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Код_вида_груза {
                get {
                    return ((int)(this[this.tableТранспортировка.Код_вида_грузаColumn]));
                }
                set {
                    this[this.tableТранспортировка.Код_вида_грузаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Наименование_груза {
                get {
                    try {
                        return ((string)(this[this.tableТранспортировка.Наименование_грузаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Наименование груза\' в таблице \'Транспортировка\' равно DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableТранспортировка.Наименование_грузаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Код_вида_автомобиля {
                get {
                    return ((int)(this[this.tableТранспортировка.Код_вида_автомобиляColumn]));
                }
                set {
                    this[this.tableТранспортировка.Код_вида_автомобиляColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Наименование {
                get {
                    try {
                        return ((string)(this[this.tableТранспортировка.НаименованиеColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Наименование\' в таблице \'Транспортировка\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableТранспортировка.НаименованиеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsНаименование_грузаNull() {
                return this.IsNull(this.tableТранспортировка.Наименование_грузаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetНаименование_грузаNull() {
                this[this.tableТранспортировка.Наименование_грузаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsНаименованиеNull() {
                return this.IsNull(this.tableТранспортировка.НаименованиеColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetНаименованиеNull() {
                this[this.tableТранспортировка.НаименованиеColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class АвтомобилиRowChangeEvent : global::System.EventArgs {
            
            private АвтомобилиRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public АвтомобилиRowChangeEvent(АвтомобилиRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public АвтомобилиRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class Виды_автомобилейRowChangeEvent : global::System.EventArgs {
            
            private Виды_автомобилейRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Виды_автомобилейRowChangeEvent(Виды_автомобилейRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Виды_автомобилейRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class Виды_грузовRowChangeEvent : global::System.EventArgs {
            
            private Виды_грузовRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Виды_грузовRowChangeEvent(Виды_грузовRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Виды_грузовRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ГрузыRowChangeEvent : global::System.EventArgs {
            
            private ГрузыRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ГрузыRowChangeEvent(ГрузыRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ГрузыRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ДолжностиRowChangeEvent : global::System.EventArgs {
            
            private ДолжностиRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ДолжностиRowChangeEvent(ДолжностиRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ДолжностиRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class Марки_автомобилейRowChangeEvent : global::System.EventArgs {
            
            private Марки_автомобилейRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Марки_автомобилейRowChangeEvent(Марки_автомобилейRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Марки_автомобилейRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class РейсыRowChangeEvent : global::System.EventArgs {
            
            private РейсыRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public РейсыRowChangeEvent(РейсыRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public РейсыRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class СотрудникиRowChangeEvent : global::System.EventArgs {
            
            private СотрудникиRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СотрудникиRowChangeEvent(СотрудникиRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public СотрудникиRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class АвтопаркRowChangeEvent : global::System.EventArgs {
            
            private АвтопаркRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public АвтопаркRowChangeEvent(АвтопаркRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public АвтопаркRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ЗаказыRowChangeEvent : global::System.EventArgs {
            
            private ЗаказыRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ЗаказыRowChangeEvent(ЗаказыRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ЗаказыRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class Отдел_кадровRowChangeEvent : global::System.EventArgs {
            
            private Отдел_кадровRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Отдел_кадровRowChangeEvent(Отдел_кадровRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Отдел_кадровRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class Перевозимые_грузыRowChangeEvent : global::System.EventArgs {
            
            private Перевозимые_грузыRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Перевозимые_грузыRowChangeEvent(Перевозимые_грузыRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public Перевозимые_грузыRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ТранспортировкаRowChangeEvent : global::System.EventArgs {
            
            private ТранспортировкаRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ТранспортировкаRowChangeEvent(ТранспортировкаRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ТранспортировкаRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Goods2.TransportDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class АвтомобилиTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public АвтомобилиTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Автомобили";
            tableMapping.ColumnMappings.Add("КОД_АВТОМОБИЛЯ", "КОД_АВТОМОБИЛЯ");
            tableMapping.ColumnMappings.Add("КОД_МАРКИ", "КОД_МАРКИ");
            tableMapping.ColumnMappings.Add("КОД_ВИДА_АВТОМОБИЛЯ", "КОД_ВИДА_АВТОМОБИЛЯ");
            tableMapping.ColumnMappings.Add("РЕГИСТРАЦИОННЫЙ_НОМЕР", "РЕГИСТРАЦИОННЫЙ_НОМЕР");
            tableMapping.ColumnMappings.Add("НОМЕР_КУЗОВА", "НОМЕР_КУЗОВА");
            tableMapping.ColumnMappings.Add("НОМЕР_ДВИГАТЕЛЯ", "НОМЕР_ДВИГАТЕЛЯ");
            tableMapping.ColumnMappings.Add("ГОД_ВЫПУСКА", "ГОД_ВЫПУСКА");
            tableMapping.ColumnMappings.Add("КОД_СОТРУДНИКА_ВОДИТЕЛЯ", "КОД_СОТРУДНИКА_ВОДИТЕЛЯ");
            tableMapping.ColumnMappings.Add("ДАТА_ПОСЛЕДНЕГО_ТО", "ДАТА_ПОСЛЕДНЕГО_ТО");
            tableMapping.ColumnMappings.Add("КОД_СОТРУДНИКА_МЕХАНИКА", "КОД_СОТРУДНИКА_МЕХАНИКА");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Автомобили] WHERE (([КОД_АВТОМОБИЛЯ] = @Original_КОД_АВТОМОБИЛЯ) AND ((@IsNull_КОД_МАРКИ = 1 AND [КОД_МАРКИ] IS NULL) OR ([КОД_МАРКИ] = @Original_КОД_МАРКИ)) AND ((@IsNull_КОД_ВИДА_АВТОМОБИЛЯ = 1 AND [КОД_ВИДА_АВТОМОБИЛЯ] IS NULL) OR ([КОД_ВИДА_АВТОМОБИЛЯ] = @Original_КОД_ВИДА_АВТОМОБИЛЯ)) AND ((@IsNull_РЕГИСТРАЦИОННЫЙ_НОМЕР = 1 AND [РЕГИСТРАЦИОННЫЙ_НОМЕР] IS NULL) OR ([РЕГИСТРАЦИОННЫЙ_НОМЕР] = @Original_РЕГИСТРАЦИОННЫЙ_НОМЕР)) AND ((@IsNull_НОМЕР_КУЗОВА = 1 AND [НОМЕР_КУЗОВА] IS NULL) OR ([НОМЕР_КУЗОВА] = @Original_НОМЕР_КУЗОВА)) AND ((@IsNull_НОМЕР_ДВИГАТЕЛЯ = 1 AND [НОМЕР_ДВИГАТЕЛЯ] IS NULL) OR ([НОМЕР_ДВИГАТЕЛЯ] = @Original_НОМЕР_ДВИГАТЕЛЯ)) AND ((@IsNull_ГОД_ВЫПУСКА = 1 AND [ГОД_ВЫПУСКА] IS NULL) OR ([ГОД_ВЫПУСКА] = @Original_ГОД_ВЫПУСКА)) AND ((@IsNull_КОД_СОТРУДНИКА_ВОДИТЕЛЯ = 1 AND [КОД_СОТРУДНИКА_ВОДИТЕЛЯ] IS NULL) OR ([КОД_СОТРУДНИКА_ВОДИТЕЛЯ] = @Original_КОД_СОТРУДНИКА_ВОДИТЕЛЯ)) AND ((@IsNull_ДАТА_ПОСЛЕДНЕГО_ТО = 1 AND [ДАТА_ПОСЛЕДНЕГО_ТО] IS NULL) OR ([ДАТА_ПОСЛЕДНЕГО_ТО] = @Original_ДАТА_ПОСЛЕДНЕГО_ТО)) AND ((@IsNull_КОД_СОТРУДНИКА_МЕХАНИКА = 1 AND [КОД_СОТРУДНИКА_МЕХАНИКА] IS NULL) OR ([КОД_СОТРУДНИКА_МЕХАНИКА] = @Original_КОД_СОТРУДНИКА_МЕХАНИКА)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_АВТОМОБИЛЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_АВТОМОБИЛЯ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_КОД_МАРКИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_МАРКИ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_МАРКИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_МАРКИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_КОД_ВИДА_АВТОМОБИЛЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ВИДА_АВТОМОБИЛЯ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_ВИДА_АВТОМОБИЛЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ВИДА_АВТОМОБИЛЯ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_РЕГИСТРАЦИОННЫЙ_НОМЕР", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "РЕГИСТРАЦИОННЫЙ_НОМЕР", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_РЕГИСТРАЦИОННЫЙ_НОМЕР", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "РЕГИСТРАЦИОННЫЙ_НОМЕР", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_НОМЕР_КУЗОВА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_КУЗОВА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НОМЕР_КУЗОВА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_КУЗОВА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_НОМЕР_ДВИГАТЕЛЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_ДВИГАТЕЛЯ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НОМЕР_ДВИГАТЕЛЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_ДВИГАТЕЛЯ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ГОД_ВЫПУСКА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ГОД_ВЫПУСКА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ГОД_ВЫПУСКА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ГОД_ВЫПУСКА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_КОД_СОТРУДНИКА_ВОДИТЕЛЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_СОТРУДНИКА_ВОДИТЕЛЯ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_СОТРУДНИКА_ВОДИТЕЛЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_СОТРУДНИКА_ВОДИТЕЛЯ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ДАТА_ПОСЛЕДНЕГО_ТО", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ДАТА_ПОСЛЕДНЕГО_ТО", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ДАТА_ПОСЛЕДНЕГО_ТО", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ДАТА_ПОСЛЕДНЕГО_ТО", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_КОД_СОТРУДНИКА_МЕХАНИКА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_СОТРУДНИКА_МЕХАНИКА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_СОТРУДНИКА_МЕХАНИКА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_СОТРУДНИКА_МЕХАНИКА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Автомобили] ([КОД_АВТОМОБИЛЯ], [КОД_МАРКИ], [КОД_ВИДА_АВТОМОБИЛЯ], [РЕГИСТРАЦИОННЫЙ_НОМЕР], [НОМЕР_КУЗОВА], [НОМЕР_ДВИГАТЕЛЯ], [ГОД_ВЫПУСКА], [КОД_СОТРУДНИКА_ВОДИТЕЛЯ], [ДАТА_ПОСЛЕДНЕГО_ТО], [КОД_СОТРУДНИКА_МЕХАНИКА]) VALUES (@КОД_АВТОМОБИЛЯ, @КОД_МАРКИ, @КОД_ВИДА_АВТОМОБИЛЯ, @РЕГИСТРАЦИОННЫЙ_НОМЕР, @НОМЕР_КУЗОВА, @НОМЕР_ДВИГАТЕЛЯ, @ГОД_ВЫПУСКА, @КОД_СОТРУДНИКА_ВОДИТЕЛЯ, @ДАТА_ПОСЛЕДНЕГО_ТО, @КОД_СОТРУДНИКА_МЕХАНИКА);
SELECT КОД_АВТОМОБИЛЯ, КОД_МАРКИ, КОД_ВИДА_АВТОМОБИЛЯ, РЕГИСТРАЦИОННЫЙ_НОМЕР, НОМЕР_КУЗОВА, НОМЕР_ДВИГАТЕЛЯ, ГОД_ВЫПУСКА, КОД_СОТРУДНИКА_ВОДИТЕЛЯ, ДАТА_ПОСЛЕДНЕГО_ТО, КОД_СОТРУДНИКА_МЕХАНИКА FROM Автомобили WHERE (КОД_АВТОМОБИЛЯ = @КОД_АВТОМОБИЛЯ)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_АВТОМОБИЛЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_АВТОМОБИЛЯ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_МАРКИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_МАРКИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_ВИДА_АВТОМОБИЛЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ВИДА_АВТОМОБИЛЯ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@РЕГИСТРАЦИОННЫЙ_НОМЕР", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "РЕГИСТРАЦИОННЫЙ_НОМЕР", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НОМЕР_КУЗОВА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_КУЗОВА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НОМЕР_ДВИГАТЕЛЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_ДВИГАТЕЛЯ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ГОД_ВЫПУСКА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ГОД_ВЫПУСКА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_СОТРУДНИКА_ВОДИТЕЛЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_СОТРУДНИКА_ВОДИТЕЛЯ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ДАТА_ПОСЛЕДНЕГО_ТО", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ДАТА_ПОСЛЕДНЕГО_ТО", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_СОТРУДНИКА_МЕХАНИКА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_СОТРУДНИКА_МЕХАНИКА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Автомобили] SET [КОД_АВТОМОБИЛЯ] = @КОД_АВТОМОБИЛЯ, [КОД_МАРКИ] = @" +
                "КОД_МАРКИ, [КОД_ВИДА_АВТОМОБИЛЯ] = @КОД_ВИДА_АВТОМОБИЛЯ, [РЕГИСТРАЦИОННЫЙ_НОМЕР]" +
                " = @РЕГИСТРАЦИОННЫЙ_НОМЕР, [НОМЕР_КУЗОВА] = @НОМЕР_КУЗОВА, [НОМЕР_ДВИГАТЕЛЯ] = @" +
                "НОМЕР_ДВИГАТЕЛЯ, [ГОД_ВЫПУСКА] = @ГОД_ВЫПУСКА, [КОД_СОТРУДНИКА_ВОДИТЕЛЯ] = @КОД_" +
                "СОТРУДНИКА_ВОДИТЕЛЯ, [ДАТА_ПОСЛЕДНЕГО_ТО] = @ДАТА_ПОСЛЕДНЕГО_ТО, [КОД_СОТРУДНИКА" +
                "_МЕХАНИКА] = @КОД_СОТРУДНИКА_МЕХАНИКА WHERE (([КОД_АВТОМОБИЛЯ] = @Original_КОД_А" +
                "ВТОМОБИЛЯ) AND ((@IsNull_КОД_МАРКИ = 1 AND [КОД_МАРКИ] IS NULL) OR ([КОД_МАРКИ] " +
                "= @Original_КОД_МАРКИ)) AND ((@IsNull_КОД_ВИДА_АВТОМОБИЛЯ = 1 AND [КОД_ВИДА_АВТО" +
                "МОБИЛЯ] IS NULL) OR ([КОД_ВИДА_АВТОМОБИЛЯ] = @Original_КОД_ВИДА_АВТОМОБИЛЯ)) AND" +
                " ((@IsNull_РЕГИСТРАЦИОННЫЙ_НОМЕР = 1 AND [РЕГИСТРАЦИОННЫЙ_НОМЕР] IS NULL) OR ([Р" +
                "ЕГИСТРАЦИОННЫЙ_НОМЕР] = @Original_РЕГИСТРАЦИОННЫЙ_НОМЕР)) AND ((@IsNull_НОМЕР_КУ" +
                "ЗОВА = 1 AND [НОМЕР_КУЗОВА] IS NULL) OR ([НОМЕР_КУЗОВА] = @Original_НОМЕР_КУЗОВА" +
                ")) AND ((@IsNull_НОМЕР_ДВИГАТЕЛЯ = 1 AND [НОМЕР_ДВИГАТЕЛЯ] IS NULL) OR ([НОМЕР_Д" +
                "ВИГАТЕЛЯ] = @Original_НОМЕР_ДВИГАТЕЛЯ)) AND ((@IsNull_ГОД_ВЫПУСКА = 1 AND [ГОД_В" +
                "ЫПУСКА] IS NULL) OR ([ГОД_ВЫПУСКА] = @Original_ГОД_ВЫПУСКА)) AND ((@IsNull_КОД_С" +
                "ОТРУДНИКА_ВОДИТЕЛЯ = 1 AND [КОД_СОТРУДНИКА_ВОДИТЕЛЯ] IS NULL) OR ([КОД_СОТРУДНИК" +
                "А_ВОДИТЕЛЯ] = @Original_КОД_СОТРУДНИКА_ВОДИТЕЛЯ)) AND ((@IsNull_ДАТА_ПОСЛЕДНЕГО_" +
                "ТО = 1 AND [ДАТА_ПОСЛЕДНЕГО_ТО] IS NULL) OR ([ДАТА_ПОСЛЕДНЕГО_ТО] = @Original_ДА" +
                "ТА_ПОСЛЕДНЕГО_ТО)) AND ((@IsNull_КОД_СОТРУДНИКА_МЕХАНИКА = 1 AND [КОД_СОТРУДНИКА" +
                "_МЕХАНИКА] IS NULL) OR ([КОД_СОТРУДНИКА_МЕХАНИКА] = @Original_КОД_СОТРУДНИКА_МЕХ" +
                "АНИКА)));\r\nSELECT КОД_АВТОМОБИЛЯ, КОД_МАРКИ, КОД_ВИДА_АВТОМОБИЛЯ, РЕГИСТРАЦИОННЫ" +
                "Й_НОМЕР, НОМЕР_КУЗОВА, НОМЕР_ДВИГАТЕЛЯ, ГОД_ВЫПУСКА, КОД_СОТРУДНИКА_ВОДИТЕЛЯ, ДА" +
                "ТА_ПОСЛЕДНЕГО_ТО, КОД_СОТРУДНИКА_МЕХАНИКА FROM Автомобили WHERE (КОД_АВТОМОБИЛЯ " +
                "= @КОД_АВТОМОБИЛЯ)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_АВТОМОБИЛЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_АВТОМОБИЛЯ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_МАРКИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_МАРКИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_ВИДА_АВТОМОБИЛЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ВИДА_АВТОМОБИЛЯ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@РЕГИСТРАЦИОННЫЙ_НОМЕР", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "РЕГИСТРАЦИОННЫЙ_НОМЕР", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НОМЕР_КУЗОВА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_КУЗОВА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НОМЕР_ДВИГАТЕЛЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_ДВИГАТЕЛЯ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ГОД_ВЫПУСКА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ГОД_ВЫПУСКА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_СОТРУДНИКА_ВОДИТЕЛЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_СОТРУДНИКА_ВОДИТЕЛЯ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ДАТА_ПОСЛЕДНЕГО_ТО", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ДАТА_ПОСЛЕДНЕГО_ТО", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_СОТРУДНИКА_МЕХАНИКА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_СОТРУДНИКА_МЕХАНИКА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_АВТОМОБИЛЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_АВТОМОБИЛЯ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_КОД_МАРКИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_МАРКИ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_МАРКИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_МАРКИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_КОД_ВИДА_АВТОМОБИЛЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ВИДА_АВТОМОБИЛЯ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_ВИДА_АВТОМОБИЛЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ВИДА_АВТОМОБИЛЯ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_РЕГИСТРАЦИОННЫЙ_НОМЕР", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "РЕГИСТРАЦИОННЫЙ_НОМЕР", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_РЕГИСТРАЦИОННЫЙ_НОМЕР", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "РЕГИСТРАЦИОННЫЙ_НОМЕР", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_НОМЕР_КУЗОВА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_КУЗОВА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НОМЕР_КУЗОВА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_КУЗОВА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_НОМЕР_ДВИГАТЕЛЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_ДВИГАТЕЛЯ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НОМЕР_ДВИГАТЕЛЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НОМЕР_ДВИГАТЕЛЯ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ГОД_ВЫПУСКА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ГОД_ВЫПУСКА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ГОД_ВЫПУСКА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ГОД_ВЫПУСКА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_КОД_СОТРУДНИКА_ВОДИТЕЛЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_СОТРУДНИКА_ВОДИТЕЛЯ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_СОТРУДНИКА_ВОДИТЕЛЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_СОТРУДНИКА_ВОДИТЕЛЯ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ДАТА_ПОСЛЕДНЕГО_ТО", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ДАТА_ПОСЛЕДНЕГО_ТО", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ДАТА_ПОСЛЕДНЕГО_ТО", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ДАТА_ПОСЛЕДНЕГО_ТО", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_КОД_СОТРУДНИКА_МЕХАНИКА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_СОТРУДНИКА_МЕХАНИКА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_СОТРУДНИКА_МЕХАНИКА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_СОТРУДНИКА_МЕХАНИКА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Goods2.Properties.Settings.Default.TransportConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT КОД_АВТОМОБИЛЯ, КОД_МАРКИ, КОД_ВИДА_АВТОМОБИЛЯ, РЕГИСТРАЦИОННЫЙ_НОМЕР, НОМ" +
                "ЕР_КУЗОВА, НОМЕР_ДВИГАТЕЛЯ, ГОД_ВЫПУСКА, КОД_СОТРУДНИКА_ВОДИТЕЛЯ, ДАТА_ПОСЛЕДНЕГ" +
                "О_ТО, КОД_СОТРУДНИКА_МЕХАНИКА FROM dbo.Автомобили";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(TransportDataSet.АвтомобилиDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual TransportDataSet.АвтомобилиDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            TransportDataSet.АвтомобилиDataTable dataTable = new TransportDataSet.АвтомобилиDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(TransportDataSet.АвтомобилиDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(TransportDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Автомобили");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_КОД_АВТОМОБИЛЯ, global::System.Nullable<int> Original_КОД_МАРКИ, global::System.Nullable<int> Original_КОД_ВИДА_АВТОМОБИЛЯ, string Original_РЕГИСТРАЦИОННЫЙ_НОМЕР, global::System.Nullable<int> Original_НОМЕР_КУЗОВА, global::System.Nullable<int> Original_НОМЕР_ДВИГАТЕЛЯ, global::System.Nullable<int> Original_ГОД_ВЫПУСКА, global::System.Nullable<int> Original_КОД_СОТРУДНИКА_ВОДИТЕЛЯ, global::System.Nullable<global::System.DateTime> Original_ДАТА_ПОСЛЕДНЕГО_ТО, global::System.Nullable<int> Original_КОД_СОТРУДНИКА_МЕХАНИКА) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_КОД_АВТОМОБИЛЯ));
            if ((Original_КОД_МАРКИ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_КОД_МАРКИ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_КОД_ВИДА_АВТОМОБИЛЯ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_КОД_ВИДА_АВТОМОБИЛЯ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_РЕГИСТРАЦИОННЫЙ_НОМЕР == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_РЕГИСТРАЦИОННЫЙ_НОМЕР));
            }
            if ((Original_НОМЕР_КУЗОВА.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_НОМЕР_КУЗОВА.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_НОМЕР_ДВИГАТЕЛЯ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_НОМЕР_ДВИГАТЕЛЯ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_ГОД_ВЫПУСКА.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_ГОД_ВЫПУСКА.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_КОД_СОТРУДНИКА_ВОДИТЕЛЯ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_КОД_СОТРУДНИКА_ВОДИТЕЛЯ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_ДАТА_ПОСЛЕДНЕГО_ТО.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((System.DateTime)(Original_ДАТА_ПОСЛЕДНЕГО_ТО.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_КОД_СОТРУДНИКА_МЕХАНИКА.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((int)(Original_КОД_СОТРУДНИКА_МЕХАНИКА.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int КОД_АВТОМОБИЛЯ, global::System.Nullable<int> КОД_МАРКИ, global::System.Nullable<int> КОД_ВИДА_АВТОМОБИЛЯ, string РЕГИСТРАЦИОННЫЙ_НОМЕР, global::System.Nullable<int> НОМЕР_КУЗОВА, global::System.Nullable<int> НОМЕР_ДВИГАТЕЛЯ, global::System.Nullable<int> ГОД_ВЫПУСКА, global::System.Nullable<int> КОД_СОТРУДНИКА_ВОДИТЕЛЯ, global::System.Nullable<global::System.DateTime> ДАТА_ПОСЛЕДНЕГО_ТО, global::System.Nullable<int> КОД_СОТРУДНИКА_МЕХАНИКА) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(КОД_АВТОМОБИЛЯ));
            if ((КОД_МАРКИ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(КОД_МАРКИ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((КОД_ВИДА_АВТОМОБИЛЯ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(КОД_ВИДА_АВТОМОБИЛЯ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((РЕГИСТРАЦИОННЫЙ_НОМЕР == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(РЕГИСТРАЦИОННЫЙ_НОМЕР));
            }
            if ((НОМЕР_КУЗОВА.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(НОМЕР_КУЗОВА.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((НОМЕР_ДВИГАТЕЛЯ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(НОМЕР_ДВИГАТЕЛЯ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ГОД_ВЫПУСКА.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(ГОД_ВЫПУСКА.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((КОД_СОТРУДНИКА_ВОДИТЕЛЯ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(КОД_СОТРУДНИКА_ВОДИТЕЛЯ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((ДАТА_ПОСЛЕДНЕГО_ТО.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(ДАТА_ПОСЛЕДНЕГО_ТО.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((КОД_СОТРУДНИКА_МЕХАНИКА.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(КОД_СОТРУДНИКА_МЕХАНИКА.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int КОД_АВТОМОБИЛЯ, 
                    global::System.Nullable<int> КОД_МАРКИ, 
                    global::System.Nullable<int> КОД_ВИДА_АВТОМОБИЛЯ, 
                    string РЕГИСТРАЦИОННЫЙ_НОМЕР, 
                    global::System.Nullable<int> НОМЕР_КУЗОВА, 
                    global::System.Nullable<int> НОМЕР_ДВИГАТЕЛЯ, 
                    global::System.Nullable<int> ГОД_ВЫПУСКА, 
                    global::System.Nullable<int> КОД_СОТРУДНИКА_ВОДИТЕЛЯ, 
                    global::System.Nullable<global::System.DateTime> ДАТА_ПОСЛЕДНЕГО_ТО, 
                    global::System.Nullable<int> КОД_СОТРУДНИКА_МЕХАНИКА, 
                    int Original_КОД_АВТОМОБИЛЯ, 
                    global::System.Nullable<int> Original_КОД_МАРКИ, 
                    global::System.Nullable<int> Original_КОД_ВИДА_АВТОМОБИЛЯ, 
                    string Original_РЕГИСТРАЦИОННЫЙ_НОМЕР, 
                    global::System.Nullable<int> Original_НОМЕР_КУЗОВА, 
                    global::System.Nullable<int> Original_НОМЕР_ДВИГАТЕЛЯ, 
                    global::System.Nullable<int> Original_ГОД_ВЫПУСКА, 
                    global::System.Nullable<int> Original_КОД_СОТРУДНИКА_ВОДИТЕЛЯ, 
                    global::System.Nullable<global::System.DateTime> Original_ДАТА_ПОСЛЕДНЕГО_ТО, 
                    global::System.Nullable<int> Original_КОД_СОТРУДНИКА_МЕХАНИКА) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(КОД_АВТОМОБИЛЯ));
            if ((КОД_МАРКИ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(КОД_МАРКИ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((КОД_ВИДА_АВТОМОБИЛЯ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(КОД_ВИДА_АВТОМОБИЛЯ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((РЕГИСТРАЦИОННЫЙ_НОМЕР == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(РЕГИСТРАЦИОННЫЙ_НОМЕР));
            }
            if ((НОМЕР_КУЗОВА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(НОМЕР_КУЗОВА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((НОМЕР_ДВИГАТЕЛЯ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(НОМЕР_ДВИГАТЕЛЯ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ГОД_ВЫПУСКА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(ГОД_ВЫПУСКА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((КОД_СОТРУДНИКА_ВОДИТЕЛЯ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(КОД_СОТРУДНИКА_ВОДИТЕЛЯ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((ДАТА_ПОСЛЕДНЕГО_ТО.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(ДАТА_ПОСЛЕДНЕГО_ТО.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((КОД_СОТРУДНИКА_МЕХАНИКА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(КОД_СОТРУДНИКА_МЕХАНИКА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_КОД_АВТОМОБИЛЯ));
            if ((Original_КОД_МАРКИ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_КОД_МАРКИ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_КОД_ВИДА_АВТОМОБИЛЯ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_КОД_ВИДА_АВТОМОБИЛЯ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_РЕГИСТРАЦИОННЫЙ_НОМЕР == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_РЕГИСТРАЦИОННЫЙ_НОМЕР));
            }
            if ((Original_НОМЕР_КУЗОВА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_НОМЕР_КУЗОВА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_НОМЕР_ДВИГАТЕЛЯ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Original_НОМЕР_ДВИГАТЕЛЯ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_ГОД_ВЫПУСКА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Original_ГОД_ВЫПУСКА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_КОД_СОТРУДНИКА_ВОДИТЕЛЯ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(Original_КОД_СОТРУДНИКА_ВОДИТЕЛЯ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_ДАТА_ПОСЛЕДНЕГО_ТО.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((System.DateTime)(Original_ДАТА_ПОСЛЕДНЕГО_ТО.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_КОД_СОТРУДНИКА_МЕХАНИКА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(Original_КОД_СОТРУДНИКА_МЕХАНИКА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> КОД_МАРКИ, 
                    global::System.Nullable<int> КОД_ВИДА_АВТОМОБИЛЯ, 
                    string РЕГИСТРАЦИОННЫЙ_НОМЕР, 
                    global::System.Nullable<int> НОМЕР_КУЗОВА, 
                    global::System.Nullable<int> НОМЕР_ДВИГАТЕЛЯ, 
                    global::System.Nullable<int> ГОД_ВЫПУСКА, 
                    global::System.Nullable<int> КОД_СОТРУДНИКА_ВОДИТЕЛЯ, 
                    global::System.Nullable<global::System.DateTime> ДАТА_ПОСЛЕДНЕГО_ТО, 
                    global::System.Nullable<int> КОД_СОТРУДНИКА_МЕХАНИКА, 
                    int Original_КОД_АВТОМОБИЛЯ, 
                    global::System.Nullable<int> Original_КОД_МАРКИ, 
                    global::System.Nullable<int> Original_КОД_ВИДА_АВТОМОБИЛЯ, 
                    string Original_РЕГИСТРАЦИОННЫЙ_НОМЕР, 
                    global::System.Nullable<int> Original_НОМЕР_КУЗОВА, 
                    global::System.Nullable<int> Original_НОМЕР_ДВИГАТЕЛЯ, 
                    global::System.Nullable<int> Original_ГОД_ВЫПУСКА, 
                    global::System.Nullable<int> Original_КОД_СОТРУДНИКА_ВОДИТЕЛЯ, 
                    global::System.Nullable<global::System.DateTime> Original_ДАТА_ПОСЛЕДНЕГО_ТО, 
                    global::System.Nullable<int> Original_КОД_СОТРУДНИКА_МЕХАНИКА) {
            return this.Update(Original_КОД_АВТОМОБИЛЯ, КОД_МАРКИ, КОД_ВИДА_АВТОМОБИЛЯ, РЕГИСТРАЦИОННЫЙ_НОМЕР, НОМЕР_КУЗОВА, НОМЕР_ДВИГАТЕЛЯ, ГОД_ВЫПУСКА, КОД_СОТРУДНИКА_ВОДИТЕЛЯ, ДАТА_ПОСЛЕДНЕГО_ТО, КОД_СОТРУДНИКА_МЕХАНИКА, Original_КОД_АВТОМОБИЛЯ, Original_КОД_МАРКИ, Original_КОД_ВИДА_АВТОМОБИЛЯ, Original_РЕГИСТРАЦИОННЫЙ_НОМЕР, Original_НОМЕР_КУЗОВА, Original_НОМЕР_ДВИГАТЕЛЯ, Original_ГОД_ВЫПУСКА, Original_КОД_СОТРУДНИКА_ВОДИТЕЛЯ, Original_ДАТА_ПОСЛЕДНЕГО_ТО, Original_КОД_СОТРУДНИКА_МЕХАНИКА);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Виды_автомобилейTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public Виды_автомобилейTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Виды_автомобилей";
            tableMapping.ColumnMappings.Add("КОД_ВИДА_АВТОМОБИЛЯ", "КОД_ВИДА_АВТОМОБИЛЯ");
            tableMapping.ColumnMappings.Add("НАИМЕНОВАНИЕ", "НАИМЕНОВАНИЕ");
            tableMapping.ColumnMappings.Add("ОПИСАНИЕ", "ОПИСАНИЕ");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Виды_автомобилей] WHERE (([КОД_ВИДА_АВТОМОБИЛЯ] = @Original_КОД_ВИДА_АВТОМОБИЛЯ) AND ((@IsNull_НАИМЕНОВАНИЕ = 1 AND [НАИМЕНОВАНИЕ] IS NULL) OR ([НАИМЕНОВАНИЕ] = @Original_НАИМЕНОВАНИЕ)) AND ((@IsNull_ОПИСАНИЕ = 1 AND [ОПИСАНИЕ] IS NULL) OR ([ОПИСАНИЕ] = @Original_ОПИСАНИЕ)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_ВИДА_АВТОМОБИЛЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ВИДА_АВТОМОБИЛЯ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_НАИМЕНОВАНИЕ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НАИМЕНОВАНИЕ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НАИМЕНОВАНИЕ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НАИМЕНОВАНИЕ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ОПИСАНИЕ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОПИСАНИЕ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ОПИСАНИЕ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОПИСАНИЕ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Виды_автомобилей] ([КОД_ВИДА_АВТОМОБИЛЯ], [НАИМЕНОВАНИЕ], [ОПИСАНИЕ]) VALUES (@КОД_ВИДА_АВТОМОБИЛЯ, @НАИМЕНОВАНИЕ, @ОПИСАНИЕ);
SELECT КОД_ВИДА_АВТОМОБИЛЯ, НАИМЕНОВАНИЕ, ОПИСАНИЕ FROM Виды_автомобилей WHERE (КОД_ВИДА_АВТОМОБИЛЯ = @КОД_ВИДА_АВТОМОБИЛЯ)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_ВИДА_АВТОМОБИЛЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ВИДА_АВТОМОБИЛЯ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НАИМЕНОВАНИЕ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НАИМЕНОВАНИЕ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ОПИСАНИЕ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОПИСАНИЕ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Виды_автомобилей] SET [КОД_ВИДА_АВТОМОБИЛЯ] = @КОД_ВИДА_АВТОМОБИЛЯ, [НАИМЕНОВАНИЕ] = @НАИМЕНОВАНИЕ, [ОПИСАНИЕ] = @ОПИСАНИЕ WHERE (([КОД_ВИДА_АВТОМОБИЛЯ] = @Original_КОД_ВИДА_АВТОМОБИЛЯ) AND ((@IsNull_НАИМЕНОВАНИЕ = 1 AND [НАИМЕНОВАНИЕ] IS NULL) OR ([НАИМЕНОВАНИЕ] = @Original_НАИМЕНОВАНИЕ)) AND ((@IsNull_ОПИСАНИЕ = 1 AND [ОПИСАНИЕ] IS NULL) OR ([ОПИСАНИЕ] = @Original_ОПИСАНИЕ)));
SELECT КОД_ВИДА_АВТОМОБИЛЯ, НАИМЕНОВАНИЕ, ОПИСАНИЕ FROM Виды_автомобилей WHERE (КОД_ВИДА_АВТОМОБИЛЯ = @КОД_ВИДА_АВТОМОБИЛЯ)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_ВИДА_АВТОМОБИЛЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ВИДА_АВТОМОБИЛЯ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НАИМЕНОВАНИЕ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НАИМЕНОВАНИЕ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ОПИСАНИЕ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОПИСАНИЕ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_ВИДА_АВТОМОБИЛЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ВИДА_АВТОМОБИЛЯ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_НАИМЕНОВАНИЕ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НАИМЕНОВАНИЕ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НАИМЕНОВАНИЕ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НАИМЕНОВАНИЕ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ОПИСАНИЕ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОПИСАНИЕ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ОПИСАНИЕ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОПИСАНИЕ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Goods2.Properties.Settings.Default.TransportConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT КОД_ВИДА_АВТОМОБИЛЯ, НАИМЕНОВАНИЕ, ОПИСАНИЕ FROM dbo.Виды_автомобилей";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(TransportDataSet.Виды_автомобилейDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual TransportDataSet.Виды_автомобилейDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            TransportDataSet.Виды_автомобилейDataTable dataTable = new TransportDataSet.Виды_автомобилейDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(TransportDataSet.Виды_автомобилейDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(TransportDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Виды_автомобилей");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_КОД_ВИДА_АВТОМОБИЛЯ, string Original_НАИМЕНОВАНИЕ, string Original_ОПИСАНИЕ) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_КОД_ВИДА_АВТОМОБИЛЯ));
            if ((Original_НАИМЕНОВАНИЕ == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_НАИМЕНОВАНИЕ));
            }
            if ((Original_ОПИСАНИЕ == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_ОПИСАНИЕ));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int КОД_ВИДА_АВТОМОБИЛЯ, string НАИМЕНОВАНИЕ, string ОПИСАНИЕ) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(КОД_ВИДА_АВТОМОБИЛЯ));
            if ((НАИМЕНОВАНИЕ == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(НАИМЕНОВАНИЕ));
            }
            if ((ОПИСАНИЕ == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ОПИСАНИЕ));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int КОД_ВИДА_АВТОМОБИЛЯ, string НАИМЕНОВАНИЕ, string ОПИСАНИЕ, int Original_КОД_ВИДА_АВТОМОБИЛЯ, string Original_НАИМЕНОВАНИЕ, string Original_ОПИСАНИЕ) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(КОД_ВИДА_АВТОМОБИЛЯ));
            if ((НАИМЕНОВАНИЕ == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(НАИМЕНОВАНИЕ));
            }
            if ((ОПИСАНИЕ == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ОПИСАНИЕ));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_КОД_ВИДА_АВТОМОБИЛЯ));
            if ((Original_НАИМЕНОВАНИЕ == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_НАИМЕНОВАНИЕ));
            }
            if ((Original_ОПИСАНИЕ == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_ОПИСАНИЕ));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string НАИМЕНОВАНИЕ, string ОПИСАНИЕ, int Original_КОД_ВИДА_АВТОМОБИЛЯ, string Original_НАИМЕНОВАНИЕ, string Original_ОПИСАНИЕ) {
            return this.Update(Original_КОД_ВИДА_АВТОМОБИЛЯ, НАИМЕНОВАНИЕ, ОПИСАНИЕ, Original_КОД_ВИДА_АВТОМОБИЛЯ, Original_НАИМЕНОВАНИЕ, Original_ОПИСАНИЕ);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Виды_грузовTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public Виды_грузовTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Виды_грузов";
            tableMapping.ColumnMappings.Add("КОД_ВИДА_ГРУЗА", "КОД_ВИДА_ГРУЗА");
            tableMapping.ColumnMappings.Add("НАИМЕНОВАНИЕ", "НАИМЕНОВАНИЕ");
            tableMapping.ColumnMappings.Add("КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ", "КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ");
            tableMapping.ColumnMappings.Add("ОПИСАНИЕ", "ОПИСАНИЕ");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Виды_грузов] WHERE (([КОД_ВИДА_ГРУЗА] = @Original_КОД_ВИДА_ГРУЗА) AND ((@IsNull_НАИМЕНОВАНИЕ = 1 AND [НАИМЕНОВАНИЕ] IS NULL) OR ([НАИМЕНОВАНИЕ] = @Original_НАИМЕНОВАНИЕ)) AND ((@IsNull_КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ = 1 AND [КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ] IS NULL) OR ([КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ] = @Original_КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ)) AND ((@IsNull_ОПИСАНИЕ = 1 AND [ОПИСАНИЕ] IS NULL) OR ([ОПИСАНИЕ] = @Original_ОПИСАНИЕ)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_ВИДА_ГРУЗА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ВИДА_ГРУЗА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_НАИМЕНОВАНИЕ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НАИМЕНОВАНИЕ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НАИМЕНОВАНИЕ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НАИМЕНОВАНИЕ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ОПИСАНИЕ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОПИСАНИЕ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ОПИСАНИЕ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОПИСАНИЕ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Виды_грузов] ([КОД_ВИДА_ГРУЗА], [НАИМЕНОВАНИЕ], [КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ], [ОПИСАНИЕ]) VALUES (@КОД_ВИДА_ГРУЗА, @НАИМЕНОВАНИЕ, @КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ, @ОПИСАНИЕ);
SELECT КОД_ВИДА_ГРУЗА, НАИМЕНОВАНИЕ, КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ, ОПИСАНИЕ FROM Виды_грузов WHERE (КОД_ВИДА_ГРУЗА = @КОД_ВИДА_ГРУЗА)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_ВИДА_ГРУЗА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ВИДА_ГРУЗА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НАИМЕНОВАНИЕ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НАИМЕНОВАНИЕ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ОПИСАНИЕ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОПИСАНИЕ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Виды_грузов] SET [КОД_ВИДА_ГРУЗА] = @КОД_ВИДА_ГРУЗА, [НАИМЕНОВАНИЕ] = @НАИМЕНОВАНИЕ, [КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ] = @КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ, [ОПИСАНИЕ] = @ОПИСАНИЕ WHERE (([КОД_ВИДА_ГРУЗА] = @Original_КОД_ВИДА_ГРУЗА) AND ((@IsNull_НАИМЕНОВАНИЕ = 1 AND [НАИМЕНОВАНИЕ] IS NULL) OR ([НАИМЕНОВАНИЕ] = @Original_НАИМЕНОВАНИЕ)) AND ((@IsNull_КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ = 1 AND [КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ] IS NULL) OR ([КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ] = @Original_КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ)) AND ((@IsNull_ОПИСАНИЕ = 1 AND [ОПИСАНИЕ] IS NULL) OR ([ОПИСАНИЕ] = @Original_ОПИСАНИЕ)));
SELECT КОД_ВИДА_ГРУЗА, НАИМЕНОВАНИЕ, КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ, ОПИСАНИЕ FROM Виды_грузов WHERE (КОД_ВИДА_ГРУЗА = @КОД_ВИДА_ГРУЗА)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_ВИДА_ГРУЗА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ВИДА_ГРУЗА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НАИМЕНОВАНИЕ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НАИМЕНОВАНИЕ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ОПИСАНИЕ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОПИСАНИЕ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_ВИДА_ГРУЗА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ВИДА_ГРУЗА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_НАИМЕНОВАНИЕ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НАИМЕНОВАНИЕ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НАИМЕНОВАНИЕ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НАИМЕНОВАНИЕ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ОПИСАНИЕ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОПИСАНИЕ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ОПИСАНИЕ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОПИСАНИЕ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Goods2.Properties.Settings.Default.TransportConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT КОД_ВИДА_ГРУЗА, НАИМЕНОВАНИЕ, КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ, ОПИ" +
                "САНИЕ FROM dbo.Виды_грузов";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(TransportDataSet.Виды_грузовDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual TransportDataSet.Виды_грузовDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            TransportDataSet.Виды_грузовDataTable dataTable = new TransportDataSet.Виды_грузовDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(TransportDataSet.Виды_грузовDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(TransportDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Виды_грузов");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_КОД_ВИДА_ГРУЗА, string Original_НАИМЕНОВАНИЕ, global::System.Nullable<int> Original_КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ, string Original_ОПИСАНИЕ) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_КОД_ВИДА_ГРУЗА));
            if ((Original_НАИМЕНОВАНИЕ == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_НАИМЕНОВАНИЕ));
            }
            if ((Original_КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_ОПИСАНИЕ == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_ОПИСАНИЕ));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int КОД_ВИДА_ГРУЗА, string НАИМЕНОВАНИЕ, global::System.Nullable<int> КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ, string ОПИСАНИЕ) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(КОД_ВИДА_ГРУЗА));
            if ((НАИМЕНОВАНИЕ == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(НАИМЕНОВАНИЕ));
            }
            if ((КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ОПИСАНИЕ == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ОПИСАНИЕ));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int КОД_ВИДА_ГРУЗА, string НАИМЕНОВАНИЕ, global::System.Nullable<int> КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ, string ОПИСАНИЕ, int Original_КОД_ВИДА_ГРУЗА, string Original_НАИМЕНОВАНИЕ, global::System.Nullable<int> Original_КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ, string Original_ОПИСАНИЕ) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(КОД_ВИДА_ГРУЗА));
            if ((НАИМЕНОВАНИЕ == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(НАИМЕНОВАНИЕ));
            }
            if ((КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ОПИСАНИЕ == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ОПИСАНИЕ));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_КОД_ВИДА_ГРУЗА));
            if ((Original_НАИМЕНОВАНИЕ == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_НАИМЕНОВАНИЕ));
            }
            if ((Original_КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_ОПИСАНИЕ == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_ОПИСАНИЕ));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string НАИМЕНОВАНИЕ, global::System.Nullable<int> КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ, string ОПИСАНИЕ, int Original_КОД_ВИДА_ГРУЗА, string Original_НАИМЕНОВАНИЕ, global::System.Nullable<int> Original_КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ, string Original_ОПИСАНИЕ) {
            return this.Update(Original_КОД_ВИДА_ГРУЗА, НАИМЕНОВАНИЕ, КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ, ОПИСАНИЕ, Original_КОД_ВИДА_ГРУЗА, Original_НАИМЕНОВАНИЕ, Original_КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ, Original_ОПИСАНИЕ);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ГрузыTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ГрузыTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Грузы";
            tableMapping.ColumnMappings.Add("КОД_ГРУЗА", "КОД_ГРУЗА");
            tableMapping.ColumnMappings.Add("НАИМЕНОВАНИЕ", "НАИМЕНОВАНИЕ");
            tableMapping.ColumnMappings.Add("КОД_ВИДА_ГРУЗА", "КОД_ВИДА_ГРУЗА");
            tableMapping.ColumnMappings.Add("СРОК_ГОДНОСТИ", "СРОК_ГОДНОСТИ");
            tableMapping.ColumnMappings.Add("ОСОБЕННОСТИ", "ОСОБЕННОСТИ");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Грузы] WHERE (([КОД_ГРУЗА] = @Original_КОД_ГРУЗА) AND ((@IsNull_НАИМЕНОВАНИЕ = 1 AND [НАИМЕНОВАНИЕ] IS NULL) OR ([НАИМЕНОВАНИЕ] = @Original_НАИМЕНОВАНИЕ)) AND ((@IsNull_КОД_ВИДА_ГРУЗА = 1 AND [КОД_ВИДА_ГРУЗА] IS NULL) OR ([КОД_ВИДА_ГРУЗА] = @Original_КОД_ВИДА_ГРУЗА)) AND ((@IsNull_СРОК_ГОДНОСТИ = 1 AND [СРОК_ГОДНОСТИ] IS NULL) OR ([СРОК_ГОДНОСТИ] = @Original_СРОК_ГОДНОСТИ)) AND ((@IsNull_ОСОБЕННОСТИ = 1 AND [ОСОБЕННОСТИ] IS NULL) OR ([ОСОБЕННОСТИ] = @Original_ОСОБЕННОСТИ)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_ГРУЗА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ГРУЗА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_НАИМЕНОВАНИЕ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НАИМЕНОВАНИЕ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НАИМЕНОВАНИЕ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НАИМЕНОВАНИЕ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_КОД_ВИДА_ГРУЗА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ВИДА_ГРУЗА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_ВИДА_ГРУЗА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ВИДА_ГРУЗА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_СРОК_ГОДНОСТИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "СРОК_ГОДНОСТИ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_СРОК_ГОДНОСТИ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "СРОК_ГОДНОСТИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ОСОБЕННОСТИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОСОБЕННОСТИ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ОСОБЕННОСТИ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОСОБЕННОСТИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Грузы] ([КОД_ГРУЗА], [НАИМЕНОВАНИЕ], [КОД_ВИДА_ГРУЗА], [СРОК_ГОДНОСТИ], [ОСОБЕННОСТИ]) VALUES (@КОД_ГРУЗА, @НАИМЕНОВАНИЕ, @КОД_ВИДА_ГРУЗА, @СРОК_ГОДНОСТИ, @ОСОБЕННОСТИ);
SELECT КОД_ГРУЗА, НАИМЕНОВАНИЕ, КОД_ВИДА_ГРУЗА, СРОК_ГОДНОСТИ, ОСОБЕННОСТИ FROM Грузы WHERE (КОД_ГРУЗА = @КОД_ГРУЗА)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_ГРУЗА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ГРУЗА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НАИМЕНОВАНИЕ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НАИМЕНОВАНИЕ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_ВИДА_ГРУЗА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ВИДА_ГРУЗА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@СРОК_ГОДНОСТИ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "СРОК_ГОДНОСТИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ОСОБЕННОСТИ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОСОБЕННОСТИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Грузы] SET [КОД_ГРУЗА] = @КОД_ГРУЗА, [НАИМЕНОВАНИЕ] = @НАИМЕНОВАНИЕ, [КОД_ВИДА_ГРУЗА] = @КОД_ВИДА_ГРУЗА, [СРОК_ГОДНОСТИ] = @СРОК_ГОДНОСТИ, [ОСОБЕННОСТИ] = @ОСОБЕННОСТИ WHERE (([КОД_ГРУЗА] = @Original_КОД_ГРУЗА) AND ((@IsNull_НАИМЕНОВАНИЕ = 1 AND [НАИМЕНОВАНИЕ] IS NULL) OR ([НАИМЕНОВАНИЕ] = @Original_НАИМЕНОВАНИЕ)) AND ((@IsNull_КОД_ВИДА_ГРУЗА = 1 AND [КОД_ВИДА_ГРУЗА] IS NULL) OR ([КОД_ВИДА_ГРУЗА] = @Original_КОД_ВИДА_ГРУЗА)) AND ((@IsNull_СРОК_ГОДНОСТИ = 1 AND [СРОК_ГОДНОСТИ] IS NULL) OR ([СРОК_ГОДНОСТИ] = @Original_СРОК_ГОДНОСТИ)) AND ((@IsNull_ОСОБЕННОСТИ = 1 AND [ОСОБЕННОСТИ] IS NULL) OR ([ОСОБЕННОСТИ] = @Original_ОСОБЕННОСТИ)));
SELECT КОД_ГРУЗА, НАИМЕНОВАНИЕ, КОД_ВИДА_ГРУЗА, СРОК_ГОДНОСТИ, ОСОБЕННОСТИ FROM Грузы WHERE (КОД_ГРУЗА = @КОД_ГРУЗА)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_ГРУЗА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ГРУЗА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НАИМЕНОВАНИЕ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НАИМЕНОВАНИЕ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_ВИДА_ГРУЗА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ВИДА_ГРУЗА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@СРОК_ГОДНОСТИ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "СРОК_ГОДНОСТИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ОСОБЕННОСТИ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОСОБЕННОСТИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_ГРУЗА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ГРУЗА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_НАИМЕНОВАНИЕ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НАИМЕНОВАНИЕ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НАИМЕНОВАНИЕ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НАИМЕНОВАНИЕ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_КОД_ВИДА_ГРУЗА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ВИДА_ГРУЗА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_ВИДА_ГРУЗА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ВИДА_ГРУЗА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_СРОК_ГОДНОСТИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "СРОК_ГОДНОСТИ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_СРОК_ГОДНОСТИ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "СРОК_ГОДНОСТИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ОСОБЕННОСТИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОСОБЕННОСТИ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ОСОБЕННОСТИ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОСОБЕННОСТИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Goods2.Properties.Settings.Default.TransportConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT КОД_ГРУЗА, НАИМЕНОВАНИЕ, КОД_ВИДА_ГРУЗА, СРОК_ГОДНОСТИ, ОСОБЕННОСТИ FROM d" +
                "bo.Грузы";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(TransportDataSet.ГрузыDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual TransportDataSet.ГрузыDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            TransportDataSet.ГрузыDataTable dataTable = new TransportDataSet.ГрузыDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(TransportDataSet.ГрузыDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(TransportDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Грузы");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_КОД_ГРУЗА, string Original_НАИМЕНОВАНИЕ, global::System.Nullable<int> Original_КОД_ВИДА_ГРУЗА, string Original_СРОК_ГОДНОСТИ, string Original_ОСОБЕННОСТИ) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_КОД_ГРУЗА));
            if ((Original_НАИМЕНОВАНИЕ == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_НАИМЕНОВАНИЕ));
            }
            if ((Original_КОД_ВИДА_ГРУЗА.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_КОД_ВИДА_ГРУЗА.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_СРОК_ГОДНОСТИ == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_СРОК_ГОДНОСТИ));
            }
            if ((Original_ОСОБЕННОСТИ == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_ОСОБЕННОСТИ));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int КОД_ГРУЗА, string НАИМЕНОВАНИЕ, global::System.Nullable<int> КОД_ВИДА_ГРУЗА, string СРОК_ГОДНОСТИ, string ОСОБЕННОСТИ) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(КОД_ГРУЗА));
            if ((НАИМЕНОВАНИЕ == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(НАИМЕНОВАНИЕ));
            }
            if ((КОД_ВИДА_ГРУЗА.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(КОД_ВИДА_ГРУЗА.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((СРОК_ГОДНОСТИ == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(СРОК_ГОДНОСТИ));
            }
            if ((ОСОБЕННОСТИ == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ОСОБЕННОСТИ));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int КОД_ГРУЗА, string НАИМЕНОВАНИЕ, global::System.Nullable<int> КОД_ВИДА_ГРУЗА, string СРОК_ГОДНОСТИ, string ОСОБЕННОСТИ, int Original_КОД_ГРУЗА, string Original_НАИМЕНОВАНИЕ, global::System.Nullable<int> Original_КОД_ВИДА_ГРУЗА, string Original_СРОК_ГОДНОСТИ, string Original_ОСОБЕННОСТИ) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(КОД_ГРУЗА));
            if ((НАИМЕНОВАНИЕ == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(НАИМЕНОВАНИЕ));
            }
            if ((КОД_ВИДА_ГРУЗА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(КОД_ВИДА_ГРУЗА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((СРОК_ГОДНОСТИ == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(СРОК_ГОДНОСТИ));
            }
            if ((ОСОБЕННОСТИ == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(ОСОБЕННОСТИ));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_КОД_ГРУЗА));
            if ((Original_НАИМЕНОВАНИЕ == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_НАИМЕНОВАНИЕ));
            }
            if ((Original_КОД_ВИДА_ГРУЗА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_КОД_ВИДА_ГРУЗА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_СРОК_ГОДНОСТИ == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_СРОК_ГОДНОСТИ));
            }
            if ((Original_ОСОБЕННОСТИ == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_ОСОБЕННОСТИ));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string НАИМЕНОВАНИЕ, global::System.Nullable<int> КОД_ВИДА_ГРУЗА, string СРОК_ГОДНОСТИ, string ОСОБЕННОСТИ, int Original_КОД_ГРУЗА, string Original_НАИМЕНОВАНИЕ, global::System.Nullable<int> Original_КОД_ВИДА_ГРУЗА, string Original_СРОК_ГОДНОСТИ, string Original_ОСОБЕННОСТИ) {
            return this.Update(Original_КОД_ГРУЗА, НАИМЕНОВАНИЕ, КОД_ВИДА_ГРУЗА, СРОК_ГОДНОСТИ, ОСОБЕННОСТИ, Original_КОД_ГРУЗА, Original_НАИМЕНОВАНИЕ, Original_КОД_ВИДА_ГРУЗА, Original_СРОК_ГОДНОСТИ, Original_ОСОБЕННОСТИ);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ДолжностиTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ДолжностиTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Должности";
            tableMapping.ColumnMappings.Add("КОД_ДОЛЖНОСТИ", "КОД_ДОЛЖНОСТИ");
            tableMapping.ColumnMappings.Add("НАИМЕНОВАНИЕ_ДОЛЖНОСТИ", "НАИМЕНОВАНИЕ_ДОЛЖНОСТИ");
            tableMapping.ColumnMappings.Add("ОКЛАД", "ОКЛАД");
            tableMapping.ColumnMappings.Add("ОБЯЗАННОСТИ", "ОБЯЗАННОСТИ");
            tableMapping.ColumnMappings.Add("ТРЕБОВАНИЯ", "ТРЕБОВАНИЯ");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Должности] WHERE (([КОД_ДОЛЖНОСТИ] = @Original_КОД_ДОЛЖНОСТИ) AND ((@IsNull_НАИМЕНОВАНИЕ_ДОЛЖНОСТИ = 1 AND [НАИМЕНОВАНИЕ_ДОЛЖНОСТИ] IS NULL) OR ([НАИМЕНОВАНИЕ_ДОЛЖНОСТИ] = @Original_НАИМЕНОВАНИЕ_ДОЛЖНОСТИ)) AND ((@IsNull_ОКЛАД = 1 AND [ОКЛАД] IS NULL) OR ([ОКЛАД] = @Original_ОКЛАД)) AND ((@IsNull_ОБЯЗАННОСТИ = 1 AND [ОБЯЗАННОСТИ] IS NULL) OR ([ОБЯЗАННОСТИ] = @Original_ОБЯЗАННОСТИ)) AND ((@IsNull_ТРЕБОВАНИЯ = 1 AND [ТРЕБОВАНИЯ] IS NULL) OR ([ТРЕБОВАНИЯ] = @Original_ТРЕБОВАНИЯ)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_ДОЛЖНОСТИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ДОЛЖНОСТИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_НАИМЕНОВАНИЕ_ДОЛЖНОСТИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НАИМЕНОВАНИЕ_ДОЛЖНОСТИ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НАИМЕНОВАНИЕ_ДОЛЖНОСТИ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НАИМЕНОВАНИЕ_ДОЛЖНОСТИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ОКЛАД", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОКЛАД", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ОКЛАД", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОКЛАД", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ОБЯЗАННОСТИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОБЯЗАННОСТИ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ОБЯЗАННОСТИ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОБЯЗАННОСТИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ТРЕБОВАНИЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ТРЕБОВАНИЯ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ТРЕБОВАНИЯ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ТРЕБОВАНИЯ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Должности] ([КОД_ДОЛЖНОСТИ], [НАИМЕНОВАНИЕ_ДОЛЖНОСТИ], [ОКЛАД], [ОБЯЗАННОСТИ], [ТРЕБОВАНИЯ]) VALUES (@КОД_ДОЛЖНОСТИ, @НАИМЕНОВАНИЕ_ДОЛЖНОСТИ, @ОКЛАД, @ОБЯЗАННОСТИ, @ТРЕБОВАНИЯ);
SELECT КОД_ДОЛЖНОСТИ, НАИМЕНОВАНИЕ_ДОЛЖНОСТИ, ОКЛАД, ОБЯЗАННОСТИ, ТРЕБОВАНИЯ FROM Должности WHERE (КОД_ДОЛЖНОСТИ = @КОД_ДОЛЖНОСТИ)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_ДОЛЖНОСТИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ДОЛЖНОСТИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НАИМЕНОВАНИЕ_ДОЛЖНОСТИ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НАИМЕНОВАНИЕ_ДОЛЖНОСТИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ОКЛАД", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОКЛАД", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ОБЯЗАННОСТИ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОБЯЗАННОСТИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ТРЕБОВАНИЯ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ТРЕБОВАНИЯ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Должности] SET [КОД_ДОЛЖНОСТИ] = @КОД_ДОЛЖНОСТИ, [НАИМЕНОВАНИЕ_ДОЛЖНОСТИ] = @НАИМЕНОВАНИЕ_ДОЛЖНОСТИ, [ОКЛАД] = @ОКЛАД, [ОБЯЗАННОСТИ] = @ОБЯЗАННОСТИ, [ТРЕБОВАНИЯ] = @ТРЕБОВАНИЯ WHERE (([КОД_ДОЛЖНОСТИ] = @Original_КОД_ДОЛЖНОСТИ) AND ((@IsNull_НАИМЕНОВАНИЕ_ДОЛЖНОСТИ = 1 AND [НАИМЕНОВАНИЕ_ДОЛЖНОСТИ] IS NULL) OR ([НАИМЕНОВАНИЕ_ДОЛЖНОСТИ] = @Original_НАИМЕНОВАНИЕ_ДОЛЖНОСТИ)) AND ((@IsNull_ОКЛАД = 1 AND [ОКЛАД] IS NULL) OR ([ОКЛАД] = @Original_ОКЛАД)) AND ((@IsNull_ОБЯЗАННОСТИ = 1 AND [ОБЯЗАННОСТИ] IS NULL) OR ([ОБЯЗАННОСТИ] = @Original_ОБЯЗАННОСТИ)) AND ((@IsNull_ТРЕБОВАНИЯ = 1 AND [ТРЕБОВАНИЯ] IS NULL) OR ([ТРЕБОВАНИЯ] = @Original_ТРЕБОВАНИЯ)));
SELECT КОД_ДОЛЖНОСТИ, НАИМЕНОВАНИЕ_ДОЛЖНОСТИ, ОКЛАД, ОБЯЗАННОСТИ, ТРЕБОВАНИЯ FROM Должности WHERE (КОД_ДОЛЖНОСТИ = @КОД_ДОЛЖНОСТИ)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_ДОЛЖНОСТИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ДОЛЖНОСТИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НАИМЕНОВАНИЕ_ДОЛЖНОСТИ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НАИМЕНОВАНИЕ_ДОЛЖНОСТИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ОКЛАД", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОКЛАД", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ОБЯЗАННОСТИ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОБЯЗАННОСТИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ТРЕБОВАНИЯ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ТРЕБОВАНИЯ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_ДОЛЖНОСТИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ДОЛЖНОСТИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_НАИМЕНОВАНИЕ_ДОЛЖНОСТИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НАИМЕНОВАНИЕ_ДОЛЖНОСТИ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НАИМЕНОВАНИЕ_ДОЛЖНОСТИ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НАИМЕНОВАНИЕ_ДОЛЖНОСТИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ОКЛАД", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОКЛАД", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ОКЛАД", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОКЛАД", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ОБЯЗАННОСТИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОБЯЗАННОСТИ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ОБЯЗАННОСТИ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОБЯЗАННОСТИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ТРЕБОВАНИЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ТРЕБОВАНИЯ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ТРЕБОВАНИЯ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ТРЕБОВАНИЯ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Goods2.Properties.Settings.Default.TransportConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT КОД_ДОЛЖНОСТИ, НАИМЕНОВАНИЕ_ДОЛЖНОСТИ, ОКЛАД, ОБЯЗАННОСТИ, ТРЕБОВАНИЯ FROM" +
                " dbo.Должности";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(TransportDataSet.ДолжностиDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual TransportDataSet.ДолжностиDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            TransportDataSet.ДолжностиDataTable dataTable = new TransportDataSet.ДолжностиDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(TransportDataSet.ДолжностиDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(TransportDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Должности");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_КОД_ДОЛЖНОСТИ, string Original_НАИМЕНОВАНИЕ_ДОЛЖНОСТИ, global::System.Nullable<int> Original_ОКЛАД, string Original_ОБЯЗАННОСТИ, string Original_ТРЕБОВАНИЯ) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_КОД_ДОЛЖНОСТИ));
            if ((Original_НАИМЕНОВАНИЕ_ДОЛЖНОСТИ == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_НАИМЕНОВАНИЕ_ДОЛЖНОСТИ));
            }
            if ((Original_ОКЛАД.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_ОКЛАД.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_ОБЯЗАННОСТИ == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_ОБЯЗАННОСТИ));
            }
            if ((Original_ТРЕБОВАНИЯ == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_ТРЕБОВАНИЯ));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int КОД_ДОЛЖНОСТИ, string НАИМЕНОВАНИЕ_ДОЛЖНОСТИ, global::System.Nullable<int> ОКЛАД, string ОБЯЗАННОСТИ, string ТРЕБОВАНИЯ) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(КОД_ДОЛЖНОСТИ));
            if ((НАИМЕНОВАНИЕ_ДОЛЖНОСТИ == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(НАИМЕНОВАНИЕ_ДОЛЖНОСТИ));
            }
            if ((ОКЛАД.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(ОКЛАД.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ОБЯЗАННОСТИ == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ОБЯЗАННОСТИ));
            }
            if ((ТРЕБОВАНИЯ == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ТРЕБОВАНИЯ));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int КОД_ДОЛЖНОСТИ, string НАИМЕНОВАНИЕ_ДОЛЖНОСТИ, global::System.Nullable<int> ОКЛАД, string ОБЯЗАННОСТИ, string ТРЕБОВАНИЯ, int Original_КОД_ДОЛЖНОСТИ, string Original_НАИМЕНОВАНИЕ_ДОЛЖНОСТИ, global::System.Nullable<int> Original_ОКЛАД, string Original_ОБЯЗАННОСТИ, string Original_ТРЕБОВАНИЯ) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(КОД_ДОЛЖНОСТИ));
            if ((НАИМЕНОВАНИЕ_ДОЛЖНОСТИ == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(НАИМЕНОВАНИЕ_ДОЛЖНОСТИ));
            }
            if ((ОКЛАД.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(ОКЛАД.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ОБЯЗАННОСТИ == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ОБЯЗАННОСТИ));
            }
            if ((ТРЕБОВАНИЯ == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(ТРЕБОВАНИЯ));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_КОД_ДОЛЖНОСТИ));
            if ((Original_НАИМЕНОВАНИЕ_ДОЛЖНОСТИ == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_НАИМЕНОВАНИЕ_ДОЛЖНОСТИ));
            }
            if ((Original_ОКЛАД.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_ОКЛАД.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_ОБЯЗАННОСТИ == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_ОБЯЗАННОСТИ));
            }
            if ((Original_ТРЕБОВАНИЯ == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_ТРЕБОВАНИЯ));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string НАИМЕНОВАНИЕ_ДОЛЖНОСТИ, global::System.Nullable<int> ОКЛАД, string ОБЯЗАННОСТИ, string ТРЕБОВАНИЯ, int Original_КОД_ДОЛЖНОСТИ, string Original_НАИМЕНОВАНИЕ_ДОЛЖНОСТИ, global::System.Nullable<int> Original_ОКЛАД, string Original_ОБЯЗАННОСТИ, string Original_ТРЕБОВАНИЯ) {
            return this.Update(Original_КОД_ДОЛЖНОСТИ, НАИМЕНОВАНИЕ_ДОЛЖНОСТИ, ОКЛАД, ОБЯЗАННОСТИ, ТРЕБОВАНИЯ, Original_КОД_ДОЛЖНОСТИ, Original_НАИМЕНОВАНИЕ_ДОЛЖНОСТИ, Original_ОКЛАД, Original_ОБЯЗАННОСТИ, Original_ТРЕБОВАНИЯ);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Марки_автомобилейTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public Марки_автомобилейTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Марки_автомобилей";
            tableMapping.ColumnMappings.Add("КОД_МАРКИ", "КОД_МАРКИ");
            tableMapping.ColumnMappings.Add("НАИМЕНОВАНИЕ", "НАИМЕНОВАНИЕ");
            tableMapping.ColumnMappings.Add("ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ", "ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ");
            tableMapping.ColumnMappings.Add("ОПИСАНИЕ", "ОПИСАНИЕ");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Марки_автомобилей] WHERE (([КОД_МАРКИ] = @Original_КОД_МАРКИ) AND ((@IsNull_НАИМЕНОВАНИЕ = 1 AND [НАИМЕНОВАНИЕ] IS NULL) OR ([НАИМЕНОВАНИЕ] = @Original_НАИМЕНОВАНИЕ)) AND ((@IsNull_ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ = 1 AND [ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ] IS NULL) OR ([ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ] = @Original_ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ)) AND ((@IsNull_ОПИСАНИЕ = 1 AND [ОПИСАНИЕ] IS NULL) OR ([ОПИСАНИЕ] = @Original_ОПИСАНИЕ)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_МАРКИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_МАРКИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_НАИМЕНОВАНИЕ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НАИМЕНОВАНИЕ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НАИМЕНОВАНИЕ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НАИМЕНОВАНИЕ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ОПИСАНИЕ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОПИСАНИЕ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ОПИСАНИЕ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОПИСАНИЕ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Марки_автомобилей] ([КОД_МАРКИ], [НАИМЕНОВАНИЕ], [ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ], [ОПИСАНИЕ]) VALUES (@КОД_МАРКИ, @НАИМЕНОВАНИЕ, @ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ, @ОПИСАНИЕ);
SELECT КОД_МАРКИ, НАИМЕНОВАНИЕ, ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ, ОПИСАНИЕ FROM Марки_автомобилей WHERE (КОД_МАРКИ = @КОД_МАРКИ)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_МАРКИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_МАРКИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НАИМЕНОВАНИЕ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НАИМЕНОВАНИЕ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ОПИСАНИЕ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОПИСАНИЕ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Марки_автомобилей] SET [КОД_МАРКИ] = @КОД_МАРКИ, [НАИМЕНОВАНИЕ] = @НАИМЕНОВАНИЕ, [ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ] = @ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ, [ОПИСАНИЕ] = @ОПИСАНИЕ WHERE (([КОД_МАРКИ] = @Original_КОД_МАРКИ) AND ((@IsNull_НАИМЕНОВАНИЕ = 1 AND [НАИМЕНОВАНИЕ] IS NULL) OR ([НАИМЕНОВАНИЕ] = @Original_НАИМЕНОВАНИЕ)) AND ((@IsNull_ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ = 1 AND [ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ] IS NULL) OR ([ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ] = @Original_ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ)) AND ((@IsNull_ОПИСАНИЕ = 1 AND [ОПИСАНИЕ] IS NULL) OR ([ОПИСАНИЕ] = @Original_ОПИСАНИЕ)));
SELECT КОД_МАРКИ, НАИМЕНОВАНИЕ, ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ, ОПИСАНИЕ FROM Марки_автомобилей WHERE (КОД_МАРКИ = @КОД_МАРКИ)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_МАРКИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_МАРКИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@НАИМЕНОВАНИЕ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НАИМЕНОВАНИЕ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ОПИСАНИЕ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОПИСАНИЕ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_МАРКИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_МАРКИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_НАИМЕНОВАНИЕ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НАИМЕНОВАНИЕ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_НАИМЕНОВАНИЕ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "НАИМЕНОВАНИЕ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ОПИСАНИЕ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОПИСАНИЕ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ОПИСАНИЕ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОПИСАНИЕ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Goods2.Properties.Settings.Default.TransportConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT КОД_МАРКИ, НАИМЕНОВАНИЕ, ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ, ОПИСАНИЕ FROM dbo.Мар" +
                "ки_автомобилей";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(TransportDataSet.Марки_автомобилейDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual TransportDataSet.Марки_автомобилейDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            TransportDataSet.Марки_автомобилейDataTable dataTable = new TransportDataSet.Марки_автомобилейDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(TransportDataSet.Марки_автомобилейDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(TransportDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Марки_автомобилей");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_КОД_МАРКИ, string Original_НАИМЕНОВАНИЕ, string Original_ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ, string Original_ОПИСАНИЕ) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_КОД_МАРКИ));
            if ((Original_НАИМЕНОВАНИЕ == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_НАИМЕНОВАНИЕ));
            }
            if ((Original_ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ));
            }
            if ((Original_ОПИСАНИЕ == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_ОПИСАНИЕ));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int КОД_МАРКИ, string НАИМЕНОВАНИЕ, string ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ, string ОПИСАНИЕ) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(КОД_МАРКИ));
            if ((НАИМЕНОВАНИЕ == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(НАИМЕНОВАНИЕ));
            }
            if ((ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ));
            }
            if ((ОПИСАНИЕ == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ОПИСАНИЕ));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int КОД_МАРКИ, string НАИМЕНОВАНИЕ, string ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ, string ОПИСАНИЕ, int Original_КОД_МАРКИ, string Original_НАИМЕНОВАНИЕ, string Original_ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ, string Original_ОПИСАНИЕ) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(КОД_МАРКИ));
            if ((НАИМЕНОВАНИЕ == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(НАИМЕНОВАНИЕ));
            }
            if ((ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ));
            }
            if ((ОПИСАНИЕ == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ОПИСАНИЕ));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_КОД_МАРКИ));
            if ((Original_НАИМЕНОВАНИЕ == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_НАИМЕНОВАНИЕ));
            }
            if ((Original_ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ));
            }
            if ((Original_ОПИСАНИЕ == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_ОПИСАНИЕ));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string НАИМЕНОВАНИЕ, string ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ, string ОПИСАНИЕ, int Original_КОД_МАРКИ, string Original_НАИМЕНОВАНИЕ, string Original_ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ, string Original_ОПИСАНИЕ) {
            return this.Update(Original_КОД_МАРКИ, НАИМЕНОВАНИЕ, ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ, ОПИСАНИЕ, Original_КОД_МАРКИ, Original_НАИМЕНОВАНИЕ, Original_ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ, Original_ОПИСАНИЕ);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class РейсыTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public РейсыTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Рейсы";
            tableMapping.ColumnMappings.Add("КОД_АВТОМОБИЛЯ", "КОД_АВТОМОБИЛЯ");
            tableMapping.ColumnMappings.Add("ЗАКАЗЧИК", "ЗАКАЗЧИК");
            tableMapping.ColumnMappings.Add("ОТКУДА", "ОТКУДА");
            tableMapping.ColumnMappings.Add("КУДА", "КУДА");
            tableMapping.ColumnMappings.Add("ДАТА_ОТПРАВЛЕНИЯ", "ДАТА_ОТПРАВЛЕНИЯ");
            tableMapping.ColumnMappings.Add("ДАТА_ПРИБЫТИЯ", "ДАТА_ПРИБЫТИЯ");
            tableMapping.ColumnMappings.Add("КОД_ГРУЗА", "КОД_ГРУЗА");
            tableMapping.ColumnMappings.Add("ЦЕНА", "ЦЕНА");
            tableMapping.ColumnMappings.Add("ОТМЕТКА_ОБ_ОПЛАТЕ", "ОТМЕТКА_ОБ_ОПЛАТЕ");
            tableMapping.ColumnMappings.Add("ОТМЕТКА_О_ВОЗВРАЩЕНИИ", "ОТМЕТКА_О_ВОЗВРАЩЕНИИ");
            tableMapping.ColumnMappings.Add("КОД_СОТРУДНИКА", "КОД_СОТРУДНИКА");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Рейсы] WHERE (([КОД_АВТОМОБИЛЯ] = @Original_КОД_АВТОМОБИЛЯ) AND ((@IsNull_ЗАКАЗЧИК = 1 AND [ЗАКАЗЧИК] IS NULL) OR ([ЗАКАЗЧИК] = @Original_ЗАКАЗЧИК)) AND ((@IsNull_ОТКУДА = 1 AND [ОТКУДА] IS NULL) OR ([ОТКУДА] = @Original_ОТКУДА)) AND ((@IsNull_КУДА = 1 AND [КУДА] IS NULL) OR ([КУДА] = @Original_КУДА)) AND ((@IsNull_ДАТА_ОТПРАВЛЕНИЯ = 1 AND [ДАТА_ОТПРАВЛЕНИЯ] IS NULL) OR ([ДАТА_ОТПРАВЛЕНИЯ] = @Original_ДАТА_ОТПРАВЛЕНИЯ)) AND ((@IsNull_ДАТА_ПРИБЫТИЯ = 1 AND [ДАТА_ПРИБЫТИЯ] IS NULL) OR ([ДАТА_ПРИБЫТИЯ] = @Original_ДАТА_ПРИБЫТИЯ)) AND ((@IsNull_КОД_ГРУЗА = 1 AND [КОД_ГРУЗА] IS NULL) OR ([КОД_ГРУЗА] = @Original_КОД_ГРУЗА)) AND ((@IsNull_ЦЕНА = 1 AND [ЦЕНА] IS NULL) OR ([ЦЕНА] = @Original_ЦЕНА)) AND ((@IsNull_ОТМЕТКА_ОБ_ОПЛАТЕ = 1 AND [ОТМЕТКА_ОБ_ОПЛАТЕ] IS NULL) OR ([ОТМЕТКА_ОБ_ОПЛАТЕ] = @Original_ОТМЕТКА_ОБ_ОПЛАТЕ)) AND ((@IsNull_ОТМЕТКА_О_ВОЗВРАЩЕНИИ = 1 AND [ОТМЕТКА_О_ВОЗВРАЩЕНИИ] IS NULL) OR ([ОТМЕТКА_О_ВОЗВРАЩЕНИИ] = @Original_ОТМЕТКА_О_ВОЗВРАЩЕНИИ)) AND ((@IsNull_КОД_СОТРУДНИКА = 1 AND [КОД_СОТРУДНИКА] IS NULL) OR ([КОД_СОТРУДНИКА] = @Original_КОД_СОТРУДНИКА)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_АВТОМОБИЛЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_АВТОМОБИЛЯ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ЗАКАЗЧИК", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ЗАКАЗЧИК", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ЗАКАЗЧИК", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ЗАКАЗЧИК", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ОТКУДА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОТКУДА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ОТКУДА", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОТКУДА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_КУДА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КУДА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КУДА", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КУДА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ДАТА_ОТПРАВЛЕНИЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ДАТА_ОТПРАВЛЕНИЯ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ДАТА_ОТПРАВЛЕНИЯ", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ДАТА_ОТПРАВЛЕНИЯ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ДАТА_ПРИБЫТИЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ДАТА_ПРИБЫТИЯ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ДАТА_ПРИБЫТИЯ", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ДАТА_ПРИБЫТИЯ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_КОД_ГРУЗА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ГРУЗА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_ГРУЗА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ГРУЗА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ЦЕНА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ЦЕНА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ЦЕНА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ЦЕНА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ОТМЕТКА_ОБ_ОПЛАТЕ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОТМЕТКА_ОБ_ОПЛАТЕ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ОТМЕТКА_ОБ_ОПЛАТЕ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОТМЕТКА_ОБ_ОПЛАТЕ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ОТМЕТКА_О_ВОЗВРАЩЕНИИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОТМЕТКА_О_ВОЗВРАЩЕНИИ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ОТМЕТКА_О_ВОЗВРАЩЕНИИ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОТМЕТКА_О_ВОЗВРАЩЕНИИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_КОД_СОТРУДНИКА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_СОТРУДНИКА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_СОТРУДНИКА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_СОТРУДНИКА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Рейсы] ([КОД_АВТОМОБИЛЯ], [ЗАКАЗЧИК], [ОТКУДА], [КУДА], [ДАТА_ОТПРАВЛЕНИЯ], [ДАТА_ПРИБЫТИЯ], [КОД_ГРУЗА], [ЦЕНА], [ОТМЕТКА_ОБ_ОПЛАТЕ], [ОТМЕТКА_О_ВОЗВРАЩЕНИИ], [КОД_СОТРУДНИКА]) VALUES (@КОД_АВТОМОБИЛЯ, @ЗАКАЗЧИК, @ОТКУДА, @КУДА, @ДАТА_ОТПРАВЛЕНИЯ, @ДАТА_ПРИБЫТИЯ, @КОД_ГРУЗА, @ЦЕНА, @ОТМЕТКА_ОБ_ОПЛАТЕ, @ОТМЕТКА_О_ВОЗВРАЩЕНИИ, @КОД_СОТРУДНИКА);
SELECT КОД_АВТОМОБИЛЯ, ЗАКАЗЧИК, ОТКУДА, КУДА, ДАТА_ОТПРАВЛЕНИЯ, ДАТА_ПРИБЫТИЯ, КОД_ГРУЗА, ЦЕНА, ОТМЕТКА_ОБ_ОПЛАТЕ, ОТМЕТКА_О_ВОЗВРАЩЕНИИ, КОД_СОТРУДНИКА FROM Рейсы WHERE (КОД_АВТОМОБИЛЯ = @КОД_АВТОМОБИЛЯ)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_АВТОМОБИЛЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_АВТОМОБИЛЯ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ЗАКАЗЧИК", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ЗАКАЗЧИК", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ОТКУДА", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОТКУДА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КУДА", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КУДА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ДАТА_ОТПРАВЛЕНИЯ", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ДАТА_ОТПРАВЛЕНИЯ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ДАТА_ПРИБЫТИЯ", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ДАТА_ПРИБЫТИЯ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_ГРУЗА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ГРУЗА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ЦЕНА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ЦЕНА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ОТМЕТКА_ОБ_ОПЛАТЕ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОТМЕТКА_ОБ_ОПЛАТЕ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ОТМЕТКА_О_ВОЗВРАЩЕНИИ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОТМЕТКА_О_ВОЗВРАЩЕНИИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_СОТРУДНИКА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_СОТРУДНИКА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Рейсы] SET [КОД_АВТОМОБИЛЯ] = @КОД_АВТОМОБИЛЯ, [ЗАКАЗЧИК] = @ЗАКАЗЧ" +
                "ИК, [ОТКУДА] = @ОТКУДА, [КУДА] = @КУДА, [ДАТА_ОТПРАВЛЕНИЯ] = @ДАТА_ОТПРАВЛЕНИЯ, " +
                "[ДАТА_ПРИБЫТИЯ] = @ДАТА_ПРИБЫТИЯ, [КОД_ГРУЗА] = @КОД_ГРУЗА, [ЦЕНА] = @ЦЕНА, [ОТМ" +
                "ЕТКА_ОБ_ОПЛАТЕ] = @ОТМЕТКА_ОБ_ОПЛАТЕ, [ОТМЕТКА_О_ВОЗВРАЩЕНИИ] = @ОТМЕТКА_О_ВОЗВР" +
                "АЩЕНИИ, [КОД_СОТРУДНИКА] = @КОД_СОТРУДНИКА WHERE (([КОД_АВТОМОБИЛЯ] = @Original_" +
                "КОД_АВТОМОБИЛЯ) AND ((@IsNull_ЗАКАЗЧИК = 1 AND [ЗАКАЗЧИК] IS NULL) OR ([ЗАКАЗЧИК" +
                "] = @Original_ЗАКАЗЧИК)) AND ((@IsNull_ОТКУДА = 1 AND [ОТКУДА] IS NULL) OR ([ОТК" +
                "УДА] = @Original_ОТКУДА)) AND ((@IsNull_КУДА = 1 AND [КУДА] IS NULL) OR ([КУДА] " +
                "= @Original_КУДА)) AND ((@IsNull_ДАТА_ОТПРАВЛЕНИЯ = 1 AND [ДАТА_ОТПРАВЛЕНИЯ] IS " +
                "NULL) OR ([ДАТА_ОТПРАВЛЕНИЯ] = @Original_ДАТА_ОТПРАВЛЕНИЯ)) AND ((@IsNull_ДАТА_П" +
                "РИБЫТИЯ = 1 AND [ДАТА_ПРИБЫТИЯ] IS NULL) OR ([ДАТА_ПРИБЫТИЯ] = @Original_ДАТА_ПР" +
                "ИБЫТИЯ)) AND ((@IsNull_КОД_ГРУЗА = 1 AND [КОД_ГРУЗА] IS NULL) OR ([КОД_ГРУЗА] = " +
                "@Original_КОД_ГРУЗА)) AND ((@IsNull_ЦЕНА = 1 AND [ЦЕНА] IS NULL) OR ([ЦЕНА] = @O" +
                "riginal_ЦЕНА)) AND ((@IsNull_ОТМЕТКА_ОБ_ОПЛАТЕ = 1 AND [ОТМЕТКА_ОБ_ОПЛАТЕ] IS NU" +
                "LL) OR ([ОТМЕТКА_ОБ_ОПЛАТЕ] = @Original_ОТМЕТКА_ОБ_ОПЛАТЕ)) AND ((@IsNull_ОТМЕТК" +
                "А_О_ВОЗВРАЩЕНИИ = 1 AND [ОТМЕТКА_О_ВОЗВРАЩЕНИИ] IS NULL) OR ([ОТМЕТКА_О_ВОЗВРАЩЕ" +
                "НИИ] = @Original_ОТМЕТКА_О_ВОЗВРАЩЕНИИ)) AND ((@IsNull_КОД_СОТРУДНИКА = 1 AND [К" +
                "ОД_СОТРУДНИКА] IS NULL) OR ([КОД_СОТРУДНИКА] = @Original_КОД_СОТРУДНИКА)));\r\nSEL" +
                "ECT КОД_АВТОМОБИЛЯ, ЗАКАЗЧИК, ОТКУДА, КУДА, ДАТА_ОТПРАВЛЕНИЯ, ДАТА_ПРИБЫТИЯ, КОД" +
                "_ГРУЗА, ЦЕНА, ОТМЕТКА_ОБ_ОПЛАТЕ, ОТМЕТКА_О_ВОЗВРАЩЕНИИ, КОД_СОТРУДНИКА FROM Рейс" +
                "ы WHERE (КОД_АВТОМОБИЛЯ = @КОД_АВТОМОБИЛЯ)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_АВТОМОБИЛЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_АВТОМОБИЛЯ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ЗАКАЗЧИК", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ЗАКАЗЧИК", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ОТКУДА", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОТКУДА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КУДА", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КУДА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ДАТА_ОТПРАВЛЕНИЯ", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ДАТА_ОТПРАВЛЕНИЯ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ДАТА_ПРИБЫТИЯ", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ДАТА_ПРИБЫТИЯ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_ГРУЗА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ГРУЗА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ЦЕНА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ЦЕНА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ОТМЕТКА_ОБ_ОПЛАТЕ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОТМЕТКА_ОБ_ОПЛАТЕ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ОТМЕТКА_О_ВОЗВРАЩЕНИИ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОТМЕТКА_О_ВОЗВРАЩЕНИИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_СОТРУДНИКА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_СОТРУДНИКА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_АВТОМОБИЛЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_АВТОМОБИЛЯ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ЗАКАЗЧИК", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ЗАКАЗЧИК", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ЗАКАЗЧИК", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ЗАКАЗЧИК", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ОТКУДА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОТКУДА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ОТКУДА", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОТКУДА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_КУДА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КУДА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КУДА", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КУДА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ДАТА_ОТПРАВЛЕНИЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ДАТА_ОТПРАВЛЕНИЯ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ДАТА_ОТПРАВЛЕНИЯ", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ДАТА_ОТПРАВЛЕНИЯ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ДАТА_ПРИБЫТИЯ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ДАТА_ПРИБЫТИЯ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ДАТА_ПРИБЫТИЯ", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ДАТА_ПРИБЫТИЯ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_КОД_ГРУЗА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ГРУЗА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_ГРУЗА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ГРУЗА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ЦЕНА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ЦЕНА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ЦЕНА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ЦЕНА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ОТМЕТКА_ОБ_ОПЛАТЕ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОТМЕТКА_ОБ_ОПЛАТЕ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ОТМЕТКА_ОБ_ОПЛАТЕ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОТМЕТКА_ОБ_ОПЛАТЕ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ОТМЕТКА_О_ВОЗВРАЩЕНИИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОТМЕТКА_О_ВОЗВРАЩЕНИИ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ОТМЕТКА_О_ВОЗВРАЩЕНИИ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ОТМЕТКА_О_ВОЗВРАЩЕНИИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_КОД_СОТРУДНИКА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_СОТРУДНИКА", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_СОТРУДНИКА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_СОТРУДНИКА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Goods2.Properties.Settings.Default.TransportConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT КОД_АВТОМОБИЛЯ, ЗАКАЗЧИК, ОТКУДА, КУДА, ДАТА_ОТПРАВЛЕНИЯ, ДАТА_ПРИБЫТИЯ, К" +
                "ОД_ГРУЗА, ЦЕНА, ОТМЕТКА_ОБ_ОПЛАТЕ, ОТМЕТКА_О_ВОЗВРАЩЕНИИ, КОД_СОТРУДНИКА FROM db" +
                "o.Рейсы";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(TransportDataSet.РейсыDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual TransportDataSet.РейсыDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            TransportDataSet.РейсыDataTable dataTable = new TransportDataSet.РейсыDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(TransportDataSet.РейсыDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(TransportDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Рейсы");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_КОД_АВТОМОБИЛЯ, string Original_ЗАКАЗЧИК, string Original_ОТКУДА, string Original_КУДА, global::System.Nullable<global::System.DateTime> Original_ДАТА_ОТПРАВЛЕНИЯ, global::System.Nullable<global::System.DateTime> Original_ДАТА_ПРИБЫТИЯ, global::System.Nullable<int> Original_КОД_ГРУЗА, global::System.Nullable<int> Original_ЦЕНА, global::System.Nullable<bool> Original_ОТМЕТКА_ОБ_ОПЛАТЕ, global::System.Nullable<bool> Original_ОТМЕТКА_О_ВОЗВРАЩЕНИИ, global::System.Nullable<int> Original_КОД_СОТРУДНИКА) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_КОД_АВТОМОБИЛЯ));
            if ((Original_ЗАКАЗЧИК == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ЗАКАЗЧИК));
            }
            if ((Original_ОТКУДА == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_ОТКУДА));
            }
            if ((Original_КУДА == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_КУДА));
            }
            if ((Original_ДАТА_ОТПРАВЛЕНИЯ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_ДАТА_ОТПРАВЛЕНИЯ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_ДАТА_ПРИБЫТИЯ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_ДАТА_ПРИБЫТИЯ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_КОД_ГРУЗА.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_КОД_ГРУЗА.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_ЦЕНА.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_ЦЕНА.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_ОТМЕТКА_ОБ_ОПЛАТЕ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((bool)(Original_ОТМЕТКА_ОБ_ОПЛАТЕ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_ОТМЕТКА_О_ВОЗВРАЩЕНИИ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((bool)(Original_ОТМЕТКА_О_ВОЗВРАЩЕНИИ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_КОД_СОТРУДНИКА.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((int)(Original_КОД_СОТРУДНИКА.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int КОД_АВТОМОБИЛЯ, string ЗАКАЗЧИК, string ОТКУДА, string КУДА, global::System.Nullable<global::System.DateTime> ДАТА_ОТПРАВЛЕНИЯ, global::System.Nullable<global::System.DateTime> ДАТА_ПРИБЫТИЯ, global::System.Nullable<int> КОД_ГРУЗА, global::System.Nullable<int> ЦЕНА, global::System.Nullable<bool> ОТМЕТКА_ОБ_ОПЛАТЕ, global::System.Nullable<bool> ОТМЕТКА_О_ВОЗВРАЩЕНИИ, global::System.Nullable<int> КОД_СОТРУДНИКА) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(КОД_АВТОМОБИЛЯ));
            if ((ЗАКАЗЧИК == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ЗАКАЗЧИК));
            }
            if ((ОТКУДА == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ОТКУДА));
            }
            if ((КУДА == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(КУДА));
            }
            if ((ДАТА_ОТПРАВЛЕНИЯ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(ДАТА_ОТПРАВЛЕНИЯ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ДАТА_ПРИБЫТИЯ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(ДАТА_ПРИБЫТИЯ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((КОД_ГРУЗА.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(КОД_ГРУЗА.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((ЦЕНА.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(ЦЕНА.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((ОТМЕТКА_ОБ_ОПЛАТЕ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((bool)(ОТМЕТКА_ОБ_ОПЛАТЕ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((ОТМЕТКА_О_ВОЗВРАЩЕНИИ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((bool)(ОТМЕТКА_О_ВОЗВРАЩЕНИИ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((КОД_СОТРУДНИКА.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(КОД_СОТРУДНИКА.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int КОД_АВТОМОБИЛЯ, 
                    string ЗАКАЗЧИК, 
                    string ОТКУДА, 
                    string КУДА, 
                    global::System.Nullable<global::System.DateTime> ДАТА_ОТПРАВЛЕНИЯ, 
                    global::System.Nullable<global::System.DateTime> ДАТА_ПРИБЫТИЯ, 
                    global::System.Nullable<int> КОД_ГРУЗА, 
                    global::System.Nullable<int> ЦЕНА, 
                    global::System.Nullable<bool> ОТМЕТКА_ОБ_ОПЛАТЕ, 
                    global::System.Nullable<bool> ОТМЕТКА_О_ВОЗВРАЩЕНИИ, 
                    global::System.Nullable<int> КОД_СОТРУДНИКА, 
                    int Original_КОД_АВТОМОБИЛЯ, 
                    string Original_ЗАКАЗЧИК, 
                    string Original_ОТКУДА, 
                    string Original_КУДА, 
                    global::System.Nullable<global::System.DateTime> Original_ДАТА_ОТПРАВЛЕНИЯ, 
                    global::System.Nullable<global::System.DateTime> Original_ДАТА_ПРИБЫТИЯ, 
                    global::System.Nullable<int> Original_КОД_ГРУЗА, 
                    global::System.Nullable<int> Original_ЦЕНА, 
                    global::System.Nullable<bool> Original_ОТМЕТКА_ОБ_ОПЛАТЕ, 
                    global::System.Nullable<bool> Original_ОТМЕТКА_О_ВОЗВРАЩЕНИИ, 
                    global::System.Nullable<int> Original_КОД_СОТРУДНИКА) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(КОД_АВТОМОБИЛЯ));
            if ((ЗАКАЗЧИК == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ЗАКАЗЧИК));
            }
            if ((ОТКУДА == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ОТКУДА));
            }
            if ((КУДА == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(КУДА));
            }
            if ((ДАТА_ОТПРАВЛЕНИЯ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(ДАТА_ОТПРАВЛЕНИЯ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ДАТА_ПРИБЫТИЯ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(ДАТА_ПРИБЫТИЯ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((КОД_ГРУЗА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(КОД_ГРУЗА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((ЦЕНА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(ЦЕНА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((ОТМЕТКА_ОБ_ОПЛАТЕ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((bool)(ОТМЕТКА_ОБ_ОПЛАТЕ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((ОТМЕТКА_О_ВОЗВРАЩЕНИИ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(ОТМЕТКА_О_ВОЗВРАЩЕНИИ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((КОД_СОТРУДНИКА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(КОД_СОТРУДНИКА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_КОД_АВТОМОБИЛЯ));
            if ((Original_ЗАКАЗЧИК == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_ЗАКАЗЧИК));
            }
            if ((Original_ОТКУДА == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_ОТКУДА));
            }
            if ((Original_КУДА == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_КУДА));
            }
            if ((Original_ДАТА_ОТПРАВЛЕНИЯ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(Original_ДАТА_ОТПРАВЛЕНИЯ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_ДАТА_ПРИБЫТИЯ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(Original_ДАТА_ПРИБЫТИЯ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_КОД_ГРУЗА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(Original_КОД_ГРУЗА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_ЦЕНА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(Original_ЦЕНА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_ОТМЕТКА_ОБ_ОПЛАТЕ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((bool)(Original_ОТМЕТКА_ОБ_ОПЛАТЕ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_ОТМЕТКА_О_ВОЗВРАЩЕНИИ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((bool)(Original_ОТМЕТКА_О_ВОЗВРАЩЕНИИ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_КОД_СОТРУДНИКА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(Original_КОД_СОТРУДНИКА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ЗАКАЗЧИК, 
                    string ОТКУДА, 
                    string КУДА, 
                    global::System.Nullable<global::System.DateTime> ДАТА_ОТПРАВЛЕНИЯ, 
                    global::System.Nullable<global::System.DateTime> ДАТА_ПРИБЫТИЯ, 
                    global::System.Nullable<int> КОД_ГРУЗА, 
                    global::System.Nullable<int> ЦЕНА, 
                    global::System.Nullable<bool> ОТМЕТКА_ОБ_ОПЛАТЕ, 
                    global::System.Nullable<bool> ОТМЕТКА_О_ВОЗВРАЩЕНИИ, 
                    global::System.Nullable<int> КОД_СОТРУДНИКА, 
                    int Original_КОД_АВТОМОБИЛЯ, 
                    string Original_ЗАКАЗЧИК, 
                    string Original_ОТКУДА, 
                    string Original_КУДА, 
                    global::System.Nullable<global::System.DateTime> Original_ДАТА_ОТПРАВЛЕНИЯ, 
                    global::System.Nullable<global::System.DateTime> Original_ДАТА_ПРИБЫТИЯ, 
                    global::System.Nullable<int> Original_КОД_ГРУЗА, 
                    global::System.Nullable<int> Original_ЦЕНА, 
                    global::System.Nullable<bool> Original_ОТМЕТКА_ОБ_ОПЛАТЕ, 
                    global::System.Nullable<bool> Original_ОТМЕТКА_О_ВОЗВРАЩЕНИИ, 
                    global::System.Nullable<int> Original_КОД_СОТРУДНИКА) {
            return this.Update(Original_КОД_АВТОМОБИЛЯ, ЗАКАЗЧИК, ОТКУДА, КУДА, ДАТА_ОТПРАВЛЕНИЯ, ДАТА_ПРИБЫТИЯ, КОД_ГРУЗА, ЦЕНА, ОТМЕТКА_ОБ_ОПЛАТЕ, ОТМЕТКА_О_ВОЗВРАЩЕНИИ, КОД_СОТРУДНИКА, Original_КОД_АВТОМОБИЛЯ, Original_ЗАКАЗЧИК, Original_ОТКУДА, Original_КУДА, Original_ДАТА_ОТПРАВЛЕНИЯ, Original_ДАТА_ПРИБЫТИЯ, Original_КОД_ГРУЗА, Original_ЦЕНА, Original_ОТМЕТКА_ОБ_ОПЛАТЕ, Original_ОТМЕТКА_О_ВОЗВРАЩЕНИИ, Original_КОД_СОТРУДНИКА);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class СотрудникиTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public СотрудникиTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Сотрудники";
            tableMapping.ColumnMappings.Add("КОД_СОТРУДНИКА", "КОД_СОТРУДНИКА");
            tableMapping.ColumnMappings.Add("ФИО", "ФИО");
            tableMapping.ColumnMappings.Add("ВОЗРАСТ", "ВОЗРАСТ");
            tableMapping.ColumnMappings.Add("ПОЛ", "ПОЛ");
            tableMapping.ColumnMappings.Add("АДРЕС", "АДРЕС");
            tableMapping.ColumnMappings.Add("ТЕЛЕФОН", "ТЕЛЕФОН");
            tableMapping.ColumnMappings.Add("ПАСПОРТНЫЕ_ДАННЫЕ", "ПАСПОРТНЫЕ_ДАННЫЕ");
            tableMapping.ColumnMappings.Add("КОД_ДОЛЖНОСТИ", "КОД_ДОЛЖНОСТИ");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Сотрудники] WHERE (([КОД_СОТРУДНИКА] = @Original_КОД_СОТРУДНИКА) AND ((@IsNull_ФИО = 1 AND [ФИО] IS NULL) OR ([ФИО] = @Original_ФИО)) AND ((@IsNull_ВОЗРАСТ = 1 AND [ВОЗРАСТ] IS NULL) OR ([ВОЗРАСТ] = @Original_ВОЗРАСТ)) AND ((@IsNull_ПОЛ = 1 AND [ПОЛ] IS NULL) OR ([ПОЛ] = @Original_ПОЛ)) AND ((@IsNull_АДРЕС = 1 AND [АДРЕС] IS NULL) OR ([АДРЕС] = @Original_АДРЕС)) AND ((@IsNull_ТЕЛЕФОН = 1 AND [ТЕЛЕФОН] IS NULL) OR ([ТЕЛЕФОН] = @Original_ТЕЛЕФОН)) AND ((@IsNull_ПАСПОРТНЫЕ_ДАННЫЕ = 1 AND [ПАСПОРТНЫЕ_ДАННЫЕ] IS NULL) OR ([ПАСПОРТНЫЕ_ДАННЫЕ] = @Original_ПАСПОРТНЫЕ_ДАННЫЕ)) AND ((@IsNull_КОД_ДОЛЖНОСТИ = 1 AND [КОД_ДОЛЖНОСТИ] IS NULL) OR ([КОД_ДОЛЖНОСТИ] = @Original_КОД_ДОЛЖНОСТИ)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_СОТРУДНИКА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_СОТРУДНИКА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ФИО", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ФИО", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ФИО", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ФИО", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ВОЗРАСТ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ВОЗРАСТ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ВОЗРАСТ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ВОЗРАСТ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ПОЛ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ПОЛ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ПОЛ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ПОЛ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_АДРЕС", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "АДРЕС", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_АДРЕС", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "АДРЕС", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ТЕЛЕФОН", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ТЕЛЕФОН", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ТЕЛЕФОН", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ТЕЛЕФОН", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ПАСПОРТНЫЕ_ДАННЫЕ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ПАСПОРТНЫЕ_ДАННЫЕ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ПАСПОРТНЫЕ_ДАННЫЕ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ПАСПОРТНЫЕ_ДАННЫЕ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_КОД_ДОЛЖНОСТИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ДОЛЖНОСТИ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_ДОЛЖНОСТИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ДОЛЖНОСТИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Сотрудники] ([КОД_СОТРУДНИКА], [ФИО], [ВОЗРАСТ], [ПОЛ], [АДРЕС], [ТЕЛЕФОН], [ПАСПОРТНЫЕ_ДАННЫЕ], [КОД_ДОЛЖНОСТИ]) VALUES (@КОД_СОТРУДНИКА, @ФИО, @ВОЗРАСТ, @ПОЛ, @АДРЕС, @ТЕЛЕФОН, @ПАСПОРТНЫЕ_ДАННЫЕ, @КОД_ДОЛЖНОСТИ);
SELECT КОД_СОТРУДНИКА, ФИО, ВОЗРАСТ, ПОЛ, АДРЕС, ТЕЛЕФОН, ПАСПОРТНЫЕ_ДАННЫЕ, КОД_ДОЛЖНОСТИ FROM Сотрудники WHERE (КОД_СОТРУДНИКА = @КОД_СОТРУДНИКА)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_СОТРУДНИКА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_СОТРУДНИКА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ФИО", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ФИО", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ВОЗРАСТ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ВОЗРАСТ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ПОЛ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ПОЛ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@АДРЕС", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "АДРЕС", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ТЕЛЕФОН", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ТЕЛЕФОН", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ПАСПОРТНЫЕ_ДАННЫЕ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ПАСПОРТНЫЕ_ДАННЫЕ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_ДОЛЖНОСТИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ДОЛЖНОСТИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Сотрудники] SET [КОД_СОТРУДНИКА] = @КОД_СОТРУДНИКА, [ФИО] = @ФИО, [ВОЗРАСТ] = @ВОЗРАСТ, [ПОЛ] = @ПОЛ, [АДРЕС] = @АДРЕС, [ТЕЛЕФОН] = @ТЕЛЕФОН, [ПАСПОРТНЫЕ_ДАННЫЕ] = @ПАСПОРТНЫЕ_ДАННЫЕ, [КОД_ДОЛЖНОСТИ] = @КОД_ДОЛЖНОСТИ WHERE (([КОД_СОТРУДНИКА] = @Original_КОД_СОТРУДНИКА) AND ((@IsNull_ФИО = 1 AND [ФИО] IS NULL) OR ([ФИО] = @Original_ФИО)) AND ((@IsNull_ВОЗРАСТ = 1 AND [ВОЗРАСТ] IS NULL) OR ([ВОЗРАСТ] = @Original_ВОЗРАСТ)) AND ((@IsNull_ПОЛ = 1 AND [ПОЛ] IS NULL) OR ([ПОЛ] = @Original_ПОЛ)) AND ((@IsNull_АДРЕС = 1 AND [АДРЕС] IS NULL) OR ([АДРЕС] = @Original_АДРЕС)) AND ((@IsNull_ТЕЛЕФОН = 1 AND [ТЕЛЕФОН] IS NULL) OR ([ТЕЛЕФОН] = @Original_ТЕЛЕФОН)) AND ((@IsNull_ПАСПОРТНЫЕ_ДАННЫЕ = 1 AND [ПАСПОРТНЫЕ_ДАННЫЕ] IS NULL) OR ([ПАСПОРТНЫЕ_ДАННЫЕ] = @Original_ПАСПОРТНЫЕ_ДАННЫЕ)) AND ((@IsNull_КОД_ДОЛЖНОСТИ = 1 AND [КОД_ДОЛЖНОСТИ] IS NULL) OR ([КОД_ДОЛЖНОСТИ] = @Original_КОД_ДОЛЖНОСТИ)));
SELECT КОД_СОТРУДНИКА, ФИО, ВОЗРАСТ, ПОЛ, АДРЕС, ТЕЛЕФОН, ПАСПОРТНЫЕ_ДАННЫЕ, КОД_ДОЛЖНОСТИ FROM Сотрудники WHERE (КОД_СОТРУДНИКА = @КОД_СОТРУДНИКА)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_СОТРУДНИКА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_СОТРУДНИКА", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ФИО", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ФИО", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ВОЗРАСТ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ВОЗРАСТ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ПОЛ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ПОЛ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@АДРЕС", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "АДРЕС", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ТЕЛЕФОН", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ТЕЛЕФОН", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ПАСПОРТНЫЕ_ДАННЫЕ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ПАСПОРТНЫЕ_ДАННЫЕ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@КОД_ДОЛЖНОСТИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ДОЛЖНОСТИ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_СОТРУДНИКА", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_СОТРУДНИКА", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ФИО", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ФИО", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ФИО", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ФИО", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ВОЗРАСТ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ВОЗРАСТ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ВОЗРАСТ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ВОЗРАСТ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ПОЛ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ПОЛ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ПОЛ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ПОЛ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_АДРЕС", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "АДРЕС", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_АДРЕС", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "АДРЕС", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ТЕЛЕФОН", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ТЕЛЕФОН", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ТЕЛЕФОН", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ТЕЛЕФОН", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ПАСПОРТНЫЕ_ДАННЫЕ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ПАСПОРТНЫЕ_ДАННЫЕ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ПАСПОРТНЫЕ_ДАННЫЕ", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ПАСПОРТНЫЕ_ДАННЫЕ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_КОД_ДОЛЖНОСТИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ДОЛЖНОСТИ", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_КОД_ДОЛЖНОСТИ", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "КОД_ДОЛЖНОСТИ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Goods2.Properties.Settings.Default.TransportConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT КОД_СОТРУДНИКА, ФИО, ВОЗРАСТ, ПОЛ, АДРЕС, ТЕЛЕФОН, ПАСПОРТНЫЕ_ДАННЫЕ, КОД_" +
                "ДОЛЖНОСТИ FROM dbo.Сотрудники";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(TransportDataSet.СотрудникиDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual TransportDataSet.СотрудникиDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            TransportDataSet.СотрудникиDataTable dataTable = new TransportDataSet.СотрудникиDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(TransportDataSet.СотрудникиDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(TransportDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Сотрудники");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_КОД_СОТРУДНИКА, string Original_ФИО, global::System.Nullable<int> Original_ВОЗРАСТ, string Original_ПОЛ, string Original_АДРЕС, string Original_ТЕЛЕФОН, string Original_ПАСПОРТНЫЕ_ДАННЫЕ, global::System.Nullable<int> Original_КОД_ДОЛЖНОСТИ) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_КОД_СОТРУДНИКА));
            if ((Original_ФИО == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ФИО));
            }
            if ((Original_ВОЗРАСТ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_ВОЗРАСТ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_ПОЛ == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_ПОЛ));
            }
            if ((Original_АДРЕС == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_АДРЕС));
            }
            if ((Original_ТЕЛЕФОН == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_ТЕЛЕФОН));
            }
            if ((Original_ПАСПОРТНЫЕ_ДАННЫЕ == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_ПАСПОРТНЫЕ_ДАННЫЕ));
            }
            if ((Original_КОД_ДОЛЖНОСТИ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_КОД_ДОЛЖНОСТИ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int КОД_СОТРУДНИКА, string ФИО, global::System.Nullable<int> ВОЗРАСТ, string ПОЛ, string АДРЕС, string ТЕЛЕФОН, string ПАСПОРТНЫЕ_ДАННЫЕ, global::System.Nullable<int> КОД_ДОЛЖНОСТИ) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(КОД_СОТРУДНИКА));
            if ((ФИО == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ФИО));
            }
            if ((ВОЗРАСТ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(ВОЗРАСТ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ПОЛ == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ПОЛ));
            }
            if ((АДРЕС == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(АДРЕС));
            }
            if ((ТЕЛЕФОН == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ТЕЛЕФОН));
            }
            if ((ПАСПОРТНЫЕ_ДАННЫЕ == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(ПАСПОРТНЫЕ_ДАННЫЕ));
            }
            if ((КОД_ДОЛЖНОСТИ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(КОД_ДОЛЖНОСТИ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int КОД_СОТРУДНИКА, 
                    string ФИО, 
                    global::System.Nullable<int> ВОЗРАСТ, 
                    string ПОЛ, 
                    string АДРЕС, 
                    string ТЕЛЕФОН, 
                    string ПАСПОРТНЫЕ_ДАННЫЕ, 
                    global::System.Nullable<int> КОД_ДОЛЖНОСТИ, 
                    int Original_КОД_СОТРУДНИКА, 
                    string Original_ФИО, 
                    global::System.Nullable<int> Original_ВОЗРАСТ, 
                    string Original_ПОЛ, 
                    string Original_АДРЕС, 
                    string Original_ТЕЛЕФОН, 
                    string Original_ПАСПОРТНЫЕ_ДАННЫЕ, 
                    global::System.Nullable<int> Original_КОД_ДОЛЖНОСТИ) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(КОД_СОТРУДНИКА));
            if ((ФИО == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ФИО));
            }
            if ((ВОЗРАСТ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(ВОЗРАСТ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ПОЛ == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ПОЛ));
            }
            if ((АДРЕС == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(АДРЕС));
            }
            if ((ТЕЛЕФОН == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(ТЕЛЕФОН));
            }
            if ((ПАСПОРТНЫЕ_ДАННЫЕ == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(ПАСПОРТНЫЕ_ДАННЫЕ));
            }
            if ((КОД_ДОЛЖНОСТИ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(КОД_ДОЛЖНОСТИ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_КОД_СОТРУДНИКА));
            if ((Original_ФИО == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_ФИО));
            }
            if ((Original_ВОЗРАСТ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_ВОЗРАСТ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_ПОЛ == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_ПОЛ));
            }
            if ((Original_АДРЕС == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_АДРЕС));
            }
            if ((Original_ТЕЛЕФОН == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_ТЕЛЕФОН));
            }
            if ((Original_ПАСПОРТНЫЕ_ДАННЫЕ == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_ПАСПОРТНЫЕ_ДАННЫЕ));
            }
            if ((Original_КОД_ДОЛЖНОСТИ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Original_КОД_ДОЛЖНОСТИ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ФИО, global::System.Nullable<int> ВОЗРАСТ, string ПОЛ, string АДРЕС, string ТЕЛЕФОН, string ПАСПОРТНЫЕ_ДАННЫЕ, global::System.Nullable<int> КОД_ДОЛЖНОСТИ, int Original_КОД_СОТРУДНИКА, string Original_ФИО, global::System.Nullable<int> Original_ВОЗРАСТ, string Original_ПОЛ, string Original_АДРЕС, string Original_ТЕЛЕФОН, string Original_ПАСПОРТНЫЕ_ДАННЫЕ, global::System.Nullable<int> Original_КОД_ДОЛЖНОСТИ) {
            return this.Update(Original_КОД_СОТРУДНИКА, ФИО, ВОЗРАСТ, ПОЛ, АДРЕС, ТЕЛЕФОН, ПАСПОРТНЫЕ_ДАННЫЕ, КОД_ДОЛЖНОСТИ, Original_КОД_СОТРУДНИКА, Original_ФИО, Original_ВОЗРАСТ, Original_ПОЛ, Original_АДРЕС, Original_ТЕЛЕФОН, Original_ПАСПОРТНЫЕ_ДАННЫЕ, Original_КОД_ДОЛЖНОСТИ);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class АвтопаркTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public АвтопаркTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Автопарк";
            tableMapping.ColumnMappings.Add("КОД_АВТОМОБИЛЯ", "КОД_АВТОМОБИЛЯ");
            tableMapping.ColumnMappings.Add("КОД_МАРКИ", "КОД_МАРКИ");
            tableMapping.ColumnMappings.Add("НАИМЕНОВАНИЕ", "НАИМЕНОВАНИЕ");
            tableMapping.ColumnMappings.Add("ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ", "ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ");
            tableMapping.ColumnMappings.Add("ОПИСАНИЕ", "ОПИСАНИЕ");
            tableMapping.ColumnMappings.Add("КОД_ВИДА_АВТОМОБИЛЯ", "КОД_ВИДА_АВТОМОБИЛЯ");
            tableMapping.ColumnMappings.Add("НАИМЕНОВАНИЕ_ВИДА_АВТОМОБИЛЯ", "НАИМЕНОВАНИЕ_ВИДА_АВТОМОБИЛЯ");
            tableMapping.ColumnMappings.Add("ОПИСАНИЕ_ВИДА", "ОПИСАНИЕ_ВИДА");
            tableMapping.ColumnMappings.Add("РЕГИСТРАЦИОННЫЙ_НОМЕР", "РЕГИСТРАЦИОННЫЙ_НОМЕР");
            tableMapping.ColumnMappings.Add("НОМЕР_КУЗОВА", "НОМЕР_КУЗОВА");
            tableMapping.ColumnMappings.Add("НОМЕР_ДВИГАТЕЛЯ", "НОМЕР_ДВИГАТЕЛЯ");
            tableMapping.ColumnMappings.Add("ГОД_ВЫПУСКА", "ГОД_ВЫПУСКА");
            tableMapping.ColumnMappings.Add("КОД_СОТРУДНИКА_ВОДИТЕЛЯ", "КОД_СОТРУДНИКА_ВОДИТЕЛЯ");
            tableMapping.ColumnMappings.Add("ФИО", "ФИО");
            tableMapping.ColumnMappings.Add("ТЕЛЕФОН", "ТЕЛЕФОН");
            tableMapping.ColumnMappings.Add("ДАТА_ПОСЛЕДНЕГО_ТО", "ДАТА_ПОСЛЕДНЕГО_ТО");
            tableMapping.ColumnMappings.Add("КОД_СОТРУДНИКА_МЕХАНИКА", "КОД_СОТРУДНИКА_МЕХАНИКА");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Goods2.Properties.Settings.Default.TransportConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT КОД_АВТОМОБИЛЯ, КОД_МАРКИ, НАИМЕНОВАНИЕ, ТЕХНИЧЕСКИЕ_ХАРАКТЕРИСТИКИ, ОПИСАНИЕ, КОД_ВИДА_АВТОМОБИЛЯ, НАИМЕНОВАНИЕ_ВИДА_АВТОМОБИЛЯ, ОПИСАНИЕ_ВИДА, РЕГИСТРАЦИОННЫЙ_НОМЕР, НОМЕР_КУЗОВА, НОМЕР_ДВИГАТЕЛЯ, ГОД_ВЫПУСКА, КОД_СОТРУДНИКА_ВОДИТЕЛЯ, ФИО, ТЕЛЕФОН, ДАТА_ПОСЛЕДНЕГО_ТО, КОД_СОТРУДНИКА_МЕХАНИКА FROM dbo.Автопарк";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(TransportDataSet.АвтопаркDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual TransportDataSet.АвтопаркDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            TransportDataSet.АвтопаркDataTable dataTable = new TransportDataSet.АвтопаркDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ЗаказыTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ЗаказыTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Заказы";
            tableMapping.ColumnMappings.Add("КОД_АВТОМОБИЛЯ", "КОД_АВТОМОБИЛЯ");
            tableMapping.ColumnMappings.Add("КОД_МАРКИ", "КОД_МАРКИ");
            tableMapping.ColumnMappings.Add("КОД_ВИДА_АВТОМОБИЛЯ", "КОД_ВИДА_АВТОМОБИЛЯ");
            tableMapping.ColumnMappings.Add("РЕГИСТРАЦИОННЫЙ_НОМЕР", "РЕГИСТРАЦИОННЫЙ_НОМЕР");
            tableMapping.ColumnMappings.Add("ЗАКАЗЧИК", "ЗАКАЗЧИК");
            tableMapping.ColumnMappings.Add("ОТКУДА", "ОТКУДА");
            tableMapping.ColumnMappings.Add("КУДА", "КУДА");
            tableMapping.ColumnMappings.Add("ДАТА_ОТПРАВЛЕНИЯ", "ДАТА_ОТПРАВЛЕНИЯ");
            tableMapping.ColumnMappings.Add("ДАТА_ПРИБЫТИЯ", "ДАТА_ПРИБЫТИЯ");
            tableMapping.ColumnMappings.Add("КОД_ГРУЗА", "КОД_ГРУЗА");
            tableMapping.ColumnMappings.Add("НАИМЕНОВАНИЕ", "НАИМЕНОВАНИЕ");
            tableMapping.ColumnMappings.Add("КОД_ВИДА_ГРУЗА", "КОД_ВИДА_ГРУЗА");
            tableMapping.ColumnMappings.Add("СРОК_ГОДНОСТИ", "СРОК_ГОДНОСТИ");
            tableMapping.ColumnMappings.Add("ЦЕНА", "ЦЕНА");
            tableMapping.ColumnMappings.Add("ОТМЕТКА_ОБ_ОПЛАТЕ", "ОТМЕТКА_ОБ_ОПЛАТЕ");
            tableMapping.ColumnMappings.Add("ОТМЕТКА_О_ВОЗВРАЩЕНИИ", "ОТМЕТКА_О_ВОЗВРАЩЕНИИ");
            tableMapping.ColumnMappings.Add("КОД_СОТРУДНИКА", "КОД_СОТРУДНИКА");
            tableMapping.ColumnMappings.Add("ФИО", "ФИО");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Goods2.Properties.Settings.Default.TransportConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT КОД_АВТОМОБИЛЯ, КОД_МАРКИ, КОД_ВИДА_АВТОМОБИЛЯ, РЕГИСТРАЦИОННЫЙ_НОМЕР, ЗАКАЗЧИК, ОТКУДА, КУДА, ДАТА_ОТПРАВЛЕНИЯ, ДАТА_ПРИБЫТИЯ, КОД_ГРУЗА, НАИМЕНОВАНИЕ, КОД_ВИДА_ГРУЗА, СРОК_ГОДНОСТИ, ЦЕНА, ОТМЕТКА_ОБ_ОПЛАТЕ, ОТМЕТКА_О_ВОЗВРАЩЕНИИ, КОД_СОТРУДНИКА, ФИО FROM dbo.Заказы";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(TransportDataSet.ЗаказыDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual TransportDataSet.ЗаказыDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            TransportDataSet.ЗаказыDataTable dataTable = new TransportDataSet.ЗаказыDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Отдел_кадровTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public Отдел_кадровTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Отдел_кадров";
            tableMapping.ColumnMappings.Add("КОД_СОТРУДНИКА", "КОД_СОТРУДНИКА");
            tableMapping.ColumnMappings.Add("ФИО", "ФИО");
            tableMapping.ColumnMappings.Add("КОД_ДОЛЖНОСТИ", "КОД_ДОЛЖНОСТИ");
            tableMapping.ColumnMappings.Add("НАИМЕНОВАНИЕ_ДОЛЖНОСТИ", "НАИМЕНОВАНИЕ_ДОЛЖНОСТИ");
            tableMapping.ColumnMappings.Add("ОКЛАД", "ОКЛАД");
            tableMapping.ColumnMappings.Add("ОБЯЗАННОСТИ", "ОБЯЗАННОСТИ");
            tableMapping.ColumnMappings.Add("ТРЕБОВАНИЯ", "ТРЕБОВАНИЯ");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Goods2.Properties.Settings.Default.TransportConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT КОД_СОТРУДНИКА, ФИО, КОД_ДОЛЖНОСТИ, НАИМЕНОВАНИЕ_ДОЛЖНОСТИ, ОКЛАД, ОБЯЗАНН" +
                "ОСТИ, ТРЕБОВАНИЯ FROM dbo.Отдел_кадров";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(TransportDataSet.Отдел_кадровDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual TransportDataSet.Отдел_кадровDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            TransportDataSet.Отдел_кадровDataTable dataTable = new TransportDataSet.Отдел_кадровDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Перевозимые_грузыTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public Перевозимые_грузыTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Перевозимые_грузы";
            tableMapping.ColumnMappings.Add("КОД_ГРУЗА", "КОД_ГРУЗА");
            tableMapping.ColumnMappings.Add("НАИМЕНОВАНИЕ", "НАИМЕНОВАНИЕ");
            tableMapping.ColumnMappings.Add("СРОК_ГОДНОСТИ", "СРОК_ГОДНОСТИ");
            tableMapping.ColumnMappings.Add("ОСОБЕННОСТИ", "ОСОБЕННОСТИ");
            tableMapping.ColumnMappings.Add("КОД_ВИДА_ГРУЗА", "КОД_ВИДА_ГРУЗА");
            tableMapping.ColumnMappings.Add("Наименование вида груза", "Наименование вида груза");
            tableMapping.ColumnMappings.Add("КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ", "КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Goods2.Properties.Settings.Default.TransportConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT КОД_ГРУЗА, НАИМЕНОВАНИЕ, СРОК_ГОДНОСТИ, ОСОБЕННОСТИ, КОД_ВИДА_ГРУЗА, [Наим" +
                "енование вида груза], КОД_ВИДА_АВТОМОБИЛЯ_ДЛЯ_ТРАНСПОРТИРОВКИ FROM dbo.Перевозим" +
                "ые_грузы";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(TransportDataSet.Перевозимые_грузыDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual TransportDataSet.Перевозимые_грузыDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            TransportDataSet.Перевозимые_грузыDataTable dataTable = new TransportDataSet.Перевозимые_грузыDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ТранспортировкаTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ТранспортировкаTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Транспортировка";
            tableMapping.ColumnMappings.Add("Код вида груза", "Код вида груза");
            tableMapping.ColumnMappings.Add("Наименование груза", "Наименование груза");
            tableMapping.ColumnMappings.Add("Код вида автомобиля", "Код вида автомобиля");
            tableMapping.ColumnMappings.Add("Наименование", "Наименование");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Goods2.Properties.Settings.Default.TransportConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [Код вида груза], [Наименование груза], [Код вида автомобиля], Наименовани" +
                "е FROM dbo.Транспортировка";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(TransportDataSet.ТранспортировкаDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual TransportDataSet.ТранспортировкаDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            TransportDataSet.ТранспортировкаDataTable dataTable = new TransportDataSet.ТранспортировкаDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private АвтомобилиTableAdapter _автомобилиTableAdapter;
        
        private Виды_автомобилейTableAdapter _виды_автомобилейTableAdapter;
        
        private Виды_грузовTableAdapter _виды_грузовTableAdapter;
        
        private ГрузыTableAdapter _грузыTableAdapter;
        
        private ДолжностиTableAdapter _должностиTableAdapter;
        
        private Марки_автомобилейTableAdapter _марки_автомобилейTableAdapter;
        
        private РейсыTableAdapter _рейсыTableAdapter;
        
        private СотрудникиTableAdapter _сотрудникиTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public АвтомобилиTableAdapter АвтомобилиTableAdapter {
            get {
                return this._автомобилиTableAdapter;
            }
            set {
                this._автомобилиTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Виды_автомобилейTableAdapter Виды_автомобилейTableAdapter {
            get {
                return this._виды_автомобилейTableAdapter;
            }
            set {
                this._виды_автомобилейTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Виды_грузовTableAdapter Виды_грузовTableAdapter {
            get {
                return this._виды_грузовTableAdapter;
            }
            set {
                this._виды_грузовTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ГрузыTableAdapter ГрузыTableAdapter {
            get {
                return this._грузыTableAdapter;
            }
            set {
                this._грузыTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ДолжностиTableAdapter ДолжностиTableAdapter {
            get {
                return this._должностиTableAdapter;
            }
            set {
                this._должностиTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Марки_автомобилейTableAdapter Марки_автомобилейTableAdapter {
            get {
                return this._марки_автомобилейTableAdapter;
            }
            set {
                this._марки_автомобилейTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public РейсыTableAdapter РейсыTableAdapter {
            get {
                return this._рейсыTableAdapter;
            }
            set {
                this._рейсыTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public СотрудникиTableAdapter СотрудникиTableAdapter {
            get {
                return this._сотрудникиTableAdapter;
            }
            set {
                this._сотрудникиTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._автомобилиTableAdapter != null) 
                            && (this._автомобилиTableAdapter.Connection != null))) {
                    return this._автомобилиTableAdapter.Connection;
                }
                if (((this._виды_автомобилейTableAdapter != null) 
                            && (this._виды_автомобилейTableAdapter.Connection != null))) {
                    return this._виды_автомобилейTableAdapter.Connection;
                }
                if (((this._виды_грузовTableAdapter != null) 
                            && (this._виды_грузовTableAdapter.Connection != null))) {
                    return this._виды_грузовTableAdapter.Connection;
                }
                if (((this._грузыTableAdapter != null) 
                            && (this._грузыTableAdapter.Connection != null))) {
                    return this._грузыTableAdapter.Connection;
                }
                if (((this._должностиTableAdapter != null) 
                            && (this._должностиTableAdapter.Connection != null))) {
                    return this._должностиTableAdapter.Connection;
                }
                if (((this._марки_автомобилейTableAdapter != null) 
                            && (this._марки_автомобилейTableAdapter.Connection != null))) {
                    return this._марки_автомобилейTableAdapter.Connection;
                }
                if (((this._рейсыTableAdapter != null) 
                            && (this._рейсыTableAdapter.Connection != null))) {
                    return this._рейсыTableAdapter.Connection;
                }
                if (((this._сотрудникиTableAdapter != null) 
                            && (this._сотрудникиTableAdapter.Connection != null))) {
                    return this._сотрудникиTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._автомобилиTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._виды_автомобилейTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._виды_грузовTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._грузыTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._должностиTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._марки_автомобилейTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._рейсыTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._сотрудникиTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(TransportDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._виды_грузовTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Виды_грузов.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._виды_грузовTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._должностиTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Должности.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._должностиTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._грузыTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Грузы.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._грузыTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._сотрудникиTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Сотрудники.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._сотрудникиTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._виды_автомобилейTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Виды_автомобилей.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._виды_автомобилейTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._марки_автомобилейTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Марки_автомобилей.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._марки_автомобилейTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._рейсыTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Рейсы.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._рейсыTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._автомобилиTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Автомобили.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._автомобилиTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(TransportDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._виды_грузовTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Виды_грузов.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._виды_грузовTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._должностиTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Должности.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._должностиTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._грузыTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Грузы.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._грузыTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._сотрудникиTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Сотрудники.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._сотрудникиTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._виды_автомобилейTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Виды_автомобилей.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._виды_автомобилейTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._марки_автомобилейTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Марки_автомобилей.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._марки_автомобилейTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._рейсыTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Рейсы.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._рейсыTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._автомобилиTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Автомобили.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._автомобилиTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(TransportDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._автомобилиTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Автомобили.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._автомобилиTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._рейсыTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Рейсы.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._рейсыTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._марки_автомобилейTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Марки_автомобилей.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._марки_автомобилейTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._виды_автомобилейTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Виды_автомобилей.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._виды_автомобилейTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._сотрудникиTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Сотрудники.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._сотрудникиTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._грузыTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Грузы.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._грузыTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._должностиTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Должности.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._должностиTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._виды_грузовTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Виды_грузов.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._виды_грузовTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(TransportDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._автомобилиTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._автомобилиTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._виды_автомобилейTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._виды_автомобилейTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._виды_грузовTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._виды_грузовTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._грузыTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._грузыTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._должностиTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._должностиTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._марки_автомобилейTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._марки_автомобилейTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._рейсыTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._рейсыTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._сотрудникиTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._сотрудникиTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager не содержит сведений о подключении. Укажите для каждого адапт" +
                        "ера таблицы TableAdapterManager допустимый экземпляр адаптера таблицы.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("Не удается начать транзакцию. Текущее соединение данных не поддерживает транзакци" +
                        "и или текущее состояние не позволяет начать транзакцию.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._автомобилиTableAdapter != null)) {
                    revertConnections.Add(this._автомобилиTableAdapter, this._автомобилиTableAdapter.Connection);
                    this._автомобилиTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._автомобилиTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._автомобилиTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._автомобилиTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._автомобилиTableAdapter.Adapter);
                    }
                }
                if ((this._виды_автомобилейTableAdapter != null)) {
                    revertConnections.Add(this._виды_автомобилейTableAdapter, this._виды_автомобилейTableAdapter.Connection);
                    this._виды_автомобилейTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._виды_автомобилейTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._виды_автомобилейTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._виды_автомобилейTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._виды_автомобилейTableAdapter.Adapter);
                    }
                }
                if ((this._виды_грузовTableAdapter != null)) {
                    revertConnections.Add(this._виды_грузовTableAdapter, this._виды_грузовTableAdapter.Connection);
                    this._виды_грузовTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._виды_грузовTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._виды_грузовTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._виды_грузовTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._виды_грузовTableAdapter.Adapter);
                    }
                }
                if ((this._грузыTableAdapter != null)) {
                    revertConnections.Add(this._грузыTableAdapter, this._грузыTableAdapter.Connection);
                    this._грузыTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._грузыTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._грузыTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._грузыTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._грузыTableAdapter.Adapter);
                    }
                }
                if ((this._должностиTableAdapter != null)) {
                    revertConnections.Add(this._должностиTableAdapter, this._должностиTableAdapter.Connection);
                    this._должностиTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._должностиTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._должностиTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._должностиTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._должностиTableAdapter.Adapter);
                    }
                }
                if ((this._марки_автомобилейTableAdapter != null)) {
                    revertConnections.Add(this._марки_автомобилейTableAdapter, this._марки_автомобилейTableAdapter.Connection);
                    this._марки_автомобилейTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._марки_автомобилейTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._марки_автомобилейTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._марки_автомобилейTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._марки_автомобилейTableAdapter.Adapter);
                    }
                }
                if ((this._рейсыTableAdapter != null)) {
                    revertConnections.Add(this._рейсыTableAdapter, this._рейсыTableAdapter.Connection);
                    this._рейсыTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._рейсыTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._рейсыTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._рейсыTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._рейсыTableAdapter.Adapter);
                    }
                }
                if ((this._сотрудникиTableAdapter != null)) {
                    revertConnections.Add(this._сотрудникиTableAdapter, this._сотрудникиTableAdapter.Connection);
                    this._сотрудникиTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._сотрудникиTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._сотрудникиTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._сотрудникиTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._сотрудникиTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._автомобилиTableAdapter != null)) {
                    this._автомобилиTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._автомобилиTableAdapter]));
                    this._автомобилиTableAdapter.Transaction = null;
                }
                if ((this._виды_автомобилейTableAdapter != null)) {
                    this._виды_автомобилейTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._виды_автомобилейTableAdapter]));
                    this._виды_автомобилейTableAdapter.Transaction = null;
                }
                if ((this._виды_грузовTableAdapter != null)) {
                    this._виды_грузовTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._виды_грузовTableAdapter]));
                    this._виды_грузовTableAdapter.Transaction = null;
                }
                if ((this._грузыTableAdapter != null)) {
                    this._грузыTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._грузыTableAdapter]));
                    this._грузыTableAdapter.Transaction = null;
                }
                if ((this._должностиTableAdapter != null)) {
                    this._должностиTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._должностиTableAdapter]));
                    this._должностиTableAdapter.Transaction = null;
                }
                if ((this._марки_автомобилейTableAdapter != null)) {
                    this._марки_автомобилейTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._марки_автомобилейTableAdapter]));
                    this._марки_автомобилейTableAdapter.Transaction = null;
                }
                if ((this._рейсыTableAdapter != null)) {
                    this._рейсыTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._рейсыTableAdapter]));
                    this._рейсыTableAdapter.Transaction = null;
                }
                if ((this._сотрудникиTableAdapter != null)) {
                    this._сотрудникиTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._сотрудникиTableAdapter]));
                    this._сотрудникиTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591